{"version":3,"sources":["variables.module.scss","components/flow/actions/sendemail/SendEmailForm.module.scss","components/flow/actions/setrunresult/SetRunResultForm.module.scss","components/flow/actions/startsession/StartSession.module.scss","components/counter/Counter.module.scss","components/mountscroll/MountScroll.module.scss","temba/TembaSelect.module.scss","components/form/textinput/UnicodeList.module.scss","components/flow/actions/addurn/AddURNForm.module.scss","components/form/multichoice/MultiChoice.module.scss","components/flow/actions/saymsg/SayMsg.module.scss","components/flow/actions/transferairtime/TransferAirtime.module.scss","components/form/optionaltext/OptionalTextInput.module.scss","components/form/ValidationFailures.module.scss","components/flow/routers/field/FieldRouterForm.module.scss","components/flow/routers/ticket/TicketRouterForm.module.scss","components/canvas/CanvasDraggable.module.scss","components/simulator/Simulator.module.scss","static/images/map.jpg","components/nodeeditor/TypeList.module.scss","components/flow/actions/changegroups/removegroups/RemoveGroupsForm.module.scss","components/flow/actions/updatecontact/UpdateContactForm.module.scss","components/flow/routers/airtime/AirtimeRouterForm.module.scss","components/flow/routers/digits/DigitsRouterForm.module.scss","components/flow/routers/resthook/ResthookRouterForm.module.scss","components/flow/routers/wait/WaitRouterForm.module.scss","components/flow/routers/classify/ClassifyRouterForm.module.scss","components/loading/Loading.module.scss","components/flow/Flow.module.scss","global.module.scss","components/translator/TranslatorTab.module.scss","components/simulator/LogEvent.module.scss","components/dialog/Dialog.module.scss","components/form/textinput/TextInputElement.module.scss","components/flow/exit/Exit.module.scss","flowTypes.ts","services/Localization.ts","components/button/Button.tsx","utils/index.tsx","components/dialog/Dialog.tsx","store/constants.ts","components/fixy/Fixy.tsx","store/flowContext.ts","config/interfaces.ts","store/currencies.ts","external/index.ts","components/flow/actions/helpers.tsx","components/flow/props.ts","config/ConfigProvider.tsx","components/flow/actions/addlabels/AddLabels.tsx","components/form/assetselector/helpers.ts","components/form/FormElement.tsx","utils/reactselect.ts","utils/completion.ts","config/i18n/index.js","temba/TembaSelect.tsx","components/form/assetselector/AssetSelector.tsx","components/form/assetselector/widgets.tsx","config/helpers.ts","components/nodeeditor/TypeList.tsx","store/validators.ts","store/nodeEditor.ts","components/flow/actions/addlabels/helpers.ts","components/flow/actions/addlabels/AddLabelsForm.tsx","components/flow/actions/addurn/helpers.ts","components/form/textinput/constants.ts","components/flow/actions/addurn/AddURN.tsx","components/form/select/SelectElement.tsx","components/form/textinput/UnicodeList.tsx","components/form/textinput/CharCount.tsx","components/form/textinput/TextInputElement.tsx","components/form/textinput/ExcellentParser.ts","components/form/textinput/helpers.ts","components/flow/actions/addurn/AddURNForm.tsx","components/flow/actions/callresthook/CallResthook.tsx","components/flow/actions/callwebhook/CallWebhook.tsx","components/flow/actions/changegroups/helpers.ts","components/flow/actions/changegroups/addgroups/AddGroupsForm.tsx","components/flow/actions/changegroups/addgroups/helpers.ts","components/flow/actions/changegroups/ChangeGroups.tsx","components/form/checkbox/CheckboxElement.tsx","components/flow/actions/changegroups/removegroups/RemoveGroupsForm.tsx","components/flow/actions/changegroups/removegroups/helpers.ts","components/flow/helpers.ts","components/flow/actions/localization/KeyLocalizationForm.tsx","components/flow/actions/localization/helpers.ts","components/pill/Pill.tsx","components/form/multichoice/MultiChoice.tsx","components/uploadbutton/UploadButton.tsx","components/flow/actions/localization/MsgLocalizationForm.tsx","components/flow/actions/missing/Missing.tsx","components/flow/actions/playaudio/PlayAudio.tsx","components/flow/actions/playaudio/PlayAudioForm.tsx","components/flow/actions/playaudio/helpers.ts","components/mediaplayer/MediaPlayer.tsx","components/flow/actions/saymsg/SayMsg.tsx","components/flow/actions/saymsg/SayMsgForm.tsx","components/flow/actions/saymsg/helpers.ts","components/flow/actions/sendbroadcast/SendBroadcast.tsx","components/flow/actions/sendbroadcast/SendBroadcastForm.tsx","components/flow/actions/sendbroadcast/helpers.ts","components/flow/actions/sendemail/SendEmail.tsx","components/form/select/tags/TaggingElement.tsx","components/flow/actions/sendemail/SendEmailForm.tsx","components/flow/actions/sendemail/helpers.ts","components/flow/actions/sendmsg/SendMsg.tsx","components/flow/actions/sendmsg/helpers.ts","components/flow/actions/sendmsg/SendMsgForm.tsx","components/flow/actions/setrunresult/SetRunResult.tsx","components/flow/actions/setrunresult/SetRunResultForm.tsx","components/flow/actions/setrunresult/helpers.ts","components/flow/actions/startflow/StartFlow.tsx","components/flow/actions/startsession/StartSession.tsx","components/flow/routers/constants.ts","components/flow/actions/startsession/StartSessionForm.tsx","components/flow/actions/startsession/helpers.ts","components/flow/actions/transferairtime/TransferAirtime.tsx","components/flow/actions/updatecontact/UpdateContact.tsx","components/helpers.ts","components/flow/routers/helpers.ts","components/flow/node/helpers.ts","store/mutators.ts","components/flow/actions/updatecontact/UpdateContactForm.tsx","components/flow/routers/airtime/currency/CurrencyElement.tsx","components/form/optionaltext/OptionalTextInput.tsx","components/flow/routers/widgets.tsx","components/form/ValidationFailures.tsx","components/flow/routers/airtime/helpers.ts","components/flow/routers/airtime/AirtimeRouterForm.tsx","config/operatorConfigs.ts","components/flow/routers/case/helpers.ts","components/flow/routers/case/CaseElement.tsx","components/flow/routers/caselist/helpers.ts","components/flow/routers/caselist/CaseList.tsx","components/flow/routers/expression/ExpressionRouterForm.tsx","components/flow/routers/digits/DigitsRouterForm.tsx","components/flow/routers/digits/helpers.ts","components/nodeeditor/constants.ts","components/flow/routers/field/FieldRouterForm.tsx","components/flow/routers/expression/helpers.ts","components/flow/routers/field/helpers.ts","components/flow/routers/groups/helpers.ts","components/flow/routers/localization/helpers.ts","components/flow/routers/groups/GroupsRouterForm.tsx","components/flow/routers/localization/RouterLocalizationForm.tsx","components/flow/routers/menu/helpers.ts","components/flow/routers/menu/MenuRouterForm.tsx","components/flow/routers/random/helpers.ts","components/flow/routers/random/RandomRouterForm.tsx","components/flow/routers/response/helpers.ts","components/flow/routers/response/ResponseRouterForm.tsx","components/form/timeout/TimeoutControl.tsx","components/flow/routers/resthook/helpers.ts","components/flow/routers/resthook/ResthookRouterForm.tsx","components/flow/routers/result/helpers.ts","components/flow/routers/result/ResultRouterForm.tsx","components/flow/routers/subflow/helpers.ts","components/flow/routers/subflow/SubflowRouterForm.tsx","components/flow/routers/wait/helpers.ts","components/flow/routers/webhook/helpers.ts","components/flow/routers/wait/WaitRouterForm.tsx","components/flow/routers/webhook/header/HeaderElement.tsx","components/flow/routers/webhook/WebhookRouterForm.tsx","components/flow/actions/callclassifier/CallClassifier.tsx","config/index.ts","components/flow/routers/classify/helpers.ts","components/flow/routers/classify/ClassifyRouterForm.tsx","components/flow/routers/scheme/helpers.ts","components/flow/routers/scheme/SchemeRouterForm.tsx","components/flow/routers/ticket/helpers.ts","components/flow/routers/ticket/TicketRouterForm.tsx","components/flow/actions/openticket/OpenTicket.tsx","config/typeConfigs.ts","components/flow/actions/updatecontact/helpers.ts","store/editor.ts","store/thunks.ts","store/helpers.ts","components/canvas/CanvasDraggable.tsx","components/canvas/helpers.ts","components/canvas/Canvas.tsx","components/counter/Counter.tsx","components/titlebar/TitleBar.tsx","components/mountscroll/MountScroll.tsx","components/flow/actions/action/Action.tsx","components/draghelper/DragHelper.tsx","components/flow/exit/helpers.ts","components/loading/Loading.tsx","components/Portal.tsx","components/flow/exit/Exit.tsx","components/flow/node/Node.tsx","components/simulator/LogEvent.tsx","components/modal/Modal.tsx","components/nodeeditor/NodeEditor.tsx","components/simulator/helpers.ts","components/simulator/Simulator.tsx","components/simulator/ContextExplorer.tsx","components/sticky/Sticky.tsx","services/Plumber.ts","utils/debug.ts","components/flow/Flow.tsx","components/translator/helpers.ts","components/languageselector/LanguageSelector.tsx","components/poptab/PopTab.tsx","components/revisions/RevisionExplorer.tsx","components/issues/IssuesTab.tsx","store/rootReducer.ts","store/state.ts","store/createStore.ts","components/translator/TranslatorTab.tsx","components/index.tsx","serviceWorker.js","index.js","components/simulator/ContextExplorer.module.scss","components/sticky/Sticky.module.scss","components/flow/node/Node.module.scss","components/shared.module.scss","components/flow/actions/action/Action.module.scss","components/flow/routers/case/CaseElement.module.scss","components/flow/routers/webhook/WebhookRouterForm.module.scss","components/revisions/RevisionExplorer.module.scss","components/form/FormElement.module.scss","components/flow/actions/sendmsg/SendMsgForm.module.scss","components/flow/routers/result/ResultRouterForm.module.scss","components/titlebar/TitleBar.module.scss","components/poptab/PopTab.module.scss","components/issues/IssuesTab.module.scss","components/form/textinput/CharCount.module.scss","components/mediaplayer/MediaPlayer.module.scss","components/flow/routers/localization/RouterLocalizationForm.module.scss","components/draghelper/DragHelper.module.scss","components/index.module.scss","components/flow/actions/sendmsg/SendMsg.module.scss","components/form/assetselector/AssetSelector.module.scss","components/form/checkbox/CheckboxElement.module.scss","components/flow/routers/airtime/currency/CurrencyElement.module.scss","components/flow/routers/subflow/SubflowRouterForm.module.scss","components/button/Button.module.scss","components/pill/Pill.module.scss","components/flow/actions/sendbroadcast/SendBroadcast.module.scss","components/flow/routers/caselist/CaseList.module.scss","components/flow/routers/menu/MenuRouterForm.module.scss","components/flow/routers/random/RandomRouterForm.module.scss","components/form/timeout/TimeoutControl.module.scss","components/canvas/Canvas.module.scss","components/languageselector/LanguageSelector.module.scss"],"names":["module","exports","DependencyType","FlowIssueType","RouterTypes","WaitTypes","HintTypes","ContactProperties","ValueType","StartFlowArgs","StartFlowExitNames","WebhookExitNames","TransferAirtimeExitNames","SPEC_VERSION","ButtonTypes","LocalizedObject","object","id","name","localizedKeys","localizedObject","localized","iso","language","this","key","value","Object","assign","Array","isArray","length","Localization","translations","uuid","values","keys","forEach","addTranslation","SNAKED_CHARS","GRID_SIZE","parseInt","variables","grid_size","NODE_SPACING","node_spacing","NODE_PADDING","node_padding","snapToGrid","left","top","leftAdjust","topAdjust","Math","max","snapPositionToGrid","position","right","bottom","snakify","toLowerCase","trim","replace","titleCase","str","s","charAt","toUpperCase","substr","hasErrorType","errors","exps","error","exp","match","createClickHandler","onClick","shouldCancelClick","onMouseDown","event","onMouseUp","getLocalization","obj","localization","translate","emphasize","text","className","renderIf","predicate","then","otherwise","isRealValue","undefined","set","val","$set","merge","$merge","unset","$unset","push","arr","$push","splice","$splice","createUUID","generateUUID","range","start","end","from","v","k","pluralize","count","noun","suffix","hasString","names","find","item","throttle","func","timeout","ready","setTimeout","onNextRender","fn","window","bool","prop","HeaderStyle","Button","props","state","active","bindCallbacks","include","setState","onRef","type","disabled","leftSpacing","topSpacing","iconName","ref","style","marginLeft","marginTop","handleMouseDown","handleMouseUp","styles","btn","paddingRight","React","Constants","Dialog","tabFocus","primaryButton","activeTab","index","foundTab","tabs","tab","hasErrors","shiftKey","preventDefault","stopPropagation","target","blur","click","focus","console","log","document","addEventListener","handleKey","capture","clearTimeout","removeEventListener","rightButtons","buttons","primary","secondary","tertiary","handlePrimaryButton","leftButtons","headerClasses","header","clickable","headerClass","shared","headerIcon","iconed","headerStyle","BARBER","barber","activeClasses","dialog","getButtons","join","map","evt","icon","tab_icon","checked","header_overlay","header_icon","title_container","title","subtitle","noPadding","content","body","children","footer","left_buttons","gutter","right_buttons","Fixy","ele","fixed","scrollY","handleScroll","getBoundingClientRect","AssetType","FlowTypes","Types","Operators","FeatureFilter","PopTabType","REMOVE_VALUE_ASSET","Remove","DEFAULT_LANGUAGE","Language","initialState","definition","baseLanguage","metadata","dependencies","results","waiting_exit_uuids","parent_refs","issues","contactFields","nodes","assetStore","updateDefinition","UPDATE_DEFINITION","payload","updateNodes","UPDATE_NODES","updateIssues","UPDATE_ISSUES","updateMetadata","UPDATE_METADATA","updateAssets","assets","UPDATE_ASSET_MAP","combineReducers","action","UPDATE_BASE_LANGUAGE","UPDATE_CONTACT_FIELDS","currencies","ARS","Currency","AUD","BIF","BRL","CAD","CDF","CLP","COP","DJF","DOP","DZD","EUR","GBP","GHS","GNF","KES","LBP","LKR","LRD","MWK","MXN","NAD","NPR","NZD","PHP","PKR","RUB","RWF","SDG","SGD","SLL","SOS","SRD","SVC","TND","TRY","TZS","UGX","USD","UYU","UZS","VEF","XCD","YER","ZAR","ZMW","ZWL","HIDDEN","NONE","VOICE","SURVEY","TEXT_TYPES","MESSAGE","ONLINE","axios","defaults","headers","post","responseType","saveRevision","endpoint","csrf","getCookie","patch","release","spec_version","split","Promise","resolve","reject","response","status","data","catch","cookie","idx","indexOf","fetchAsset","getAssets","asset","getAssetPage","url","get","result","resultToAsset","order","next","a","pageUrl","assetPage","concat","idKey","assetType","Flow","label","isMatch","input","shouldExclude","inputLower","includes","searchAssetMap","query","additionalOptions","search","matches","filter","createAssetStore","endpoints","channels","getURL","Channel","items","classifiers","Classifier","languages","flows","fields","Field","globals","Global","groups","Group","revisions","Revision","labels","Label","Result","recipients","Contact","URN","resthooks","Resthook","templates","Template","ticketers","Ticketer","prefetched","fetches","storeId","store","assetListToMap","all","getFunctions","getCompletionSchema","getFlowDetails","revisionToLoad","Error","details","path","endsWith","startsWith","location","protocol","hostname","port","getBaseURL","showHelpArticle","link","open","renderIssues","issueProps","helpArticles","padding","issue","num","node_uuid","action_uuid","margin","display","fontSize","color","marginRight","renderIssue","message","description","MISSING_DEPENDENCY","i18nKey","dependency","INVALID_REGEX","regex","LEGACY_EXTRA","article","issue_help","getActionUUID","nodeSettings","currentType","originalAction","getRecipients","selected","group","contacts","contact","missing","legacy_vars","expression","Expression","renderAssetList","reduce","elements","renderAsset","assetBody","node_group","node_label","e","href","editor","rel","node_asset","getAllErrors","entry","validationFailures","getExpressions","getRecipientsByAsset","NAME_PROPERTY","Name","ContactProperty","CHANNEL_PROPERTY","LANGUAGE_PROPERTY","fakePropType","isRequired","ConfigProvider","config","only","childContextTypes","assetService","AddLabelsComp","context","contextTypes","sortByName","b","localeCompare","cx","classNames","bind","FormElement","showLabel","helpText","help_text","hideError","getValidationErrors","failure","send_msg_error","sendMsgError","arrow_up","error_list","getName","getHelpText","errorsToDisplay","getErrors","border","invalid","__className","large","placeholder","singleValue","multiValue","caretColor","marginBottom","boxShadow","control","borderColor","transition","messageStyle","borderBottom","borderBottomRightRadius","borderBottomLeftRadius","small","maxHeight","minHeight","lineHeight","menuList","option","indicatorsContainer","height","valueContainer","tagging","backgroundColor","functions","signature","getCompletions","completion","dotQuery","parts","currentProps","schema","root","prefix","part","shift","nextProp","nextType","types","properties","property_template","template","help","summary","getCompletionName","getCompletionSignature","resources","translation","en","es","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","interpolation","TembaSelectStyle","AssetOption","isDisabled","components","innerRef","innerProps","Option","Scheme","getIconForAssetType","AssetSelector","lastCreation","defaultOptions","menuOpen","isLoading","onChange","callback","options","completions","localMatches","onFilter","sort","sortFunction","encodeURIComponent","remoteAssets","remoteMatches","removalAsset","valueClearable","seen","hasOwnProperty","uniqueBy","existing","createAssetFromInput","createPrefix","inputValue","now","Date","getTime","postNewAsset","onAssetCreated","non_field_errors","baseControl","erroredControl","fallbackPlaceholder","t","toLocaleLowerCase","multi","commonAttributes","selection","captureMenuScroll","getStyle","handleChanged","onMenuOpen","handleMenuOpen","onMenuClose","handleMenuClose","onBlur","handleClearMessage","menuShouldBlockScroll","isMulti","isClearable","formClearable","isSearchable","searchable","getOptionValue","getOptionLabel","isValidNewOption","handleCheckValid","formatCreateLabel","handleCreatePrompt","getNewOptionData","handleGetNewOptionData","onCreateOption","handleCreateOption","cacheOptions","loadOptions","handleLoadOptions","noOptionsMessage","nextProps","prevState","isOnlineFlowType","flowType","filterVisibility","filters","visibility","findIndex","ft","excludeTypes","excludeOperators","TembaSelect","selectbox","nameKey","valueKey","getValue","resolved","op","normal","data-testid","optionValue","optionName","TypeList","typeConfigs","initialType","handleChangeType","configsToDisplay","type_list","getTypeConfigs","mergeForm","form","toMerge","toRemove","updated","isEntry","existingIdx","mutate","remove","removeKeys","valid","typeConfig","userAddingAction","settings","updateNodeEditorSettings","UPDATE_NODE_EDITOR_SETTINGS","updateUserAddingAction","UPDATE_USER_ADDING_ACTION","UPDATE_TYPE_CONFIG","REGEX_URL","RegExp","fromRegex","inputAsString","test","failures","validate","validators","allFailures","validateFunc","validation","Empty","isNotFinished","Required","MoreThan","amount","checkName","parseFloat","shouldRequireIf","required","validateIf","HeaderName","headerUtils","MaxOfTenItems","StartIsNonNumeric","ValidURL","Numeric","Alphanumeric","NumOrExp","getAsset","AddLabelsForm","add_input_labels","formState","handleLabelsChanged","newAction","updateAction","onClose","submitting","updates","handleSave","addAsset","onTypeChange","data-spec","handleCreateAssetFromInput","handleLabelCreated","KeyValues","getSchemeObject","scheme","SCHEMES","getSchemeSelectOption","schemeToSelectOption","AddURNComp","schemeObject","schemeName","SelectElement","UnicodeList","unicodeChars","chars","unicode_list","char","unicode_char","CharCount","hasUnicode","toolTipTextClasses","tooltip_text","unicode","tooltip","divider","fine_print","Count","GSM","0","1","2","3","4","5","6","7","8","9","$","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","_","c","d","f","g","h","i","j","l","m","n","o","p","q","r","u","w","x","y","z","Ä","Å","Æ","Ç","É","Ñ","Ö","Ø","Ü","ß","à","ä","å","æ","è","é","ì","ñ","ò","ö","ø","ù","ü","Γ","Δ","Θ","Λ","Ξ","Π","Σ","Φ","Ψ","Ω","isValidStart","partialExpression","allowedTopLevels","allowIncomplete","substring","topLevel","allowed","isWordChar","ch","isInStringLiteral","numQuotes","ExcellentParser","expressionPrefix","textToCaret","expressions","findExpressions","lastExpression","closed","neededParentheses","fragment","skipChar","inQuotes","prependFlag","pos","pop","identifier","parenthesesLevel","re","exec","currentExpression","nextCh","nextNextCh","getUnicodeChars","msg","getMsgStats","newVal","constructor","stats","characterCount","ReactMarkdown","require","caretCoordinates","completionVisible","selectedOptionIndex","TextInputElement","selectedEl","textEl","parser","nextCaret","completionSchema","initial","SMS","selectionStart","selectionEnd","focusInput","previous","scrollIntoView","autocomplete","KEY_ENTER","onEnter","KEY_SPACE","ctrlKey","reevaluate","currentTarget","KEY_P","setSelection","KEY_UP","KEY_N","KEY_DOWN","KEY_AT","getCaretCoordinates","KEY_ESC","KEY_TAB","caret","newValue","parens","newCaret","KEY_BACKSPACE","executeQuery","force","KEY_F","KEY_B","KEY_RIGHT","KEY_LEFT","expressionContext","includeFunctions","functionQuery","functionContext","fns","curr","selectedIdx","showSummary","numExamples","examples","option_summary","source","option_examples","example_header","example","slice","option_name","fn_marker","option_signature","optionClasses","first_option","selectedElRef","getOption","scrollTop","textElClasses","textinput","showInvalid","textarea","textElRef","handleClick","handleChange","handleBlur","onKeyDown","handleKeyDown","onKeyUp","handleKeyUp","maxLength","completionClasses","completion_container","hidden","fnClasses","fn_container","getOptions","charCount","send_msg","send_broadcast","showFn","wrapper","getTextElement","getScroll","options_wrapper","option_list","ConnectedTextInputElement","connect","flowContext","editorState","nodeEditor","forwardRef","AddURNForm","add_contact_urn","initializeForm","handlePathChanged","scheme_selection","handleSchemeChanged","CallResthookComp","resthook","CallWebhookComp","excludeDynamicGroups","mapGroupsToAssets","mapAssetsToGroups","searchResults","AddGroupsForm","add_contact_groups","handleGroupsChanged","handleGroupAdded","getContentMarkup","remove_contact_groups","specId","getRemoveAllMarkup","ChangeGroupsComp","getChangeGroupsMarkup","CheckboxElement","checkboxIcon","labelClassName","checkboxClassName","description_solo","LABEL","REMOVE_FROM_ALL","REMOVE_FROM_ALL_DESC","RemoveGroupsForm","removeAll","all_groups","groupValidators","handleUpdate","checkbox","handleRemoveAllUpdate","determineTypeConfig","renderNode","originalNode","node","getTypeConfig","actions","getType","router","hasIssues","translating","KeyLocalizationForm","keyValues","localizations","getObject","localizeableKeys","initializeLocalizedKeyForm","updateLocalizations","base","translate_from","handleKeyUpdate","Pill","pillStyles","pill","data-advanced","advanced","MultiChoiceInput","currentInput","onEntryChanged","newItem","onItemAdded","chosen","onRemoved","getChosenItems","handleInputChanged","handleValidateEmpty","handleAddItem","UploadButton","filePicker","onUploadChanged","files","FormData","append","handleUploadFile","removeText","handleRemoveUpload","uploadText","MsgLocalizationForm","quickReplies","templateVariables","templating","audio","say_msg","isLocalized","audio_url","quick_replies","initializeLocalizedForm","handleQuickRepliesUpdate","newQuickReply","newReplies","reply","updatedText","hasLocalizedValue","variable","handleTemplateVariableChanged","handleRemoveQuickReply","handleAddQuickReply","audioButton","attachments","handleAudioChanged","handleMessageUpdate","MissingComp","PlayAudioComp","PlayAudioForm","play_audio","handleAudioUpdate","MediaPlayer","stroke","radius","radiusNormalized","circumference","PI","durationSeconds","currentSeconds","playing","progress","currentTime","duration","ended","floor","triggered","handleTogglePlay","pause","play","prevProps","strokeDashoffset","player","width","handleRef","onTimeUpdate","handleTimeUpdate","src","circles","circle_background","fill","strokeWidth","cy","circle_foreground","strokeDasharray","button","PLACEHOLDER","SayMsgComp","recording","SayMsgForm","handleUploadChanged","SendBroadcastComp","to","line","SendBroadcastForm","handleRecipientsChanged","SendEmailComp","subject","TaggingElement","tags","tag","optionsToTags","onCheckValid","tagsToOptions","handleUpdateTags","prompt","createPrompt","Component","EMAIL_PATTERN","SendEmailForm","send_email","addresses","handleSubjectChanged","handleBodyChanged","SendMsgComp","replies","attachment","whatsapp","topic","facebook","TOPIC_OPTIONS","TYPE_OPTIONS","NEW_TYPE_OPTIONS","SendMsgForm","attachmentString","splitPoint","uploaded","msgTemplate","quickReplyEntry","sendAll","all_urns","stateToForm","handleTemplateChanged","templatingUUID","stateToAction","url_attachment","type_choice","upload","remove_upload","handleAttachmentRemoved","renderUpload","renderAttachment","emptyOption","templateTranslation","variable_count","handleTopicUpdate","clearable","handleShouldExcludeTemplate","template_text","handleQuickReplyEntry","renderAttachments","handleSendAllUpdate","hasFeature","HAS_WHATSAPP","renderTemplateConfig","HAS_FACEBOOK","renderTopicConfig","SetRunResultComp","getSavePlaceholder","getClearPlaceholder","SetRunResultForm","set_run_result","category","snaked","handleNameUpdate","resultFormat","handleValueUpdate","handleCategoryUpdate","StartFlowComp","flow","StartSessionComp","create_contact","contact_query","DefaultExitNames","START_TYPE_ASSETS","START_TYPE_CREATE","START_TYPE_QUERY","START_TYPE_OPTIONS","StartSessionForm","start_session","startType","contactQuery","handleStartTypeChanged","handleContactQueryChanged","handleFlowChanged","TransferAirtimeComp","transfer","amounts","code","withEmph","emph","renderSetText","emphasizeName","UpdateContactComp","set_contact_field","field","set_contact_channel","channel","set_contact_language","getLanguageForCode","set_contact_name","getDraggedFrom","ghostNode","ghost","exitUUIDs","inboundConnections","exitUUID","nodeUUID","ONLINE_PROPERTIES","OFFLINE_PROPERTIES","getContactProperties","WAIT_LABEL","GROUP_LABEL","createRenderNode","exits","uiConfig","ui","hasCases","cases","createCaseProps","categories","getCategories","JSON","parse","stringify","kase","matchingCategory","category_uuid","isRelativeDate","caseConfig","arguments","categoryName","operatorType","has_date_eq","has_date_gt","has_date_lt","isCategoryMatch","cat","categorizeCases","newCases","originalRouter","previousCategories","newCase","getSwitchRouter","previousCase","previousCategory","previousExit","exit","exit_uuid","switch","getDefaultRoute","defaultCategoryName","defaultCategory","default_category_uuid","defaultExit","getTimeoutRoute","timeoutCategory","timeoutExit","wait","No_Response","resolveRoutes","hasTimeout","resolvedDefaultCategory","Other","All_Responses","createWebhookBasedNode","useCategoryTest","previousRouter","destination_uuid","Success","Failure","has_category","has_only_text","operand","result_name","splitType","split_by_webhook","call_resthook","split_by_resthook","open_ticket","split_by_ticket","transfer_airtime","split_by_airtime","getCategoriesForExit","isGroupSplit","split_by_groups","getResultName","switchRouter","random","call_webhook","uniquifyNode","newNode","removeResultFromStore","resultName","reference","filteredRefs","references","actionUUID","removeResultReference","addResult","addRevision","revision","updateConnection","fromNodeUUID","fromExitUUID","destinationNodeUUID","updatedNodes","fromNode","getNode","exitIdx","getExitIndex","previousDestination","mergeNode","removeNode","spliceInAction","previousNode","otherExit","getDefaultExit","destination","execute_actions","remap","nodeToRemove","detectLoops","updatePosition","snap","adjusted","updateStickyNotePosition","stickyUUID","_ui","stickies","lastPos","updateStickyNote","sticky","UpdateContactForm","fieldValue","dispatch","getState","assetMap","mutators","handlePropertyChange","handleLanguageUpdate","handleChannelUpdate","onUpdated","handleFieldValueUpdate","value_type","sortFieldsAndProperties","handleFieldAdded","getValueWidget","CurrencyElement","isNaN","Number","currency","amountInput","handleAmountChanged","removeIco","onRemove","form_element","exclude","airtime","handleCurrencyChanged","OptionalTextInput","editing","handleTextChanged","toggle_link","handleEditingChanged","toggleText","optional_text_input","createResultNameInput","ValidationFailures","getOriginalAction","AirtimeRouterForm","nodeToState","updateRouter","stateToNode","handleTransferChanged","handleRemoved","renderAmount","renderAmounts","handleUpdateResultName","intentOperatorList","has_top_intent","verboseName","operands","has_intent","operatorConfigList","has_any_word","has_all_words","has_phrase","has_only_phrase","has_beginning","has_text","has_number","has_number_between","has_number_lt","has_number_lte","has_number_eq","has_number_gte","has_number_gt","has_date","has_time","has_group","has_phone","has_email","has_state","has_district","has_ward","has_error","has_value","has_pattern","has_media","operatorConfigMap","operatorConfig","getOperatorConfig","pre","validateCase","classifier","exitEdited","exitName","min","argument","district","intentValidators","intents","intent","confidence","categoryNameEdited","getCategoryName","today","inDays","abs","words","firstWord","CaseElement","operators","arg1","arg2","previousProps","filterOperators","getArgumentArray","getCaseProps","handleIntentChanged","handleMinChanged","data-draggable","handleMaxChanged","handleIntentMenuOpened","handleIntentMenuClosed","handleConfidenceChanged","handleStateChanged","handleDistrictChanged","relative_date","handleArgumentChanged","kaseError","dnd_icon","choice","getOperators","handleOperatorChanged","multi_operand","single_operand","renderArguments","categorize_as","handleExitChanged","remove_icon","handleRemoveClicked","DragCursor","SortableItem","SortableElement","row","caseProps","list","handleRemoveCase","handleUpdateCase","CaseList","sortableList","SortableContainer","case_list","currentCases","shouldCancelStart","hasEmptyCase","createEmptyCase","ensureEmptyCase","removeCase","onCasesUpdated","oldIndex","newIndex","arrayMove","case_list_container","scrolling","onSortEnd","handleSortEnd","HTMLElement","dataset","draggable","InputToFocus","DigitsRouterForm","initialCases","wait_for_digits","optionalRouter","hint","digits","wait_for_response","lead_in","handleCasesUpdated","renderEdit","ExpressionRouterForm","split_by_expression","handleOperandUpdated","getRoutableFields","FieldRouterForm","split_by_contact_field","field_select","handleFieldChanged","LocalizedType","extractGroups","groupsToCases","GroupsRouterForm","getLocalizedObjects","localizedType","filtered","Case","hasLocalizableCases","original","RouterLocalizationForm","Category","arg","originalCase","orginalArgument","translating_operator_container","translating_operator","translating_from","translating_to","handleUpdateCaseArgument","originalCategory","translating_category","handleUpdateCategoryName","renderCases","renderCategories","menuToCases","menu","previousCases","MenuRouterForm","wait_for_menu","originalCases","menu_option","digit","handleMenuChanged","renderOption","renderMenu","BUCKET_OPTIONS","bucketOption","fillOutCategories","buckets","RandomRouterForm","split_by_random","bucketChoice","newExit","bucket_name","handleBucketNameChanged","OPTIONS","bucket_select","handleBucketsChanged","bucket_list","renderBucketNames","TIMEOUT_OPTIONS","DEFAULT_TIMEOUT","TimeoutControl","entries","isChecked","onChanged","timeout_control_container","left_section","getInstructions","handleChecked","drop_down","getSelected","handleTimeoutChanged","ResponseRouterForm","seconds","invalidCase","handleUpdateTimeout","ResthookRouterForm","resthookAsset","handleResthookChanged","FIELD_NUMBER_OPTIONS","DELIMITER_OPTIONS","getDelimiterOption","ResultRouterForm","fieldNumber","delimiter","shouldDelimit","split_by_run_result","split_by_run_result_delimited","handleResultChanged","nodeType","non_delimited","result_select","delimited","field_number","handleFieldNumberChanged","lead_in_sub","result_select_delimited","handleDelimiterChanged","should_delimit","handleShouldDelimitChanged","renderFieldDelimited","renderField","flowToAsset","assetToFlow","SubflowRouterForm","params","split_by_subflow","enter_flow","setRunResult","hasFieldErrors","startFlowAction","Complete","Expired","setResultAction","info","param","param_name","param_input","handleParamChanged","handleFilter","Methods","WaitRouterForm","wait_for_audio","wait_for_image","image","wait_for_location","wait_for_video","video","NAME_PLACEHOLDER","VALUE_PLACEHOLDER","HeaderElement","getHeader","remove_ico","handleRemove","getRemoveIco","header_name","handleChangeName","header_value","handleChangeValue","GET_METHOD","GET","METHOD_OPTIONS","POST","PUT","DELETE","HEAD","PATCH","getDefaultBody","method","WebhookRouterForm","ensureEmptyHeader","oldMethod","newMethod","existingContentTypeHeader","lastHeader","removeHeader","needsHeader","handleCreateHeader","headerElements","handleHeaderRemoved","handleHeaderUpdated","body_form","req_body","handleBodyUpdate","handleMethodUpdate","handleUrlUpdate","instructions","CallClassifierComp","call_classifier","routes","hiddenCases","route","existingCasePosition","every","existingCase","ensureRoute","routerResultName","actionResultName","split_by_intent","ClassifyRouterForm","showTab","handleClassifierUpdated","getChannelTypeOptions","excludeFromSplit","extractSchemes","schemes","selectOptions","schemesToCases","SchemeRouterForm","split_by_scheme","orginalCases","handleSchemesChanged","TicketRouterForm","ticketer","handleTicketerUpdate","handleSubjectUpdate","handleResultNameUpdate","OpenTicketComp","typeConfigList","component","massageForDisplay","aliases","HAS_RESTHOOK","HAS_TICKETER","HAS_AIRTIME","HAS_CLASSIFIER","dedupeTypeConfigs","typeConfigMap","alias","originalType","fieldAction","fieldToAsset","channelAction","channelToAsset","languageAction","languageToAsset","nameAction","assetToField","assetToChannel","assetToLanguage","lang","EMPTY_DRAG_STATE","dragStartTime","dragDownPosition","dragActive","dragNodeUUID","dragGroup","dragSelection","currentRevision","simulating","fetchingFlow","debug","warnings","popped","activity","segments","liveActivity","activityInterval","visible","scrollToNode","scrollToAction","UPDATE_EDITOR_STATE","markDirty","lastDirtyAttemptTimeout","postingRevision","lastDirtyMillis","lastSuccessfulMillis","NETWORK_ERROR","createSaveMonitor","setInterval","mergeEditorState","modalMessage","saving","createDirty","revisionsEndpoint","quiet","newDefinition","getCurrentDefinition","createFlowIssueMap","updatedAssets","errorMessage","changes","updateEditorState","createNewRevision","loadFlowDefinition","currentTop","guessNodeType","getFlowComponents","mergeAssetMaps","renderNodeMap","fetchFlow","forceSave","fetchFlowActivity","triggerActivityUpdate","handleLanguageChange","currentLanguage","isEqual","onUpdateLocalizations","newDef","normalizedTranslations","prev","updateExitDestination","disconnectExit","removeAction","actionIdx","getActionIndex","moveActionUp","actionAbove","handleTypeConfigChange","updateTypeConfig","resetNodeEditingState","onUpdateAction","updateContactFields","onAddToNode","showAdvanced","onRemoveNodes","uuids","updatedDefinition","didNodes","didDef","onUpdateCanvasPositions","positions","updatedNodePosition","updatedStickyPosition","onConnectionDrag","sourceId","resultCount","createEmptyNode","updateSticky","onUpdateRouter","newRouterNode","previousAction","previousPosition","originalResultName","actionToSplice","topNode","bottomNode","topActions","bottomActions","onOpenNodeEditor","actionToTranslate","getLocalizations","updateTranslationFilters","translationFilters","translation_filters","activityTimeout","hasLoopSplit","hasWait","toNodeUUID","toNode","sendMsgAction","nodeMap","includeUI","renderNodes","getOrderedNodes","uiNodes","sorted","diff","suggestedResultNameCount","emptyNode","replyType","replyAction","actionType","pointerMap","groupUUID","groupsToChange","resultAction","pointers","toAdd","previousIssues","issueMap","nodeIssues","activityEndpoint","flowUUID","getActivity","CanvasDraggable","updateDimensions","clientWidth","clientHeight","nativeEvent","which","onDragStop","tagName","onDragStart","pageX","pageY","classes","onTransitionEnd","onAnimated","elementCreator","collides","fudge","getFirstCollision","changed","sortedDraggables","getOrderedDraggables","current","other","cascaded","setTop","newTop","Canvas","isScrolling","reflowTimeout","lastX","lastY","justSelected","onDragThrottled","onDragging","onMouseThrottled","handleMouseMove","documentElement","draggables","dragUUID","windowHeight","handleWindowResize","onLoaded","updatedPositions","drag","startX","startY","currentX","currentY","drag_selection","mutable","offset","isClickOnCanvas","draggingNew","updateStateWithScroll","clientY","updatePositions","box","collisions","getDraggablesInBox","speed","scrollBy","dimensions","newPosition","markReflow","reflowPositions","newPositions","attempts","collision","cascade","cascadeTop","reflow","onUpdatePositions","doReflow","windowY","otherState","viewportHeight","clearInterval","scrollCanvas","startPosition","xd","yd","lowestNode","delta","addPosition","DRAG_THRESHOLD","getSelectedPositions","onDoubleClick","canvas_container","onMouseMove","handleMouseUpCapture","handleDoubleClick","canvas_background","canvas","newDragElement","handleAnimated","handleUpdateDimensions","handleDragStart","handleDragStop","dragOnAdd","renderSelectionBox","PureComponent","Counter","handleScrollIntoView","keepVisible","scrollTo","behavior","handleMouseEvent","onMouseEnter","onMouseLeave","toString","counter","containerStyle","handleMouseEnter","handleMouseLeave","countStyle","TitleBar","confirmationTimeout","confirmingRemoval","handleConfirmRemoval","showMove","up_button","onMoveUp","remove_button","showRemoval","confirmation","remove_confirm","titletext","onRemoval","getConfirmationEl","moveArrow","getMoveArrow","getRemove","titlebar","MountScroll","pulse","handleScrollCompleted","timer","innerHeight","scrollHeight","ActionWrapper","attributes","getAttribute","missingLocalization","notLocalizable","has_router","not_localizable","missing_localization","getClasses","actionToInject","getAction","titleBarClass","actionClass","first","events","handleActionClicked","handleRemoval","handleMoveUp","render","overlay","pulseAfterScroll","ConnectedActionWrapper","bindActionCreators","DragHelper","drag_helper","arrow","tail","head","bold","getExitActivityKey","hexToRgb","hex","Loading","loading","size","units","borderRadius","square","animationDelay","background","Portal","el","portalRoot","createElement","getElementById","appendChild","ReactDOM","createPortal","ExitComp","hideDragHelper","pendingMessageFetch","confirmDelete","recentMessages","fetchingRecentMessages","showDragHelper","activityId","recentMessagesId","plumberMakeSource","getSourceId","handleDisconnect","plumberUpdateClass","plumberRemove","plumberConnectExit","recentsEndpoint","cancel","recents","sent","segmentCount","handleShowRecentMessages","handleHideRecentMessages","delim","hasRecents","recentStyles","recent_messages","no_recents","recentMessage","moment","fromNow","nameStyle","connected","dragNodeClasses","confirm","confirm_x","onDisconnect","dragging","exitClasses","unnamed_exit","confirm_delete","getSegmentCount","getRecentMessages","ConnectedExit","EMPTY","NodeComp","firstAction","clicking","handleShouldCancelClick","parentElement","canvasBounds","querySelector","plumberMakeTarget","ghostListener","getGhostListener","plumberRecalculate","getSelection","createRange","selectNodeContents","removeAllRanges","addRange","execCommand","textContent","Exit","onlyNode","startingNode","showUUIDs","handleUUIDClicked","actionList","firstRef","actionConfig","filterIssuesForAction","ActionComponent","Action","anyAction","enterAnimation","leaveAnimation","easing","addActions","save_result","save_as","add","handleAddToNode","getExits","flow_start","isStartNodeVisible","isSelected","immutable","renderDebug","flow_start_message","activeCount","onActivityClicked","cropped","exit_table","node_container","eleRef","Direction","scrollNode","scrollAction","Modal","customStyles","outline","ariaHideApp","isOpen","show","onAfterOpen","onModalOpen","onRequestClose","shouldCloseOnOverlayClick","contentLabel","NodeEditor","canceled","dragPoint","LocalizationForm","localizationProps","close","Form","formProps","handleAddAsset","mins","getMinutes","minStr","getHours","isMessage","isMT","MAP_THUMB","DrawerType","getStyleForDirection","direction","MO","msg_received","renderError","renderInfo","dangerouslySetInnerHTML","__html","renderMessage","attaches","audio_attachment","media_player","audio_text","alt","video_attachment","controls","msg_text","LogEvent","detailsVisible","showDetails","groups_added","renderValueList","groups_removed","renderClickable","email","email_details","webhook","webhook_details","request","http_logs","renderHTTPRequest","element","step_uuid","has_detail","event_viewer","classification","extra","toFixed","entities","entity","renderClassification","MT","renderGroupsChanged","renderEmailSent","base_language","service","renderWebhook","renderLabelsAdded","actual_amount","recipient","urn","renderLogEvent","EXCLUDED_PATHS","legacy_extra","ContextExplorer","opened","messageVisible","showEmpty","openState","prevPath","navigator","clipboard","writeText","openPath","closing","newPath","valueType","hasChildren","arrowStyles","arrow_right","has_children","keyStyles","keySummary","handleCopyPath","handlePathClick","key_summary","str_value","renderProperties","renderContextNode","contents","pruneEmpty","context_explorer","panel","empty_toggle","handleToggleHide","IMAGE_A","IMAGE_B","IMAGE_C","VIDEO_A","VIDEO_A_THUMB","Simulator","currentFlow","inputBox","drawerEle","urns","keypadEntry","drawerHeight","time","waitingForHint","drawerOpen","attachmentOptionsVisible","contextExplorerVisible","sprinting","bottomRef","inputBoxRef","session","activeFlow","lastExit","paths","runs","run","finalStep","step","pathCount","flow_uuid","simulatedMessages","messages","messageFound","fromUUID","toUUID","created_on","unshift","newState","update","scrollToBottom","updateEvents","runContext","wasJustActive","toISOString","newlyRecentMessages","newEvents","drawerType","videos","images","hasQuickReplies","updateActivity","handleFocusUpdate","trigger","environment","date_format","time_format","timezone","triggered_on","simulateStart","updateRunContext","resume","resumed_on","simulateResume","startFlow","delay","newVisible","onToggled","SIMULATOR","drawer_items","drawer_item","sendAttachment","map_thumb","audio_picker","audio_icon","audio_message","quick_reply","multiple","handleKeyPress","keypad","keypad_entry","getKeyRow","getLocationDrawer","getAudioDrawer","getImageDrawer","getVideoDrawer","getQuickRepliesDrawer","getKeypadDrawer","zIndex","paddingBottom","handleDrawerRef","drawer","drawer_visible","forced","getDrawerContents","showAttachmentDrawer","attachment_buttons","handleHideAttachments","getAttachmentButton","handleContextExplorerClose","handleHideAttachmentDrawer","String","simHidden","sim_hidden","tabHidden","tab_hidden","messagesStyle","sim_container","simulator","getContextExplorer","screen","onToggle","float","clear","show_attachments_button","getAttachmentOptions","getDrawer","show_context_button","reset","inactive","onReset","simulator_tab","simulator_tab_icon","simulator_tab_text","STICKY_TITLE","STICKY_BODY","COLOR_OPTIONS","yellow","blue","green","purple","gray","Sticky","debounceTextChanges","showConfirmation","DEFUALT_TITLE","DEFUALT_BODY","finalPos","onUpdateText","select","handleSelectForValue","color_chooser_container","color_chooser","handleChangeColor","color_option","titleClasses","title_wrapper","removal","containerClasses","sticky_container","stickyClasses","colorChooser","getColorChooser","handleClickRemove","handleChangeTitle","onFocusCapture","handleTitleFocused","body_wrapper","handleChangeBody","handleBodyFocused","importDefaults","jsPlumb","connectorOverlays","TARGET_DEFAULTS","anchor","shape","faces","cssClass","hoverClass","dropOptions","tolerance","isTarget","dragAllowedWhenFull","deleteEndpointsOnEmpty","SOURCE_DEFAULTS","maxConnections","isSource","getAnchor","sourceEle","targetEle","defaultConnector","stub","midpoint","alwaysRespectStubs","gap","cornerRadius","Plumber","pendingConnections","pendingConnectionTimeout","animateInterval","onLoadFunction","DragOptions","cursor","DropOptions","Endpoint","EndpointStyle","strokeStyle","PaintStyle","ConnectionsDetachable","Connector","ConnectionOverlays","setSourceEnabled","makeSource","makeTarget","connectExit","setDragSelection","clearDragSelection","removeFromDragSelection","cancelDurationRepaint","handlePendingConnections","checkForPendingConnections","repaint","recalculate","updateClass","rerouteAnchors","containerId","setContainer","enabled","onConnection","connection","addClass","removeClass","addToDragSelection","targets","batch","slot","totalSlots","anchors","delete","fireEvent","connector","plumbConnect","detachable","overlays","activityElement","getOverlays","getElement","recentsElement","classList","onConnected","onLoad","onEvent","recalculateOffsets","repaintEverything","unmakeSource","deleteConnectionsForElement","connections","getConnections","setAnchor","revalidate","closure","debounce","Debug","isDraggingBack","suspendedElementId","targetId","nodeContainerUUID","fe","beforeConnectionDrag","onConnectorDrop","onBeforeConnectorDrop","triggerLoaded","offsetLeft","offsetTop","dispatchEvent","Event","stickyMap","Node","handleNodeCreation","handleStickyCreation","ghostRef","nodeEditorSettings","empty_flow","querySelectorAll","getNodes","getStickies","getEmptyFlow","getSimulator","getNodeEditor","getDragNode","handleDragging","handleCanvasLoaded","TranslationState","LanguageSelector","handleLanguageSort","separator","language_link","handleLanguageChanged","PopTab","poppedEle","offsetWidth","onShow","onHide","pop_wrapper","tab_wrapper","handleTabClick","handlePoppedRef","handleClose","header_label","RevisionExplorer","onRevisionClicked","onRevertClicked","REVISION_HISTORY","handleUpdateRevisions","mask","handleTabClicked","explorer_wrapper","explorer","selectedClass","dateFormat","utc","user","getIssueKey","getRenderObjects","renderAction","IssuesTab","selectedIssue","issueDetails","buildIssueDetails","issueDetail","renderObjects","nodeDifference","ISSUES_TAB","onIssueClicked","onIssueOpened","issueCount","lastLanguage","languageHeader","handleIssueClicked","issues_code","issues_wrapper","middlewares","thunk","TranslationType","getMergedByType","bundle","COMPLETE","MISSING","findTranslations","localizable","attribute","getFriendlyAttribute","i18next","getBundleKey","TranslatorTab","selectedTranslation","translationBundles","optionsVisible","pctComplete","rules","handleUpdateTranslations","CATEGORY","CASE","translated","PROPERTY","counts","total","complete","round","bundles","TRANSLATOR_TAB","onTranslationFilterChanged","from_text","onTranslationClicked","onTranslationOpened","onChangeLanguage","showChangeButton","optionsClasses","options_visible","change_visible","filledClasses","filled","hundredpct","wrapperClasses","translations_wrapper","translate_block","handleTranslationClicked","needs_translation","type_name","renderMissing","toggleOptions","progress_bar","toggle","checkboxes","toggleCategories","toggleRules","pct_complete","changeLanguage","handleChangeLanguageClick","PageVisibility","default","hotStore","createStore","rootReducer","composeWithDevTools","applyMiddleware","FlowEditor","forceSaveOnLoad","dataStr","downloadAnchorNode","setAttribute","downloadJSON","alert_modal","alert_body","showDownload","download_button","handleDownloadClicked","handleLanguageSetting","handleScrollToNode","handleVisibilityChanged","getFooter","getAlertModal","getSavingIndicator","handleScrollToTranslation","handleOpenTranslation","handleTabPopped","handleScrollToIssue","handleOpenIssue","ConnectedFlowEditor","FlowEditorContainer","Boolean","customElements","showFlowEditor","serviceWorker","registration","unregister"],"mappings":"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AAG,GACHC,EAAG,GACHC,EAAG,GACH,KAAM,GACN,KAAM,GACN,KAAM,GACN,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACLC,EAAG,GACH,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACLC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACH,IAAK,GACL,KAAM,GACN,IAAK,GACL,IAAK,GACLC,EAAG,GACHxc,EAAG,GACH8I,EAAG,GACH2T,EAAG,GACHC,EAAG,IACHtV,EAAG,IACHuV,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACH/rB,EAAG,IACHgsB,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHtvB,EAAG,IACH0iB,EAAG,IACH6M,EAAG,IACHxsB,EAAG,IACHysB,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACH,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,OAAK,IACL,OAAK,IACL,OAAK,IACL,OAAK,IACL,OAAK,IACL,OAAK,IACLC,OAAG,IACHC,OAAG,IACHC,OAAG,IACHC,OAAG,IACHC,OAAG,IACHC,OAAG,IACHC,OAAG,IACHC,OAAG,IACHC,OAAG,IACHC,OAAG,IACHC,OAAG,IACHC,OAAG,IACHC,OAAG,IACHC,OAAG,IACHC,OAAG,IACHC,O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","file":"static/js/main.99cdf71b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ele\":\"SendEmailForm_ele__2CvL5\",\"subject\":\"SendEmailForm_subject__U7jTR\",\"message\":\"SendEmailForm_message__1k6GE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SetRunResultForm_form__HNnt4\",\"name\":\"SetRunResultForm_name__1aW9R\",\"value\":\"SetRunResultForm_value__36pab\",\"category\":\"SetRunResultForm_category__TuHWy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"node\":\"StartSession_node__d1IsL\",\"to\":\"StartSession_to__2uqPY\",\"name\":\"StartSession_name__HfSVl\",\"icon\":\"StartSession_icon__1l-0q\",\"more\":\"StartSession_more__8uoUD\",\"message\":\"StartSession_message__1KRsK\",\"flow\":\"StartSession_flow__zPhXS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"counter\":\"Counter_counter__1_pCt\",\"visible\":\"Counter_visible__3Avdq\",\"clickable\":\"Counter_clickable__3pprF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MountScroll_wrapper__1Stx4\",\"pulse\":\"MountScroll_pulse__uwbnk\",\"pulse_animation\":\"MountScroll_pulse_animation__2SL8_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"small\":\"TembaSelect_small__1oIi4\",\"normal\":\"TembaSelect_normal__3v4Gh\",\"error\":\"TembaSelect_error__118Nd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unicode_char\":\"UnicodeList_unicode_char__3oGkq\",\"unicode_list\":\"UnicodeList_unicode_list__36pET\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scheme_selection\":\"AddURNForm_scheme_selection__3qqeb\",\"path\":\"AddURNForm_path__vTuFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"chosen\":\"MultiChoice_chosen__3fQUn\",\"item\":\"MultiChoice_item__2hkE_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"text\":\"SayMsg_text__2WoYr\",\"recording\":\"SayMsg_recording__3JHw8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"code\":\"TransferAirtime_code__3WV9i\",\"amount\":\"TransferAirtime_amount__3mMNG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optional_text_input\":\"OptionalTextInput_optional_text_input__N6zb8\",\"toggle_link\":\"OptionalTextInput_toggle_link__3-B4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"errors\":\"ValidationFailures_errors__3qGX8\",\"error\":\"ValidationFailures_error__2Q3Gg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"FieldRouterForm_lead_in__ShYLI\",\"field_select\":\"FieldRouterForm_field_select__n0Csy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"subject\":\"TicketRouterForm_subject__3A23k\",\"body\":\"TicketRouterForm_body__lfD63\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"draggable\":\"CanvasDraggable_draggable__cqsGq\",\"selected\":\"CanvasDraggable_selected__2GgF7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"sim_container\":\"Simulator_sim_container__H7rj0\",\"simulator\":\"Simulator_simulator__2tU1d\",\"sim_hidden\":\"Simulator_sim_hidden__1ggwF\",\"screen\":\"Simulator_screen__2Qp5p\",\"header\":\"Simulator_header__2r6Gy\",\"close\":\"Simulator_close__1RMuB\",\"time\":\"Simulator_time__3FKl6\",\"battery\":\"Simulator_battery__3Wa1Y\",\"wifi\":\"Simulator_wifi__2E-6D\",\"footer\":\"Simulator_footer__1_obl\",\"show_context_button\":\"Simulator_show_context_button__20XVs\",\"reset\":\"Simulator_reset__1A78l\",\"inactive\":\"Simulator_inactive__3bLl7\",\"active\":\"Simulator_active__1MwaM\",\"messages\":\"Simulator_messages__3Oalm\",\"controls\":\"Simulator_controls__1TlMu\",\"show_attachments_button\":\"Simulator_show_attachments_button__3LFcV\",\"attachment_buttons\":\"Simulator_attachment_buttons__hDIT5\",\"visible\":\"Simulator_visible__3BBvQ\",\"drawer\":\"Simulator_drawer__340zx\",\"drawer_visible\":\"Simulator_drawer_visible__1jBzI\",\"forced\":\"Simulator_forced__19aUl\",\"drawer_header\":\"Simulator_drawer_header__nlorO\",\"map_thumb\":\"Simulator_map_thumb__1zB9o\",\"audio_picker\":\"Simulator_audio_picker__V2K8X\",\"audio_icon\":\"Simulator_audio_icon__Ve23Y\",\"audio_message\":\"Simulator_audio_message___4Yvw\",\"keypad\":\"Simulator_keypad__29cCi\",\"keypad_entry\":\"Simulator_keypad_entry__2S4e_\",\"keys\":\"Simulator_keys__W8GcS\",\"row\":\"Simulator_row__mtRhr\",\"key\":\"Simulator_key__Wv2KS\",\"drawer_items\":\"Simulator_drawer_items__PYHpL\",\"drawer_item\":\"Simulator_drawer_item__yZRIg\",\"simulator_tab\":\"Simulator_simulator_tab__uRMHB\",\"tab_hidden\":\"Simulator_tab_hidden__1BDkU\",\"simulator_tab_icon\":\"Simulator_simulator_tab_icon__3cmxe\",\"simulator_tab_text\":\"Simulator_simulator_tab_text__1aI0Q\",\"detail_webhook_called\":\"Simulator_detail_webhook_called__1A8Iu\",\"quick_replies\":\"Simulator_quick_replies__3wan9\",\"quick_reply\":\"Simulator_quick_reply__sSRfK\"};","module.exports = __webpack_public_path__ + \"static/media/map.5e547148.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"type_list\":\"TypeList_type_list__3OATW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"RemoveGroupsForm_checkbox__3W5g6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"value\":\"UpdateContactForm_value__19Fyz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result_name\":\"AirtimeRouterForm_result_name__IPVnQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"DigitsRouterForm_lead_in__1_8u2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result_name\":\"ResthookRouterForm_result_name__dcAsY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"result_name\":\"WaitRouterForm_result_name__1QlYs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"link\":\"ClassifyRouterForm_link__20QgF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"loading\":\"Loading_loading__3-t_e\",\"pulse\":\"Loading_pulse__apphI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"empty_flow\":\"Flow_empty_flow__roKNh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"proper\":\"global_proper__rlaqB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"hidden\":\"TranslatorTab_hidden__n6TH8\",\"message\":\"TranslatorTab_message__94Qv_\",\"header\":\"TranslatorTab_header__D3V8v\",\"translations_wrapper\":\"TranslatorTab_translations_wrapper__3D6T-\",\"complete\":\"TranslatorTab_complete__30vNJ\",\"language\":\"TranslatorTab_language__2b3mU\",\"options\":\"TranslatorTab_options__hKEsd\",\"options_visible\":\"TranslatorTab_options_visible__1Iv7O\",\"filters\":\"TranslatorTab_filters__3qwqM\",\"pct_complete\":\"TranslatorTab_pct_complete__3sHbg\",\"toggle\":\"TranslatorTab_toggle__35-qI\",\"change_visible\":\"TranslatorTab_change_visible__1P3qg\",\"changeLanguage\":\"TranslatorTab_changeLanguage__RxYLJ\",\"progress_bar\":\"TranslatorTab_progress_bar__cWMo0\",\"filled\":\"TranslatorTab_filled__OKNl9\",\"hundredpct\":\"TranslatorTab_hundredpct__2ltPG\",\"checkboxes\":\"TranslatorTab_checkboxes__3MIKA\",\"translate_block\":\"TranslatorTab_translate_block__1htQy\",\"item\":\"TranslatorTab_item__3Q3JG\",\"text\":\"TranslatorTab_text__2HqtQ\",\"from_text\":\"TranslatorTab_from_text__3_B24\",\"to_text\":\"TranslatorTab_to_text__z4k-b\",\"needs_translation\":\"TranslatorTab_needs_translation__1FKjj\",\"type_name\":\"TranslatorTab_type_name__OdM8M\",\"attribute\":\"TranslatorTab_attribute__bQi14\",\"translated\":\"TranslatorTab_translated__K2ZMS\",\"check\":\"TranslatorTab_check__1ymTu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"evt\":\"LogEvent_evt__1J8Uq\",\"fadein\":\"LogEvent_fadein__kgfF4\",\"msg_text\":\"LogEvent_msg_text__1HqoJ\",\"ivr_msg\":\"LogEvent_ivr_msg__2pGYZ\",\"send_msg\":\"LogEvent_send_msg__195Tn\",\"msg_received\":\"LogEvent_msg_received__gf2kP\",\"image_attachment\":\"LogEvent_image_attachment__2Ku4T\",\"error\":\"LogEvent_error__2oBQ9\",\"info\":\"LogEvent_info__12nsu\",\"email\":\"LogEvent_email__1XyUb\",\"webhook\":\"LogEvent_webhook__3jEK2\",\"video_attachment\":\"LogEvent_video_attachment__2xn3C\",\"audio_attachment\":\"LogEvent_audio_attachment__2iBWG\",\"media_player\":\"LogEvent_media_player__22CtH\",\"audio_text\":\"LogEvent_audio_text__3j-uW\",\"email_details\":\"LogEvent_email_details__1f2TW\",\"to\":\"LogEvent_to__H-JTa\",\"subject\":\"LogEvent_subject__mN7Lz\",\"body\":\"LogEvent_body__2hSdi\",\"webhook_details\":\"LogEvent_webhook_details__3mtJW\",\"response\":\"LogEvent_response__2oEy0\",\"event_viewer\":\"LogEvent_event_viewer__2D4uw\",\"has_detail\":\"LogEvent_has_detail__ZRVpP\",\"classification\":\"LogEvent_classification__2arCX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"clickable\":\"Dialog_clickable__1gSoh\",\"dialog\":\"Dialog_dialog__16A3R\",\"header\":\"Dialog_header__YD-Nm\",\"header_overlay\":\"Dialog_header_overlay__1Of6F\",\"header_icon\":\"Dialog_header_icon__2z4U8\",\"title\":\"Dialog_title__1IRe1\",\"barber\":\"Dialog_barber__3x6cp\",\"iconed\":\"Dialog_iconed__2eQKD\",\"title_container\":\"Dialog_title_container__2HiUa\",\"content\":\"Dialog_content__1YGhY\",\"footer\":\"Dialog_footer__3UylY\",\"gutter\":\"Dialog_gutter__1Xxy-\",\"buttons\":\"Dialog_buttons__1T0cB\",\"left_buttons\":\"Dialog_left_buttons__31hp_\",\"right_buttons\":\"Dialog_right_buttons__3NHBO\",\"tabs\":\"Dialog_tabs__2gLgU\",\"tab\":\"Dialog_tab__1x47g\",\"tab_icon\":\"Dialog_tab_icon__28etF\",\"active\":\"Dialog_active__3yOgq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"option_list\":\"TextInputElement_option_list__18zXF\",\"option_summary\":\"TextInputElement_option_summary__qaT6A\",\"option_signature\":\"TextInputElement_option_signature__3c1zs\",\"option\":\"TextInputElement_option__5N_r_\",\"selected\":\"TextInputElement_selected__2bCI1\",\"first_option\":\"TextInputElement_first_option__2owME\",\"fn_marker\":\"TextInputElement_fn_marker__38I-n\",\"function_help\":\"TextInputElement_function_help__2jwVQ\",\"completion_container\":\"TextInputElement_completion_container__3c00R\",\"options_wrapper\":\"TextInputElement_options_wrapper__2knDu\",\"fn_container\":\"TextInputElement_fn_container__3tmtw\",\"option_name\":\"TextInputElement_option_name__2G-0k\",\"option_examples\":\"TextInputElement_option_examples__2l6sa\",\"example_header\":\"TextInputElement_example_header__3a5qK\",\"example\":\"TextInputElement_example__3MAGO\",\"fn_signature\":\"TextInputElement_fn_signature__efYOL\",\"wrapper\":\"TextInputElement_wrapper__1q0lN\",\"help\":\"TextInputElement_help__1dGMQ\",\"hidden\":\"TextInputElement_hidden__3Xul8\",\"textinput\":\"TextInputElement_textinput__2eOxW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"exit\":\"Exit_exit__36tB1\",\"translating\":\"Exit_translating__mA2Hf\",\"unnamed_exit\":\"Exit_unnamed_exit__1H6-H\",\"endpoint\":\"Exit_endpoint__1D08c\",\"missing_localization\":\"Exit_missing_localization__h2WGJ\",\"name\":\"Exit_name__22WdX\",\"confirm_delete\":\"Exit_confirm_delete__26Wo-\",\"activity\":\"Exit_activity__11sTW\",\"count\":\"Exit_count__1tNM8\",\"confirm_x\":\"Exit_confirm_x__1AODA\",\"recent_messages\":\"Exit_recent_messages__1wUzf\",\"no_recents\":\"Exit_no_recents__R97kK\",\"title\":\"Exit_title__3Ugsu\",\"loading\":\"Exit_loading__37ssZ\",\"message\":\"Exit_message__Q_zU9\",\"text\":\"Exit_text__1-x4W\",\"sent\":\"Exit_sent__1DkCx\"};","import { Methods } from 'components/flow/routers/webhook/helpers';\nimport { FlowTypes, Operators, Types } from 'config/interfaces';\n\n// we don't concern ourselves with patch versions\nexport const SPEC_VERSION = '13.1';\n\nexport interface Languages {\n  [iso: string]: string;\n}\n\nexport interface Language {\n  name: string;\n  iso: string;\n}\n\nexport interface Environment {\n  date_format: string;\n  time_format: string;\n  timezone: string;\n  languages: string[];\n}\n\nexport interface Endpoints {\n  attachments: string;\n  resthooks: string;\n  recents: string;\n  fields: string;\n  globals: string;\n  groups: string;\n  recipients: string;\n  flows: string;\n  revisions: string;\n  activity: string;\n  labels: string;\n  channels: string;\n  classifiers: string;\n  ticketers: string;\n  environment: string;\n  languages: string;\n  templates: string;\n  completion: string;\n  functions: string;\n  simulateStart: string;\n  simulateResume: string;\n  editor: string;\n}\n\nexport interface FlowEditorConfig {\n  localStorage: boolean;\n  endpoints: Endpoints;\n  flow: string;\n  flowType: FlowTypes;\n  showTemplates?: boolean;\n  showDownload?: boolean;\n  mutable?: boolean;\n  debug?: boolean;\n  path?: string;\n  headers?: any;\n  onLoad?: () => void;\n  onActivityClicked?: (uuid: string) => void;\n  onChangeLanguage?: (code: string, name: string) => void;\n\n  // help links\n  help: { [key: string]: string };\n\n  // whether to force a save on load\n  forceSaveOnLoad?: boolean;\n\n  filters?: string[];\n\n  excludeTypes?: string[];\n\n  excludeOperators?: string[];\n}\n\nexport interface LocalizationMap {\n  [lang: string]: {\n    [uuid: string]: any;\n  };\n}\n\nexport interface Result {\n  key: string;\n  name: string;\n  categories: string[];\n  node_uuids: string[];\n}\n\nexport enum DependencyType {\n  channel = 'channel',\n  classifier = 'classifier',\n  contact = 'contact',\n  field = 'field',\n  flow = 'flow',\n  group = 'group',\n  label = 'label',\n  template = 'template'\n}\n\nexport interface Dependency {\n  uuid?: string;\n  key?: string;\n  name: string;\n  type: DependencyType;\n  missing?: boolean;\n  nodes: { [uuid: string]: string[] };\n}\n\nexport interface FlowMetadata {\n  dependencies: Dependency[];\n  waiting_exit_uuids: string[];\n  results: Result[];\n  parent_refs: string[];\n  issues: FlowIssue[];\n}\n\nexport enum FlowIssueType {\n  MISSING_DEPENDENCY = 'missing_dependency',\n  LEGACY_EXTRA = 'legacy_extra',\n  INVALID_REGEX = 'invalid_regex'\n}\n\nexport interface FlowIssue {\n  type: FlowIssueType;\n  node_uuid: string;\n  action_uuid: string;\n  description: string;\n  dependency?: Dependency;\n  language?: string;\n  regex?: string;\n}\n\nexport interface FlowDetails {\n  definition: FlowDefinition;\n  metadata: FlowMetadata;\n}\n\nexport interface FlowDefinition {\n  localization: LocalizationMap;\n  language: string;\n  name: string;\n  nodes: FlowNode[];\n  uuid: string;\n  revision: number;\n  spec_version: string;\n  _ui: UIMetaData;\n}\n\nexport interface FlowNode {\n  uuid: string;\n  actions: Action[];\n  exits: Exit[];\n  router?: Router;\n}\n\nexport interface Exit {\n  uuid: string;\n  destination_uuid?: string;\n}\n\nexport enum RouterTypes {\n  switch = 'switch',\n  random = 'random'\n}\n\nexport interface Router {\n  type: RouterTypes;\n  result_name?: string;\n  categories: Category[];\n  wait?: Wait;\n}\n\nexport interface Channel {\n  uuid: string;\n  name: string;\n}\n\nexport interface Case {\n  uuid: string;\n  type: Operators;\n  category_uuid: string;\n  arguments?: string[];\n  omit_operand?: boolean;\n}\n\nexport interface Category {\n  uuid: string;\n  name: string;\n  exit_uuid: string;\n}\n\nexport interface TemplateTranslation {\n  language: string;\n  status: string;\n  content: string;\n}\n\nexport interface Template {\n  created_on: Date;\n  modified_on: Date;\n  translations: TemplateTranslation[];\n}\n\nexport interface SwitchRouter extends Router {\n  cases: Case[];\n  operand: string;\n  default_category_uuid: string;\n}\n\nexport enum WaitTypes {\n  msg = 'msg'\n}\n\nexport enum HintTypes {\n  digits = 'digits',\n  audio = 'audio',\n  image = 'image',\n  video = 'video',\n  location = 'location'\n}\n\nexport interface Hint {\n  type: HintTypes;\n  count?: number;\n}\n\nexport interface Timeout {\n  category_uuid: string;\n  seconds: number;\n}\n\nexport interface Wait {\n  type: WaitTypes;\n  timeout?: Timeout;\n  hint?: Hint;\n}\n\nexport interface Group {\n  uuid: string;\n  name: string;\n}\n\nexport interface Contact {\n  uuid: string;\n  name: string;\n}\n\nexport interface ChangeGroups extends Action {\n  groups: Group[];\n}\n\nexport interface RemoveFromGroups extends ChangeGroups {\n  all_groups: boolean;\n}\n\nexport interface Field {\n  key: string;\n  name: string;\n}\n\nexport interface Label {\n  uuid: string;\n  name: string;\n}\n\nexport interface Flow {\n  uuid: string;\n  name: string;\n}\n\nexport interface Action {\n  type: Types;\n  uuid: string;\n}\n\nexport interface SetContactField extends Action {\n  field: Field;\n  value: string;\n}\n\nexport interface SetContactName extends Action {\n  type: Types.set_contact_name;\n  name: string;\n}\n\nexport interface SetContactLanguage extends Action {\n  type: Types.set_contact_language;\n  language: string;\n}\n\nexport interface SetContactChannel extends Action {\n  type: Types.set_contact_channel;\n  channel: Channel;\n}\n\nexport type SetContactProperty = SetContactName | SetContactLanguage | SetContactChannel;\n\nexport type SetContactAttribute = SetContactField | SetContactProperty;\n\n// tslint:disable-next-line:no-empty-interface\nexport interface Missing extends Action {}\n\nexport interface RecipientsAction extends Action {\n  contacts: Contact[];\n  groups: Group[];\n  legacy_vars?: string[];\n}\n\nexport interface TemplateTranslation {\n  channel: Channel;\n  content: string;\n  language: string;\n  status: string;\n  variable_count: number;\n}\n\nexport interface TemplateOptions {\n  translations: TemplateTranslation[];\n}\n\nexport interface MsgTemplate {\n  name: string;\n  uuid: string;\n}\n\nexport interface MsgTemplating {\n  uuid: string;\n  template: MsgTemplate;\n  variables: string[];\n}\n\nexport interface SendMsg extends Action {\n  text: string;\n  all_urns?: boolean;\n  quick_replies?: string[];\n  attachments?: string[];\n  topic?: string;\n  templating?: MsgTemplating;\n}\n\nexport interface SayMsg extends Action {\n  text: string;\n  audio_url?: string;\n}\n\nexport interface PlayAudio extends Action {\n  audio_url: string;\n}\n\nexport interface BroadcastMsg extends RecipientsAction {\n  text: string;\n}\n\nexport interface AddLabels extends Action {\n  labels: Label[];\n}\n\nexport interface AddURN extends Action {\n  scheme: string;\n  path: string;\n}\n\nexport interface SetPreferredChannel extends Action {\n  language: string;\n}\n\nexport interface SendEmail extends Action {\n  subject: string;\n  body: string;\n  addresses: string[];\n}\n\nexport interface SetRunResult extends Action {\n  name: string;\n  value: string;\n  category?: string;\n}\n\nexport interface Headers {\n  [name: string]: string;\n}\n\nexport interface Classifier {\n  uuid: string;\n  name: string;\n}\n\nexport interface Ticketer {\n  uuid: string;\n  name: string;\n}\n\nexport interface TransferAirtime extends Action {\n  amounts: { [name: string]: number };\n  result_name: string;\n}\n\nexport interface CallClassifier extends Action {\n  classifier: Classifier;\n  input: string;\n  result_name: string;\n}\n\nexport interface CallResthook extends Action {\n  resthook: string;\n  result_name: string;\n}\n\nexport interface CallWebhook extends Action {\n  url: string;\n  method: Methods;\n  result_name: string;\n  body?: string;\n  headers?: Headers;\n}\n\nexport interface OpenTicket extends Action {\n  ticketer: Ticketer;\n  subject: string;\n  body: string;\n  result_name: string;\n}\n\nexport interface StartFlow extends Action {\n  flow: Flow;\n}\n\nexport interface StartSession extends RecipientsAction {\n  flow: Flow;\n  create_contact?: boolean;\n  contact_query?: string;\n}\n\nexport interface UIMetaData {\n  nodes: { [key: string]: UINode };\n  languages: { [iso: string]: string }[];\n  translation_filters?: { categories: boolean; rules: boolean };\n}\n\nexport interface FlowPosition {\n  left: number;\n  top: number;\n  right?: number;\n  bottom?: number;\n}\n\nexport interface Dimensions {\n  width: number;\n  height: number;\n}\n\nexport interface UIConfig {\n  [key: string]: any;\n}\n\nexport interface UINode {\n  position: FlowPosition;\n  // ui type, used for split by expression, contact field, etc\n  type?: Types;\n  config?: UIConfig;\n}\n\nexport interface StickyNote {\n  position: FlowPosition;\n  title: string;\n  body: string;\n  color?: string;\n}\n\nexport interface UIMetaData {\n  nodes: { [key: string]: UINode };\n  stickies: { [key: string]: StickyNote };\n}\n\nexport type AnyAction =\n  | Action\n  | ChangeGroups\n  | SetContactField\n  | SetContactName\n  | SetRunResult\n  | SendMsg\n  | SetPreferredChannel\n  | SendEmail\n  | CallClassifier\n  | CallWebhook\n  | StartFlow\n  | StartSession;\n\nexport enum ContactProperties {\n  UUID = 'uuid',\n  'Created By' = 'created_by',\n  'Modified By' = 'modified_by',\n  Org = 'org',\n  Name = 'name',\n  Language = 'language',\n  Timezone = 'timezone',\n  Channel = 'channel',\n  Email = 'email',\n  Mailto = 'mailto',\n  Phone = 'phone',\n  Groups = 'groups'\n}\n\nexport enum ValueType {\n  text = 'text',\n  numeric = 'numeric',\n  datetime = 'datetime',\n  state = 'state',\n  district = 'district',\n  ward = 'ward'\n}\n\nexport interface CreateOptions {\n  promptTextCreator?: any;\n  newOptionCreator?: any;\n  isValidNewOption?: any;\n  isOptionUnique?: any;\n  createNewOption?: any;\n  createPrompt?: string;\n}\n\nexport enum StartFlowArgs {\n  Complete = 'C',\n  Expired = 'E'\n}\n\nexport enum StartFlowExitNames {\n  Complete = 'Complete',\n  Expired = 'Expired'\n}\n\nexport enum WebhookExitNames {\n  Success = 'Success',\n  Failure = 'Failure'\n}\n\nexport enum TransferAirtimeExitNames {\n  Success = 'Success',\n  Failure = 'Failed'\n}\n","import { Action, Case, Category, Language, MsgTemplating } from 'flowTypes';\nimport { Asset } from 'store/flowContext';\n\nexport class LocalizedObject {\n  public localizedKeys: { [key: string]: boolean } = {};\n\n  private localizedObject: Action | Category | Case | any;\n  private localized: boolean = false;\n  private iso: string;\n  private name: string;\n  private language: Language;\n\n  constructor(object: Action | Category | Case | MsgTemplating, { id, name }: Asset) {\n    this.localizedObject = object;\n    this.iso = id;\n    this.language = { iso: this.iso, name };\n  }\n\n  public getLanguage(): Language {\n    if (!this.language) {\n      if (this.iso) {\n        this.language = { iso: this.iso, name: this.name };\n      }\n    }\n\n    return this.language;\n  }\n\n  public hasTranslation(key: string): boolean {\n    return key in this.localizedKeys;\n  }\n\n  // We use explicit any here to make this generic across all actions,\n  // note this means we'll attempt to set any property in our localization\n  // dictionary regardless of the object type\n  public addTranslation(key: string, value: any): void {\n    // localization shouldn't side-affect the original object\n    if (!this.localized) {\n      this.localizedObject = Object.assign({}, this.localizedObject);\n      this.localized = true;\n    }\n\n    if (Array.isArray(this.localizedObject[key])) {\n      this.localizedObject[key] = value;\n    } else {\n      if (value.length === 1) {\n        this.localizedObject[key] = value[0];\n      }\n    }\n\n    this.localizedKeys[key] = true;\n  }\n\n  public isLocalized(): boolean {\n    return this.localized;\n  }\n\n  public getObject(): Action | Case | Category | MsgTemplating {\n    return this.localizedObject;\n  }\n}\n\nexport default class Localization {\n  public static translate(\n    object: Action | Category | Case | MsgTemplating,\n    language: Asset,\n    translations?: { [uuid: string]: any }\n  ): LocalizedObject {\n    const localized: LocalizedObject = new LocalizedObject(object, language);\n\n    if (translations) {\n      if (object.uuid in translations) {\n        const values = translations[object.uuid];\n        // We don't want to side affect our action\n        Object.keys(values).forEach(key => {\n          return localized.addTranslation(key, values[key]);\n        });\n      }\n    }\n\n    return localized;\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport { renderIf } from 'utils';\n\nimport styles from './Button.module.scss';\n\nexport enum ButtonTypes {\n  primary = 'primary',\n  secondary = 'secondary',\n  tertiary = 'tertiary'\n}\nexport interface ButtonProps {\n  name: string;\n  onClick: any;\n  disabled?: boolean;\n  type?: ButtonTypes;\n  leftSpacing?: boolean;\n  topSpacing?: boolean;\n  iconName?: string;\n  onRef?: (ele: any) => void;\n}\n\ninterface ButtonState {\n  active: boolean;\n}\n\nexport default class Button extends React.Component<ButtonProps, ButtonState> {\n  constructor(props: ButtonProps) {\n    super(props);\n    this.state = {\n      active: false\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleMouseDown(event: React.MouseEvent<HTMLDivElement>): void {\n    this.setState({ active: true });\n  }\n\n  private handleMouseUp(event: React.MouseEvent<HTMLDivElement>): void {\n    this.setState({ active: false });\n  }\n\n  public render(): JSX.Element {\n    const { onRef, name, onClick, type, disabled, leftSpacing, topSpacing, iconName } = this.props;\n\n    return (\n      <div\n        ref={onRef}\n        style={{\n          marginLeft: leftSpacing ? 10 : 0,\n          marginTop: topSpacing ? 10 : 0\n        }}\n        onClick={onClick}\n        onMouseDown={this.handleMouseDown}\n        onMouseUp={this.handleMouseUp}\n        className={`${styles.btn} ${styles[type!]} ${disabled ? styles.disabled : ''} ${\n          this.state.active ? styles.active : ''\n        }`}\n      >\n        {renderIf(iconName != null)(<span style={{ paddingRight: 4 }} className={iconName} />)}\n        {name}\n      </div>\n    );\n  }\n}\n","import {\n  Action,\n  Case,\n  Category,\n  ContactProperties,\n  FlowPosition,\n  LocalizationMap\n} from 'flowTypes';\nimport { Query } from 'immutability-helper';\nimport * as React from 'react';\nimport Localization, { LocalizedObject } from 'services/Localization';\nimport { Asset, Assets } from 'store/flowContext';\nimport { FormEntry } from 'store/nodeEditor';\nimport { v4 as generateUUID } from 'uuid';\nimport variables from 'variables.module.scss';\n\nexport const V4_UUID = /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i;\nconst LABEL_CHARS = /^[a-zA-Z0-9-][a-zA-Z0-9- ]*$/;\nconst MAX_LABEL_LENGTH = 36;\nconst SNAKED_CHARS = /\\s|-+(?=\\S)/g;\n\nexport const MAX_REFLOW_ATTEMPTS = 100;\nexport const ACTIVITY_INTERVAL = 5000;\nexport const COLLISION_FUDGE = 5;\nexport const GRID_SIZE: number = parseInt(variables.grid_size, 10) || 20;\nexport const NODE_SPACING: number = parseInt(variables.node_spacing, 10) || 10;\nexport const NODE_PADDING: number = parseInt(variables.node_padding, 10) || 10;\nexport const QUIET_NOTE = 2000;\nexport const CONFIRMATION_TIME = 2000;\n\nexport interface BoolMap {\n  [key: string]: boolean;\n}\n\ninterface Bounds {\n  left: number;\n  top: number;\n  right: number;\n  bottom: number;\n}\n\nexport type LabelIdCb = (label?: string, labelKey?: string, valueKey?: string) => string;\n\n/**\n * Adjusts the left and top offsets to a grid\n * @param left horizontal offset\n * @param top vertical offset\n */\nexport const snapToGrid = (left: number, top: number): { left: number; top: number } => {\n  let leftAdjust = left % GRID_SIZE;\n  let topAdjust = top % GRID_SIZE;\n\n  if (leftAdjust > GRID_SIZE / 3) {\n    leftAdjust = GRID_SIZE - leftAdjust;\n  } else {\n    leftAdjust = leftAdjust * -1;\n  }\n\n  if (topAdjust > GRID_SIZE / 3) {\n    topAdjust = GRID_SIZE - topAdjust;\n  } else {\n    topAdjust = topAdjust * -1;\n  }\n\n  return {\n    left: Math.max(left + leftAdjust, 0),\n    top: Math.max(top + topAdjust, 0)\n  };\n};\n\n/**\n * Adjusts the position offsets to a grid\n */\nexport const snapPositionToGrid = (position: FlowPosition): FlowPosition => {\n  let leftAdjust = position.left % GRID_SIZE;\n  let topAdjust = position.top % GRID_SIZE;\n\n  if (leftAdjust > GRID_SIZE / 3) {\n    leftAdjust = GRID_SIZE - leftAdjust;\n  } else {\n    leftAdjust = leftAdjust * -1;\n  }\n\n  if (topAdjust > GRID_SIZE / 3) {\n    topAdjust = GRID_SIZE - topAdjust;\n  } else {\n    topAdjust = topAdjust * -1;\n  }\n\n  const left = Math.max(position.left + leftAdjust, 0);\n  const top = Math.max(position.top + topAdjust, 0);\n  const right = left + position.right - position.left;\n  const bottom = top + position.bottom - position.top;\n\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n};\n\n/**\n * Turns a string array into a bool map for constant lookup\n * @param {string[]} array - an array of strings, e.g. contact fields\n * @returns {object} A map of each string\n */\nexport const toBoolMap = (array: string[]): BoolMap =>\n  array.reduce(\n    (map: BoolMap, item: string) => ({\n      ...map,\n      [item]: true\n    }),\n    {}\n  );\n\n/**\n * Inserts commas into numbers where appropriate for better readability\n * @param {number} value - A number, e.g. 10000\n * @returns {string} A comma-separated string, e.g. 10,000\n */\nexport const addCommas = (value: number): string =>\n  value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n/**\n * Replaces spaces with underscores\n * @param {string} value - A space-separated string to be snaked, e.g. a raw flow field name ('my flow field')\n * @returns {string} A snaked string, e.g. 'my_flow_field'\n */\nexport const snakify = (value: string): string =>\n  value\n    .toLowerCase()\n    .trim()\n    .replace(SNAKED_CHARS, '_');\n/**\n * Returns true if a given UUID matches v4 format\n * @param {string} uuid - A version 4 UUID (no braces, uppercase OK)\n * @returns {boolean}\n */\nexport const validUUID = (uuid: string): boolean => V4_UUID.test(uuid);\n\n/**\n * Returns a given string in title case, e.g. 'full name' becomes 'Full Name'\n * @param {string} str - string to be title-cased\n * @returns {string} Title-cased string\n */\nexport const titleCase = (str: string): string =>\n  str.replace(/\\b\\w+/g, s => s.charAt(0).toUpperCase() + s.substr(1).toLowerCase());\n\nexport const getSelectClassForEntry = (entry: FormEntry): string => {\n  if (entry && entry.validationFailures && entry.validationFailures.length > 0) {\n    return 'select-invalid';\n  }\n  return '';\n};\n\nexport const getSelectClass = (errors: number): string => {\n  if (errors === 0) {\n    return 'react-select select-base';\n  }\n  // We use a global selector here for react-select\n  return 'react-select select-base select-invalid';\n};\n\nexport const reorderList = (list: any[], startIndex: number, endIndex: number): any[] => {\n  const [removed] = list.splice(startIndex, 1);\n\n  list.splice(endIndex, 0, removed);\n\n  return list;\n};\n\n/**\n * Compares basic objects (no methods and DOM nodes; property order important)\n * @param {object} objA - basic object\n * @param {object} objB - basic object\n * @returns {boolean}\n */\nexport const jsonEqual = (objA: {}, objB: {}): boolean =>\n  JSON.stringify(objA) === JSON.stringify(objB);\n\n/**\n * Checks whether any of a list of error strings contain one or more queries.\n * Used to determine whether a particular error has been encountered.\n */\nexport const hasErrorType = (errors: string[], exps: RegExp[]): boolean => {\n  if (!errors.length) {\n    return false;\n  }\n  for (const error of errors) {\n    for (const exp of exps) {\n      if (error.match(exp)) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const getLocalizedObject = (localizations: LocalizedObject[]) => {\n  if (localizations && localizations.length) {\n    return localizations[0];\n  }\n};\n\nexport interface ClickHandler {\n  // onClick: (event: React.MouseEvent<HTMLDivElement>) => void;\n  onMouseDown: (event: React.MouseEvent<HTMLDivElement>) => void;\n  onMouseUp: (event: React.MouseEvent<HTMLDivElement>) => void;\n}\n\n/**\n * Creates a simple click handler via onMouseDown and onMouseUp.\n * This is a necessity in order to let jsPlumb manage our element dragging.\n * @param onClick\n */\nexport const createClickHandler = (\n  onClick: (event: React.MouseEvent<HTMLElement>) => void,\n  shouldCancelClick: () => boolean = null,\n  onMouseDown?: (event: React.MouseEvent<HTMLElement>) => void\n): any => {\n  return {\n    onMouseDown: (event: React.MouseEvent<HTMLElement>) => {\n      if (onMouseDown) {\n        onMouseDown(event);\n      }\n    },\n    onMouseUp: (event: React.MouseEvent<HTMLElement>) => {\n      if (!shouldCancelClick || !shouldCancelClick()) {\n        onClick(event);\n      }\n    }\n  };\n};\n\nexport const getLocalization = (\n  obj: Action | Category | Case,\n  localization: LocalizationMap,\n  language: Asset\n) => Localization.translate(obj, language, localization[language.id]);\n\n/** istanbul ignore next */\nexport const dump = (thing: any) => console.log(JSON.stringify(thing, null, 4));\n\n/**\n * Apply emphasis style\n */\nexport const emphasize = (text: string) => <span className=\"emphasize\">{text}</span>;\n\n/**\n * Does property exist in our ContactProperties enum?\n * @param {string} propertyToCheck - 'name' key on react-select AutoCompleteOption\n */\nexport const propertyExists = (propertyToCheck: string) => {\n  for (const property of Object.keys(ContactProperties)) {\n    if (property.toLowerCase() === propertyToCheck.toLowerCase().trim()) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Should x element be rendered?\n */\nexport const renderIf = (predicate: boolean) => (then: JSX.Element, otherwise?: JSX.Element) =>\n  predicate ? then : otherwise ? otherwise : null;\n\n/**\n * Does the label meet our length requirements?\n * @param {string} label - label created by react-select\n */\nexport const properLabelLength = (label: string = '') =>\n  label.length > 0 && label.length <= MAX_LABEL_LENGTH;\n\n/**\n * Does the label meet our character requirements?\n * @param {string} label\n */\nexport const containsOnlyLabelChars = (label: string = '') => LABEL_CHARS.test(label);\n\n/**\n * Does the label meet our length, character requirements?\n * @param {string} label - label created by react-select\n */\nexport const isValidLabel = (label: string) =>\n  properLabelLength(label) && containsOnlyLabelChars(label);\n\nexport const isRealValue = (obj: any) => obj !== null && obj !== undefined;\n\n/* istanbul ignore next */\nexport const timeStart = (name: string) =>\n  process.env.NODE_ENV === 'development' && console.time(name);\n\n/* istanbul ignore next */\nexport const timeEnd = (name: string) =>\n  process.env.NODE_ENV === 'development' && console.timeEnd(name);\n\nexport const log = (...message: any[]) =>\n  process.env.NODE_ENV === 'development' && console.log(...message);\n\nexport const capitalize = (str: string) =>\n  str.replace(/(?:^|\\s)\\S/g, captured => captured.toUpperCase());\n\nexport const set = (val: any): Query<any> => ({ $set: val });\n\nexport const setTrue = (): Query<true> => set(true);\n\nexport const setFalse = (): Query<false> => set(false);\n\nexport const setNull = (): Query<null> => set(null);\n\nexport const setEmpty = (): Query<string> => set('');\n\nexport const merge = (val: any): Query<any> => ({ $merge: val });\n\nexport const unset = (val: any): Query<any> => ({ $unset: val });\n\nexport const push = (arr: any[]): Query<any[]> => ({ $push: arr });\n\n// tslint:disable-next-line:array-type\nexport const splice = (arr: Array<Array<any>>): Query<Array<Array<any>>> => ({\n  $splice: arr\n});\n\nexport const optionExists = (newOptName: string, options: any[]) =>\n  options.find(({ name }) => name.toLowerCase().trim() === newOptName.toLowerCase().trim())\n    ? true\n    : false;\n\n/* export const isOptionUnique: IsOptionUniqueHandler = ({ option, options, labelKey, valueKey }) =>\n    !propertyExists(option.name) && !optionExists(option.name, options);\n\nexport const isValidNewOption: IsValidNewOptionHandler = ({ label }) => isValidLabel(label);\n*/\n/* export const composeCreateNewOption = ({\n    idCb,\n    type\n}: {\n    idCb: LabelIdCb;\n    type: AssetType;\n}): NewOptionCreatorHandler => ({ label, labelKey, valueKey }) => ({\n    id: idCb(label, labelKey, valueKey),\n    name: label,\n    type,\n    isNew: true\n});*/\n\n/**\n * Deduplicate values in an array.\n * Pass it a key to deduplicate based on obj key.\n */\nexport const uniqueBy = (a: any[], key: string): any[] => {\n  const seen: any = {};\n  return a.filter((item: any) => {\n    const k = item[key];\n    return seen.hasOwnProperty(k) ? false : (seen[k] = true);\n  });\n};\n\nexport const downloadJSON = (obj: any, name: string): void => {\n  const dataStr =\n    'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(obj, null, 2));\n  const downloadAnchorNode = document.createElement('a');\n  downloadAnchorNode.setAttribute('href', dataStr);\n  downloadAnchorNode.setAttribute('download', name + '.json');\n  document.body.appendChild(downloadAnchorNode); // required for firefox\n  downloadAnchorNode.click();\n  downloadAnchorNode.remove();\n};\n\nexport const fetchAsset = (asset: Asset) => (assets: Assets, id: string): Promise<Asset> => {\n  return new Promise<Asset>((resolve, reject) => {\n    resolve(asset);\n  });\n};\n\nexport let createUUID = (): string => {\n  return generateUUID();\n};\n\nexport const seededUUIDs = (seed: number = 1): any => {\n  let current = seed;\n  const randomNext = () => {\n    const x = Math.sin(current++) * 10000;\n    return x - Math.floor(x);\n  };\n\n  const random = (min: number, max: number): number => {\n    return Math.floor(randomNext() * (max - min) + min);\n  };\n\n  return () => {\n    const randomSeed: number[] = [];\n    for (let idx = 0; idx < 16; idx++) {\n      randomSeed.push(random(0, 250));\n    }\n    return generateUUID({ random: randomSeed });\n  };\n};\n\nexport const range = (start: number, end: number) =>\n  Array.from({ length: end - start }, (v: number, k: number) => k + start);\n\nexport const pluralize = (count: number, noun: string, suffix: string = 's'): string =>\n  `${noun}${count !== 1 ? suffix : ''}`;\n\nexport const hasString = (names: string[], key: string): boolean =>\n  !!names.find((item: string) => item === key);\n\nexport const scalarArrayEquals = (a: any[], b: any[]) =>\n  a.every((value, index) => value === b[index]);\n\nexport const getURNPath = (urn: string) => {\n  return urn.split(':')[1];\n};\n\nexport const copyToClipboard = (text: string) => {\n  navigator.clipboard.writeText(text);\n};\n\nexport const throttle = (func: any, timeout: any) => {\n  let ready: boolean = true;\n\n  return (...args: any) => {\n    if (!ready) {\n      return;\n    }\n\n    ready = false;\n    func(...args);\n    setTimeout(() => {\n      ready = true;\n    }, timeout);\n  };\n};\n\nexport const traceUpdate = (component: any, prevProps: any, prevState?: any) => {\n  const messages: string[] = [];\n  Object.entries(component.props).forEach(\n    ([key, val]) => prevProps[key] !== val && messages.push(`Prop: '${key}' changed`)\n  );\n  if (prevState && component.state) {\n    Object.entries(component.state).forEach(\n      ([key, val]) => prevState[key] !== val && messages.push(`State: '${key}' changed`)\n    );\n  }\n\n  if (messages.length > 0) {\n    log('****  ' + component._reactInternalFiber.type.name + ' changed');\n    messages.forEach((message: string) => {\n      log(message);\n    });\n  }\n};\n\nexport const debounce = (fn: any, quiet: number, closure: any = null) => {\n  if (fn.timeout) {\n    window.clearTimeout(fn.timeout);\n  }\n  fn.timeout = window.setTimeout(closure || fn, quiet);\n};\n\nexport const onNextRender = (fn: any) => {\n  window.setTimeout(fn, 0);\n};\n\nexport const desnake = (text: string): string => {\n  if (!text) {\n    return text;\n  }\n  return text\n    .split('_')\n    .join(' ')\n    .toLowerCase();\n};\n\nexport const bool = (prop: boolean) => {\n  return prop ? 'true' : null;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Button, { ButtonProps, ButtonTypes } from 'components/button/Button';\nimport shared from 'components/shared.module.scss';\nimport * as React from 'react';\nimport { renderIf } from 'utils';\n\nimport styles from './Dialog.module.scss';\n\nexport enum HeaderStyle {\n  NORMAL = 'normal',\n  BARBER = 'barber'\n}\n\nexport interface ButtonSet {\n  primary: ButtonProps;\n  secondary?: ButtonProps;\n  tertiary?: ButtonProps;\n}\n\nexport interface Tab {\n  name: string;\n  body: JSX.Element;\n  hasErrors?: boolean;\n  icon?: string;\n  checked?: boolean;\n}\n\ninterface Buttons {\n  leftButtons: JSX.Element[];\n  rightButtons: JSX.Element[];\n}\n\nexport interface DialogProps {\n  title: string;\n  subtitle?: string;\n  headerIcon?: string;\n  headerClass?: string;\n  headerStyle?: HeaderStyle;\n  buttons?: ButtonSet;\n  gutter?: JSX.Element;\n  noPadding?: boolean;\n  tabs?: Tab[];\n  className?: string;\n}\n\nexport interface DialogState {\n  activeTab: number;\n}\n\n/**\n * A component that has a front and back and can flip back and forth between them\n */\nexport default class Dialog extends React.Component<DialogProps, DialogState> {\n  private tabFocus: any = null;\n  private primaryButton: any = null;\n\n  constructor(props: DialogProps) {\n    super(props);\n    this.state = {\n      activeTab: -1\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^get/]\n    });\n  }\n\n  public showTab(index: number): void {\n    this.setState({ activeTab: index });\n  }\n\n  private handlePrimaryButton(onClick: any): void {\n    onClick();\n\n    this.tabFocus = window.setTimeout(() => {\n      let foundTab = false;\n      // focus on a tab with errors\n      (this.props.tabs || []).forEach((tab: Tab, index: number) => {\n        if (tab.hasErrors) {\n          this.setState({ activeTab: index });\n          foundTab = true;\n          return;\n        }\n      });\n\n      if (!foundTab) {\n        // or focus on the main content\n        this.setState({ activeTab: -1 });\n      }\n    }, 0);\n  }\n\n  private handleKey(event: KeyboardEvent): void {\n    if (event.key === 'Enter' && event.shiftKey) {\n      if (this.primaryButton) {\n        event.preventDefault();\n        event.stopPropagation();\n        (event.target as any).blur();\n        this.primaryButton.click();\n        (event.target as any).focus();\n      } else {\n        console.log('No primary button!');\n      }\n    }\n  }\n\n  public componentDidMount(): void {\n    window.document.addEventListener('keydown', this.handleKey, {\n      capture: true\n    });\n  }\n\n  public componentWillUnmount(): void {\n    window.clearTimeout(this.tabFocus);\n    window.document.removeEventListener('keydown', this.handleKey, {\n      capture: true\n    });\n  }\n\n  private getButtons(): Buttons {\n    const rightButtons: JSX.Element[] = [];\n    const buttons = this.props.buttons || {\n      primary: null,\n      secondary: null,\n      tertiary: null\n    };\n\n    if (buttons.secondary) {\n      rightButtons.push(<Button key={0} type={ButtonTypes.secondary} {...buttons.secondary} />);\n    }\n\n    if (buttons.primary) {\n      rightButtons.push(\n        <Button\n          key={'button_' + buttons.primary.name}\n          onRef={(ref: any) => {\n            this.primaryButton = ref;\n          }}\n          onClick={() => {\n            this.handlePrimaryButton(buttons.primary.onClick);\n          }}\n          leftSpacing={true}\n          name={buttons.primary.name}\n          disabled={buttons.primary.disabled}\n          type={ButtonTypes.primary}\n        />\n      );\n    }\n\n    const leftButtons: JSX.Element[] = [];\n\n    // Our left most button if we have one\n    if (buttons.tertiary) {\n      leftButtons.push(<Button key={0} type={ButtonTypes.tertiary} {...buttons.tertiary} />);\n    }\n\n    return {\n      leftButtons,\n      rightButtons\n    };\n  }\n\n  public render(): JSX.Element {\n    const headerClasses = [styles.header];\n\n    if (this.state.activeTab > -1) {\n      headerClasses.push(styles.clickable);\n    }\n\n    if (this.props.headerClass) {\n      headerClasses.push(shared[this.props.headerClass]);\n    }\n\n    if (this.props.headerIcon) {\n      headerClasses.push(styles.iconed);\n    }\n\n    if (this.props.headerStyle === HeaderStyle.BARBER) {\n      headerClasses.push(styles.barber);\n    }\n\n    const activeClasses = [styles.dialog];\n    const { leftButtons, rightButtons } = this.getButtons();\n\n    if (this.props.className) {\n      activeClasses.push(this.props.className);\n    }\n\n    return (\n      <div className={activeClasses.join(' ')}>\n        {(this.props.tabs || []).length > 0 ? (\n          <div className={styles.tabs}>\n            {(this.props.tabs || []).map((tab: Tab, index: number) => (\n              <div\n                key={'tab_' + tab.name}\n                className={styles.tab + ' ' + (index === this.state.activeTab ? styles.active : '')}\n                onClick={(evt: React.MouseEvent<HTMLDivElement>) => {\n                  evt.stopPropagation();\n                  this.setState({ activeTab: index });\n                }}\n              >\n                {tab.name} {tab.icon ? <span className={styles.tab_icon + ' ' + tab.icon} /> : null}\n                {tab.checked ? <span className={styles.tab_icon + ' fe-check'} /> : null}\n              </div>\n            ))}\n          </div>\n        ) : null}\n        <div\n          onClick={() => {\n            this.setState({ activeTab: -1 });\n          }}\n          className={headerClasses.join(' ')}\n        >\n          {this.state.activeTab > -1 ? <div className={styles.header_overlay} /> : null}\n          {renderIf(this.props.headerIcon !== undefined)(\n            <span className={`${styles.header_icon} ${this.props.headerIcon}`} />\n          )}\n          <div className={styles.title_container}>\n            <div className={styles.title}>{this.props.title}</div>\n            <div className={styles.subtitle}>{this.props.subtitle}</div>\n          </div>\n        </div>\n        <div className={this.props.noPadding ? '' : styles.content}>\n          {this.state.activeTab > -1\n            ? this.props.tabs![this.state.activeTab].body\n            : this.props.children}\n        </div>\n\n        <div className={styles.footer}>\n          <div className={styles.buttons}>\n            {renderIf(leftButtons.length > 0)(\n              <div className={styles.left_buttons}>{leftButtons}</div>\n            )}\n            {renderIf(this.props.gutter != null)(\n              <div className={styles.gutter}>{this.props.gutter}</div>\n            )}\n            <div className={styles.right_buttons}>{rightButtons}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","enum Constants {\n  UPDATE_EDITOR_STATE = 'UPDATE_EDITOR_STATE',\n  UPDATE_NODE_EDITOR_SETTINGS = 'UPDATE_NODE_EDITOR_SETTINGS',\n  UPDATE_TRANSLATING = 'UPDATE_TRANSLATING',\n  UPDATE_BASE_LANGUAGE = 'UPDATE_BASE_LANGUAGE',\n  UPDATE_LANGUAGES = 'UPDATE_LANGUAGES',\n  UPDATE_LANGUAGE = 'UPDATE_LANGUAGE',\n  UPDATE_FETCHING_FLOW = 'FETCHING_FLOW',\n  UPDATE_DEFINITION = 'UPDATE_DEFINITION',\n  UPDATE_NODE_DRAGGING = 'UPDATE_NODE_DRAGGING',\n  UPDATE_FLOWS = 'UPDATE_FLOWS',\n  UPDATE_PENDING_CONNECTIONS = 'UPDATE_PENDING_CONNECTIONS',\n  REMOVE_PENDING_CONNECTION = 'REMOVE_PENDING_CONNECTION',\n  UPDATE_COMPONENTS = 'UPDATE_COMPONENTS',\n  UPDATE_CONTACT_FIELDS = 'UPDATE_CONTACT_FIELDS',\n  UPDATE_GROUPS = 'UPDATE_GROUPS',\n  UPDATE_RESULT_MAP = 'UPDATE_RESULT_MAP',\n  UPDATE_ASSET_MAP = 'UPDATE_ASSET_MAP',\n  UPDATE_NODES = 'UPDATE_NODES',\n  UPDATE_ISSUES = 'UPDATE_ISSUES',\n  UPDATE_METADATA = 'UPDATE_METADATA',\n  UPDATE_EXITS = 'UPDATE_EXITS',\n  UPDATE_NODE_EDITOR_OPEN = 'UPDATE_NODE_EDITOR_OPEN',\n  UPDATE_CREATE_NODE_POSITION = 'UPDATE_CREATE_NODE_POSITION',\n  UPDATE_DRAG_GROUP = 'UPDATE_DRAG_GROUP',\n  UPDATE_TYPE_CONFIG = 'UPDATE_TYPE_CONFIG',\n  UPDATE_USER_ADDING_ACTION = 'UPDATE_USER_ADDING_ACTION',\n  INCREMENT_SUGGESTED_RESULT_NAME_COUNT = 'INCREMENT_SUGGESTED_RESULT_NAME_COUNT'\n}\n\nexport default Constants;\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\n\n// tslint:disable-next-line: no-empty-interface\ninterface FixyProps {}\n\ninterface FixyState {\n  top: number;\n  fixed: boolean;\n}\n\nexport class Fixy extends React.PureComponent<FixyProps, FixyState> {\n  private ele!: HTMLDivElement | null;\n\n  constructor(props: FixyProps) {\n    super(props);\n    this.state = {\n      top: 0,\n      fixed: false\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleScroll(): void {\n    const fixed = window.scrollY > this.state.top;\n    this.setState({ fixed });\n  }\n\n  public componentWillUnmount(): void {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  public componentDidMount(): void {\n    const top = this.ele!.getBoundingClientRect().top + window.scrollY;\n    const fixed = window.scrollY > top;\n    this.setState({ top, fixed });\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  public render(): JSX.Element {\n    let styles: React.CSSProperties = { position: 'absolute' };\n    if (this.state.fixed) {\n      styles = {\n        position: 'fixed',\n        top: 0\n      };\n    }\n\n    return (\n      <div\n        ref={ele => {\n          this.ele = ele;\n        }}\n        style={styles}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import { FlowDefinition, FlowNode, UINode, FlowMetadata, FlowIssue } from 'flowTypes';\nimport { combineReducers, Action } from 'redux';\nimport ActionTypes, {\n  UpdateAssetsAction,\n  UpdateBaseLanguageAction,\n  UpdateContactFieldsAction,\n  UpdateDefinitionAction,\n  UpdateNodesAction,\n  UpdateMetadataAction,\n  UpdateIssuesAction\n} from 'store/actionTypes';\nimport Constants from 'store/constants';\nimport { Type } from 'config/interfaces';\n\n// tslint:disable:no-shadowed-variable\nexport interface RenderNodeMap {\n  [uuid: string]: RenderNode;\n}\n\nexport interface FlowIssueMap {\n  [uuid: string]: FlowIssue[];\n}\n\nexport interface RenderNode {\n  ui: UINode;\n  node: FlowNode;\n  inboundConnections: { [nodeUUID: string]: string };\n  ghost?: boolean;\n}\n\nexport interface RenderAction {\n  action: Action;\n  config: Type;\n  index?: number;\n}\n\nexport interface FunctionExample {\n  template: string;\n  output: string;\n}\n\nexport interface CompletionOption {\n  name?: string;\n  summary: string;\n\n  // functions\n  signature?: string;\n  detail?: string;\n  examples?: FunctionExample[];\n}\n\nexport interface ContactFields {\n  [snakedFieldName: string]: string;\n}\n\nexport enum AssetType {\n  Channel = 'channel',\n  Classifier = 'classifier',\n  Contact = 'contact',\n  ContactProperty = 'property',\n  Currency = 'currency',\n  Environment = 'environment',\n  Expression = 'expression',\n  Field = 'field',\n  Flow = 'flow',\n  Global = 'global',\n  Group = 'group',\n  Label = 'label',\n  Language = 'language',\n  Remove = 'remove',\n  Resthook = 'resthook',\n  Result = 'result',\n  Revision = 'revision',\n  Scheme = 'scheme',\n  Template = 'template',\n  Ticketer = 'ticketer',\n  URN = 'urn'\n}\n\nexport interface Reference {\n  nodeUUID: string;\n  actionUUID?: string;\n}\n\nexport interface Asset {\n  id: string;\n  name: string;\n  type: AssetType;\n\n  order?: number;\n  references?: Reference[];\n  isNew?: boolean;\n  content?: any;\n}\n\nexport const REMOVE_VALUE_ASSET = {\n  id: AssetType.Remove,\n  name: 'Remove Value',\n  type: AssetType.Remove\n};\n\nexport const DEFAULT_LANGUAGE = {\n  id: 'base',\n  name: 'Default',\n  type: AssetType.Language\n};\n\nexport interface AssetStore {\n  [assetType: string]: Assets;\n}\n\nexport interface AssetMap {\n  [id: string]: Asset;\n}\n\nexport interface Assets {\n  // our local cache of assets\n  items: AssetMap;\n\n  type: AssetType;\n\n  // an optional endpoint to search for more\n  endpoint?: string;\n\n  // option name for the id when fetching remotely\n  id?: string;\n\n  // have our assets already been loaded\n  prefetched?: boolean;\n}\n\nexport interface FlowContext {\n  metadata: FlowMetadata;\n  baseLanguage: Asset;\n  contactFields: ContactFields;\n  definition: FlowDefinition;\n  nodes: { [uuid: string]: RenderNode };\n  issues: FlowIssueMap;\n  assetStore: AssetStore;\n}\n\n// Initial state\nexport const initialState: FlowContext = {\n  definition: null,\n  baseLanguage: null,\n  metadata: {\n    dependencies: [],\n    results: [],\n    waiting_exit_uuids: [],\n    parent_refs: [],\n    issues: []\n  },\n  contactFields: {},\n  nodes: {},\n  issues: {},\n  assetStore: {}\n};\n\n// Action Creators\nexport const updateDefinition = (definition: FlowDefinition): UpdateDefinitionAction => ({\n  type: Constants.UPDATE_DEFINITION,\n  payload: {\n    definition\n  }\n});\n\nexport const updateNodes = (nodes: RenderNodeMap): UpdateNodesAction => ({\n  type: Constants.UPDATE_NODES,\n  payload: {\n    nodes\n  }\n});\n\nexport const updateIssues = (issues: FlowIssueMap): UpdateIssuesAction => ({\n  type: Constants.UPDATE_ISSUES,\n  payload: {\n    issues\n  }\n});\n\nexport const updateMetadata = (metadata: FlowMetadata): UpdateMetadataAction => {\n  return {\n    type: Constants.UPDATE_METADATA,\n    payload: {\n      metadata\n    }\n  };\n};\n\nexport const updateBaseLanguage = (baseLanguage: Asset): UpdateBaseLanguageAction => ({\n  type: Constants.UPDATE_BASE_LANGUAGE,\n  payload: {\n    baseLanguage\n  }\n});\n\nexport const updateContactFields = (contactFields: ContactFields): UpdateContactFieldsAction => ({\n  type: Constants.UPDATE_CONTACT_FIELDS,\n  payload: {\n    contactFields\n  }\n});\n\nexport const updateAssets = (assets: AssetStore): UpdateAssetsAction => ({\n  type: Constants.UPDATE_ASSET_MAP,\n  payload: {\n    assets\n  }\n});\n\n// Reducers\nexport const definition = (\n  state: FlowDefinition = initialState.definition,\n  action: ActionTypes\n) => {\n  switch (action.type) {\n    case Constants.UPDATE_DEFINITION:\n      return action.payload.definition;\n    default:\n      return state;\n  }\n};\n\nexport const nodes = (state: {} = initialState.nodes, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_NODES:\n      return action.payload.nodes;\n    default:\n      return state;\n  }\n};\n\nexport const issues = (state: {} = initialState.issues, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_ISSUES:\n      return action.payload.issues;\n    default:\n      return state;\n  }\n};\n\nexport const metadata = (state: FlowMetadata = initialState.metadata, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_METADATA:\n      return action.payload.metadata;\n    default:\n      return state;\n  }\n};\n\nexport const assetStore = (state: AssetStore = initialState.assetStore, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_ASSET_MAP:\n      return action.payload.assets;\n    default:\n      return state;\n  }\n};\n\nexport const baseLanguage = (state: Asset = initialState.baseLanguage, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_BASE_LANGUAGE:\n      return action.payload.baseLanguage;\n    default:\n      return state;\n  }\n};\n\nexport const contactFields = (\n  state: ContactFields = initialState.contactFields,\n  action: ActionTypes\n) => {\n  switch (action.type) {\n    case Constants.UPDATE_CONTACT_FIELDS:\n      return action.payload.contactFields;\n    default:\n      return state;\n  }\n};\n\n// Root reducer\nexport default combineReducers({\n  definition,\n  nodes,\n  issues,\n  metadata,\n  assetStore,\n  baseLanguage,\n  contactFields\n});\n","export enum FlowTypes {\n  MESSAGE = 'message',\n  VOICE = 'voice',\n  SURVEY = 'message_offline',\n  NONE = '-'\n}\n\nexport enum Types {\n  execute_actions = 'execute_actions',\n  add_contact_urn = 'add_contact_urn',\n  add_contact_groups = 'add_contact_groups',\n  add_input_labels = 'add_input_labels',\n  remove_contact_groups = 'remove_contact_groups',\n  set_contact_channel = 'set_contact_channel',\n  set_contact_field = 'set_contact_field',\n  set_contact_name = 'set_contact_name',\n  set_contact_language = 'set_contact_language',\n  set_run_result = 'set_run_result',\n  call_classifier = 'call_classifier',\n  call_resthook = 'call_resthook',\n  call_webhook = 'call_webhook',\n  open_ticket = 'open_ticket',\n  send_msg = 'send_msg',\n  send_email = 'send_email',\n  send_broadcast = 'send_broadcast',\n  enter_flow = 'enter_flow',\n  start_session = 'start_session',\n  transfer_airtime = 'transfer_airtime',\n  split_by_airtime = 'split_by_airtime',\n  split_by_expression = 'split_by_expression',\n  split_by_contact_field = 'split_by_contact_field',\n  split_by_run_result = 'split_by_run_result',\n  split_by_run_result_delimited = 'split_by_run_result_delimited',\n  split_by_groups = 'split_by_groups',\n  split_by_intent = 'split_by_intent',\n  split_by_random = 'split_by_random',\n  split_by_resthook = 'split_by_resthook',\n  split_by_ticket = 'split_by_ticket',\n  split_by_scheme = 'split_by_scheme',\n  split_by_subflow = 'split_by_subflow',\n  split_by_webhook = 'split_by_webhook',\n  wait_for_response = 'wait_for_response',\n  wait_for_menu = 'wait_for_menu',\n  wait_for_digits = 'wait_for_digits',\n  wait_for_audio = 'wait_for_audio',\n  wait_for_video = 'wait_for_video',\n  wait_for_location = 'wait_for_location',\n  wait_for_image = 'wait_for_image',\n  missing = 'missing',\n  say_msg = 'say_msg',\n  play_audio = 'play_audio'\n}\n\nexport enum Operators {\n  has_any_word = 'has_any_word',\n  has_all_words = 'has_all_words',\n  has_phrase = 'has_phrase',\n  has_only_phrase = 'has_only_phrase',\n  has_beginning = 'has_beginning',\n  has_text = 'has_text',\n  has_date = 'has_date',\n  has_date_lt = 'has_date_lt',\n  has_date_eq = 'has_date_eq',\n  has_date_gt = 'has_date_gt',\n  has_time = 'has_time',\n  has_number = 'has_number',\n  has_number_between = 'has_number_between',\n  has_number_lt = 'has_number_lt',\n  has_number_lte = 'has_number_lte',\n  has_number_eq = 'has_number_eq',\n  has_number_gte = 'has_number_gte',\n  has_number_gt = 'has_number_gt',\n  has_run_status = 'has_run_status',\n  has_only_text = 'has_only_text',\n  has_group = 'has_group',\n  has_phone = 'has_phone',\n  has_email = 'has_email',\n  has_value = 'has_value',\n  has_district = 'has_district',\n  has_state = 'has_state',\n  has_ward = 'has_ward',\n  has_pattern = 'has_pattern',\n  has_error = 'has_error',\n  has_intent = 'has_intent',\n  has_top_intent = 'has_top_intent',\n  has_category = 'has_category',\n  has_media = 'has_media'\n}\n\nexport enum FeatureFilter {\n  HAS_RESTHOOK = 'resthook',\n  HAS_WHATSAPP = 'whatsapp',\n  HAS_AIRTIME = 'airtime',\n  HAS_CLASSIFIER = 'classifier',\n  HAS_TICKETER = 'ticketer',\n  HAS_FACEBOOK = 'facebook'\n}\n\nexport interface FlowTypeVisibility {\n  visibility?: FlowTypes[];\n  filter?: FeatureFilter;\n}\n\nexport enum PopTabType {\n  SIMULATOR = 'Simulator',\n  REVISION_HISTORY = 'Revision History',\n  ISSUES_TAB = 'Issues Tab',\n  TRANSLATOR_TAB = 'Translator Tab'\n}\n\nexport interface Type extends FlowTypeVisibility {\n  type: Types;\n  name: string;\n  description: string;\n  component?: any;\n  form?: React.ComponentClass<any>;\n  aliases?: string[];\n  localization?: React.ComponentClass<any>;\n  localizeableKeys?: string[];\n\n  // opportunity to massage our object for display\n  massageForDisplay?: (obj: any) => void;\n}\n\nexport interface Operator extends FlowTypeVisibility {\n  type: Operators;\n  verboseName: string;\n  operands: number;\n  categoryName?: string;\n}\n\nexport interface OperatorMap {\n  [propName: string]: Operator;\n}\n\nexport const HIDDEN = [FlowTypes.NONE];\nexport const VOICE = [FlowTypes.VOICE];\nexport const SURVEY = [FlowTypes.SURVEY];\nexport const TEXT_TYPES = [FlowTypes.MESSAGE, FlowTypes.SURVEY];\nexport const ONLINE = [FlowTypes.MESSAGE, FlowTypes.VOICE];\n","import { AssetType } from 'store/flowContext';\n\nexport const currencies = {\n  ARS: {\n    id: 'ARS',\n    name: 'Argentine Peso',\n    type: AssetType.Currency\n  },\n  AUD: {\n    id: 'AUD',\n    name: 'Australian Dollar',\n    type: AssetType.Currency\n  },\n  BIF: {\n    id: 'BIF',\n    name: 'Burundi Franc',\n    type: AssetType.Currency\n  },\n  BRL: {\n    id: 'BRL',\n    name: 'Brazilian Real',\n    type: AssetType.Currency\n  },\n\n  CAD: {\n    id: 'CAD',\n    name: 'Canadian Dollar',\n    type: AssetType.Currency\n  },\n  CDF: {\n    id: 'CDF',\n    name: 'Congolese Franc',\n    type: AssetType.Currency\n  },\n  CLP: {\n    id: 'CLP',\n    name: 'Chilean Peso',\n    type: AssetType.Currency\n  },\n  COP: {\n    id: 'COP',\n    name: 'Colombian Peso',\n    type: AssetType.Currency\n  },\n  DJF: {\n    id: 'DJF',\n    name: 'Djibouti Franc',\n    type: AssetType.Currency\n  },\n  DOP: {\n    id: 'DOP',\n    name: 'Dominican Peso',\n    type: AssetType.Currency\n  },\n  DZD: {\n    id: 'DZD',\n    name: 'Algerian Dinar',\n    type: AssetType.Currency\n  },\n  EUR: {\n    id: 'EUR',\n    name: 'Euro',\n    type: AssetType.Currency\n  },\n  GBP: {\n    id: 'GBP',\n    name: 'Pound Sterling',\n    type: AssetType.Currency\n  },\n  GHS: {\n    id: 'GHS',\n    name: 'Ghana Cedi',\n    type: AssetType.Currency\n  },\n  GNF: {\n    id: 'GNF',\n    name: 'Guinean Franc',\n    type: AssetType.Currency\n  },\n  KES: {\n    id: 'KES',\n    name: 'Kenyan Shilling',\n    type: AssetType.Currency\n  },\n  LBP: {\n    id: 'LBP',\n    name: 'Lebanese Pound',\n    type: AssetType.Currency\n  },\n  LKR: {\n    id: 'LKR',\n    name: 'Sri Lanka Rupee',\n    type: AssetType.Currency\n  },\n  LRD: {\n    id: 'LRD',\n    name: 'Liberian Dollar',\n    type: AssetType.Currency\n  },\n  MWK: {\n    id: 'MWK',\n    name: 'Malawi Kwacha',\n    type: AssetType.Currency\n  },\n  MXN: {\n    id: 'MXN',\n    name: 'Mexican Peso',\n    type: AssetType.Currency\n  },\n  NAD: {\n    id: 'NAD',\n    name: 'Namibia Dollar',\n    type: AssetType.Currency\n  },\n  NPR: {\n    id: 'NPR',\n    name: 'Nepalese Rupee',\n    type: AssetType.Currency\n  },\n  NZD: {\n    id: 'NZD',\n    name: 'New Zealand Dollar',\n    type: AssetType.Currency\n  },\n  PHP: {\n    id: 'PHP',\n    name: 'Philippine Piso',\n    type: AssetType.Currency\n  },\n  PKR: {\n    id: 'PKR',\n    name: 'Pakistan Rupee',\n    type: AssetType.Currency\n  },\n  RUB: {\n    id: 'RUB',\n    name: 'Russian Ruble',\n    type: AssetType.Currency\n  },\n  RWF: {\n    id: 'RWF',\n    name: 'Rwanda Franc',\n    type: AssetType.Currency\n  },\n  SDG: {\n    id: 'SDG',\n    name: 'Sudanese Pound',\n    type: AssetType.Currency\n  },\n  SGD: {\n    id: 'SGD',\n    name: 'Singapore Dollar',\n    type: AssetType.Currency\n  },\n  SLL: {\n    id: 'SLL',\n    name: 'Leone',\n    type: AssetType.Currency\n  },\n  SOS: {\n    id: 'SOS',\n    name: 'Somali Shilling',\n    type: AssetType.Currency\n  },\n  SRD: {\n    id: 'SRD',\n    name: 'Surinam Dollar',\n    type: AssetType.Currency\n  },\n  SVC: {\n    id: 'SVC',\n    name: 'El Salvador Colon',\n    type: AssetType.Currency\n  },\n  TND: {\n    id: 'TND',\n    name: 'Tunisian Dinar',\n    type: AssetType.Currency\n  },\n  TRY: {\n    id: 'TRY',\n    name: 'Turkish Lira',\n    type: AssetType.Currency\n  },\n  TZS: {\n    id: 'TZS',\n    name: 'Tanzanian Shilling',\n    type: AssetType.Currency\n  },\n  UGX: {\n    id: 'UGX',\n    name: 'Uganda Shilling',\n    type: AssetType.Currency\n  },\n  USD: {\n    id: 'USD',\n    name: 'US Dollar',\n    type: AssetType.Currency\n  },\n  UYU: {\n    id: 'UYU',\n    name: 'Peso Uruguayo',\n    type: AssetType.Currency\n  },\n  UZS: {\n    id: 'UZS',\n    name: 'Uzbekistan Sum',\n    type: AssetType.Currency\n  },\n  VEF: {\n    id: 'VEF',\n    name: 'Bolívar',\n    type: AssetType.Currency\n  },\n  XCD: {\n    id: 'XCD',\n    name: 'East Caribbean Dollar',\n    type: AssetType.Currency\n  },\n  YER: {\n    id: 'YER',\n    name: 'Yemeni Rial',\n    type: AssetType.Currency\n  },\n  ZAR: {\n    id: 'ZAR',\n    name: 'Rand',\n    type: AssetType.Currency\n  },\n  ZMW: {\n    id: 'ZMW',\n    name: 'Zambian Kwacha',\n    type: AssetType.Currency\n  },\n  ZWL: {\n    id: 'ZWL',\n    name: 'Zimbabwe Dollar',\n    type: AssetType.Currency\n  }\n};\n","/* istanbul ignore file */\nimport axios, { AxiosResponse } from 'axios';\nimport { SaveResult } from 'components/revisions/RevisionExplorer';\nimport { Endpoints, Exit, FlowDefinition, SPEC_VERSION, FlowDetails } from 'flowTypes';\nimport { currencies } from 'store/currencies';\nimport { Activity, RecentMessage } from 'store/editor';\nimport {\n  Asset,\n  AssetMap,\n  Assets,\n  AssetStore,\n  AssetType,\n  CompletionOption\n} from 'store/flowContext';\nimport { assetListToMap } from 'store/helpers';\nimport { CompletionSchema } from 'utils/completion';\nimport { FlowTypes } from 'config/interfaces';\n\n// Configure axios to always send JSON requests\naxios.defaults.headers.post['Content-Type'] = 'application/javascript';\naxios.defaults.responseType = 'json';\naxios.defaults.timeout = 30000;\n\n/**\n * Gets the path activity and the count of active particpants at each node\n * @param {string} flowUUID - The UUID of the current flow\n * @param {string} activityEndpoint - The URL path to the endpoint providing this data\n * @returns {Object} - An object representation of the flow's activty\n */\nexport const getActivity = (\n  activityEndpoint: string,\n  flowUUID: string,\n  headers = {}\n): Promise<Activity> =>\n  new Promise<Activity>((resolve, reject) =>\n    axios\n      .get(`${activityEndpoint}?flow=${flowUUID}`, { headers })\n      .then((response: AxiosResponse) => resolve(response.data as Activity))\n      .catch((error: any) => reject(error))\n  );\n\nexport interface Cancel {\n  reject?: () => void;\n}\n\nexport const saveRevision = (endpoint: string, definition: FlowDefinition): Promise<SaveResult> => {\n  const csrf = getCookie('csrftoken');\n  const headers = csrf ? { 'X-CSRFToken': csrf } : {};\n\n  // update the spec version in our def to the current editor version\n  let patch = '0';\n\n  // honor any existing patch increments\n  let release = definition.spec_version.split('.');\n  if (release.length > 2) {\n    patch = release[2];\n  }\n\n  definition.spec_version = [SPEC_VERSION, patch].join('.');\n\n  return new Promise<SaveResult>((resolve, reject) => {\n    axios\n      .post(endpoint, definition, { headers })\n      .then((response: AxiosResponse) => {\n        if (response.status === 200) {\n          resolve(response.data as SaveResult);\n        } else {\n          reject(response);\n        }\n      })\n      .catch(error => reject(error));\n  });\n};\n\nexport const getRecentMessages = (\n  recentsEndpoint: string,\n  exit: Exit,\n  cancel: Cancel\n): Promise<RecentMessage[]> =>\n  new Promise<RecentMessage[]>((resolve, reject) => {\n    cancel.reject = reject;\n    return axios\n      .get(`${recentsEndpoint}?exits=${exit.uuid}&to=${exit.destination_uuid}`)\n      .then((response: AxiosResponse) => {\n        const recentMessages: RecentMessage[] = [];\n        for (const row of response.data) {\n          recentMessages.push({ text: row.text, sent: row.sent });\n        }\n\n        resolve(response.data as RecentMessage[]);\n      })\n      .catch(error => reject(error));\n  });\n\n/** Get the value for a named cookie */\nexport const getCookie = (name: string): string => {\n  for (const cookie of document.cookie.split(';')) {\n    const idx = cookie.indexOf('=');\n    let key = cookie.substr(0, idx);\n    let value = cookie.substr(idx + 1);\n\n    // no spaces allowed\n    key = key.trim();\n    value = value.trim();\n\n    if (key === name) {\n      return value;\n    }\n  }\n  return null;\n};\n\nexport const postNewAsset = (assets: Assets, payload: any): Promise<Asset> => {\n  // if we have a csrf in our cookie, pass it along as a header\n  const csrf = getCookie('csrftoken');\n  const headers = csrf ? { 'X-CSRFToken': csrf } : {};\n\n  return new Promise<Asset>((resolve, reject) => {\n    axios\n      .post(assets.endpoint, payload, { headers })\n      .then((response: AxiosResponse) => {\n        resolve(resultToAsset(response.data, assets.type, assets.id));\n      })\n      .catch(error => reject(error));\n  });\n};\n\nexport const fetchAsset = (assets: Assets, id: string): Promise<Asset> => {\n  return new Promise<Asset>((resolve, reject) => {\n    getAssets(assets.endpoint, assets.type, assets.id).then((results: Asset[]) => {\n      resolve(results.find((asset: Asset) => asset.id === id));\n    });\n  });\n};\n\ninterface AssetPage {\n  assets: Asset[];\n  next: string;\n}\n\nexport const getAssetPage = (url: string, type: AssetType, id: string): Promise<AssetPage> => {\n  return new Promise<AssetPage>((resolve, reject) => {\n    axios\n      .get(url)\n      .then((response: AxiosResponse) => {\n        const assets: Asset[] = response.data.results.map((result: any, idx: number) => {\n          const asset = resultToAsset(result, type, id);\n          asset.order = idx;\n          return asset;\n        });\n        resolve({ assets, next: response.data.next });\n      })\n      .catch(error => reject(error));\n  });\n};\n\nexport const getAssets = async (url: string, type: AssetType, id: string): Promise<Asset[]> => {\n  if (!url) {\n    return new Promise<Asset[]>((resolve, reject) => resolve([]));\n  }\n\n  let assets: Asset[] = [];\n  let pageUrl = url;\n  while (pageUrl) {\n    const assetPage = await getAssetPage(pageUrl, type, id);\n    assets = assets.concat(assetPage.assets);\n    pageUrl = assetPage.next;\n  }\n  return assets;\n};\n\nexport const resultToAsset = (result: any, type: AssetType, id: string): Asset => {\n  const idKey = id || 'uuid';\n\n  let assetType = type;\n\n  if (type === AssetType.Flow && result.type) {\n    switch (result.type) {\n      case 'message':\n        result.type = FlowTypes.MESSAGE;\n        break;\n      case 'voice':\n        result.type = FlowTypes.VOICE;\n        break;\n      case 'survey':\n        result.type = FlowTypes.SURVEY;\n        break;\n    }\n  }\n\n  if (type !== AssetType.Flow && result.type) {\n    assetType = result.type;\n  }\n\n  const asset: Asset = {\n    name: result.name || result.text || result.label || result[idKey],\n    id: result[idKey],\n    type: assetType\n  };\n\n  delete result[idKey];\n  delete result.name;\n  delete result.text;\n\n  asset.content = result;\n  return asset;\n};\n\nexport const isMatch = (\n  input: string,\n  asset: Asset,\n  shouldExclude: (asset: Asset) => boolean\n): boolean => {\n  if (shouldExclude && shouldExclude(asset)) {\n    return false;\n  }\n\n  const inputLower = input.toLowerCase();\n  // some assets have ids worth matching\n  if (asset.type === AssetType.Currency || asset.type === AssetType.Language) {\n    if (asset.id.toLowerCase().includes(inputLower)) {\n      return true;\n    }\n  }\n  return asset.name.toLowerCase().includes(inputLower);\n};\n\n/**\n * Searches an AssetMap for a substring\n */\nexport const searchAssetMap = (\n  query: string,\n  assets: AssetMap,\n  additionalOptions?: Asset[],\n  shouldExclude?: (asset: Asset) => boolean\n): Asset[] => {\n  const search = query.toLowerCase();\n  let matches = Object.keys(assets)\n    .map(key => assets[key])\n    .filter((asset: Asset) => isMatch(search, asset, shouldExclude));\n\n  // include our additional matches if we have any\n  matches = matches\n    .concat(additionalOptions || [])\n    .filter((asset: Asset) => isMatch(search, asset, shouldExclude));\n\n  return matches;\n};\n\nexport const createAssetStore = (endpoints: Endpoints): Promise<AssetStore> => {\n  return new Promise<AssetStore>((resolve, reject) => {\n    const assetStore: AssetStore = {\n      channels: {\n        endpoint: getURL(endpoints.channels),\n        type: AssetType.Channel,\n        items: {}\n      },\n      classifiers: {\n        endpoint: getURL(endpoints.classifiers),\n        type: AssetType.Classifier,\n        items: {}\n      },\n      languages: {\n        endpoint: getURL(endpoints.languages),\n        type: AssetType.Language,\n        items: {},\n        id: 'iso'\n      },\n      flows: {\n        endpoint: getURL(endpoints.flows),\n        type: AssetType.Flow,\n        items: {}\n      },\n      fields: {\n        endpoint: getURL(endpoints.fields),\n        type: AssetType.Field,\n        id: 'key',\n        items: {}\n      },\n      globals: {\n        endpoint: getURL(endpoints.globals),\n        type: AssetType.Global,\n        id: 'key',\n        items: {}\n      },\n      groups: {\n        endpoint: getURL(endpoints.groups),\n        type: AssetType.Group,\n        items: {}\n      },\n      revisions: {\n        endpoint: getURL(endpoints.revisions),\n        type: AssetType.Revision,\n        id: 'id',\n        items: {}\n      },\n      labels: {\n        endpoint: getURL(endpoints.labels),\n        type: AssetType.Label,\n        items: {}\n      },\n      results: {\n        type: AssetType.Result,\n        items: {}\n      },\n      recipients: {\n        endpoint: getURL(endpoints.recipients),\n        type: AssetType.Contact || AssetType.Group || AssetType.URN,\n        items: {},\n        id: 'id'\n      },\n      resthooks: {\n        endpoint: getURL(endpoints.resthooks),\n        type: AssetType.Resthook,\n        id: 'resthook',\n        items: {}\n      },\n      templates: {\n        endpoint: getURL(endpoints.templates),\n        type: AssetType.Template,\n        items: {}\n      },\n      ticketers: {\n        endpoint: getURL(endpoints.ticketers),\n        type: AssetType.Ticketer,\n        items: {}\n      },\n      currencies: {\n        type: AssetType.Currency,\n        id: 'id',\n        items: currencies,\n        prefetched: true\n      }\n    };\n\n    // prefetch some of our assets\n    const fetches: any[] = [];\n    ['languages', 'fields', 'groups', 'labels', 'globals', 'classifiers'].forEach(\n      (storeId: string) => {\n        const store = assetStore[storeId];\n        fetches.push(\n          getAssets(store.endpoint, store.type, store.id || 'uuid').then((assets: Asset[]) => {\n            store.items = assetListToMap(assets);\n            store.prefetched = true;\n          })\n        );\n      }\n    );\n\n    // wait for our prefetches to finish\n    Promise.all(fetches).then((results: any) => {\n      resolve(assetStore);\n    });\n  });\n};\n\nexport const getFunctions = (endpoint: string): Promise<CompletionOption[]> => {\n  return new Promise<CompletionOption[]>((resolve, reject) => {\n    axios\n      .get(endpoint)\n      .then(response => {\n        resolve(response.data);\n      })\n      .catch(error => reject(error));\n  });\n};\n\nexport const getCompletionSchema = (endpoint: string): Promise<CompletionSchema> => {\n  return new Promise<CompletionSchema>((resolve, reject) => {\n    axios.get(endpoint).then(response => {\n      resolve(response.data);\n    });\n  });\n};\n\nexport const getFlowDetails = (revisions: Assets, id: string = null): Promise<FlowDetails> => {\n  return new Promise<FlowDetails>((resolve, reject) => {\n    (async () => {\n      let revisionToLoad = id;\n      if (!revisionToLoad) {\n        try {\n          const response = await axios.get(`${revisions.endpoint}?version=${SPEC_VERSION}`);\n          if (response.data.results.length > 0) {\n            revisionToLoad = response.data.results[0].id;\n          }\n        } catch (error) {\n          reject(new Error(\"Couldn't reach revisions endpoint\"));\n        }\n      }\n\n      if (revisionToLoad) {\n        const url = `${revisions.endpoint}${revisionToLoad}?version=${SPEC_VERSION}`;\n        axios\n          .get(url)\n          .then((response: AxiosResponse) => {\n            const details = response.data as FlowDetails;\n            return resolve(details);\n          })\n          .catch(error => reject(error));\n      } else {\n        reject(new Error('No revision found for flow'));\n      }\n    })();\n  });\n};\n\nexport const getBaseURL = (): string => {\n  const location = window.location;\n  return location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');\n};\n\nexport const getURL = (path: string): string => {\n  let url = path;\n  if (!url.endsWith('/') && url.indexOf('?') === -1 && url.indexOf('groups') === -1) {\n    url += '/';\n  }\n\n  if (url.startsWith('http://') || url.startsWith('https://')) {\n    return url;\n  }\n\n  // Set url for netlify deployments\n  // if (process.env.NODE_ENV === \"preview\") {\n  // url = \"/.netlify/functions/\" + url;\n  // }\n\n  const result = `${getBaseURL() + url}`;\n  return result;\n};\n\nexport const showHelpArticle = (link: string) => {\n  window.open(link, 'floweditor_help');\n};\n","import { Contact, Endpoints, Group, RecipientsAction, FlowIssue, FlowIssueType } from 'flowTypes';\nimport * as React from 'react';\nimport { Asset, AssetType } from 'store/flowContext';\nimport { FormEntry, NodeEditorSettings, ValidationFailure } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\nimport { Trans } from 'react-i18next';\nimport shared from 'components/shared.module.scss';\nimport { showHelpArticle } from 'external';\nimport { IssueProps } from '../props';\n\nexport const renderIssues = (issueProps: IssueProps): JSX.Element => {\n  const { issues, helpArticles } = issueProps;\n  if (!issues || issues.length === 0) {\n    return null;\n  }\n\n  return (\n    <div style={{ padding: '10px 0px' }}>\n      {issues.map((issue: FlowIssue, num: Number) => {\n        const key = issue.node_uuid + issue.action_uuid + num;\n        return (\n          <div\n            style={{ margin: '6px 0px', display: 'flex', fontSize: '14px', color: 'tomato' }}\n            key={key}\n          >\n            <div\n              style={{ marginRight: '8px', marginTop: '-2px', fontSize: '18px' }}\n              className={`fe-warning`}\n            />\n            <div>{renderIssue(issue, helpArticles)}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const renderIssue = (\n  issue: FlowIssue,\n  helpArticles: { [key: string]: string } = {}\n): JSX.Element => {\n  // worst case, defer to the default description\n  let message: JSX.Element = <>{issue.description}</>;\n\n  if (issue.type === FlowIssueType.MISSING_DEPENDENCY) {\n    message = (\n      <Trans\n        i18nKey=\"issues.missing_dependency\"\n        values={{\n          name: issue.dependency.name || issue.dependency.key,\n          type: issue.dependency.type\n        }}\n      >\n        Cannot find a [[type]] for <span className=\"emphasize\">[[name]]</span>\n      </Trans>\n    );\n  }\n\n  if (issue.type === FlowIssueType.INVALID_REGEX) {\n    message = (\n      <Trans i18nKey=\"issues.legacy_extra\" values={{ regex: issue.regex }}>\n        Invalid regular expression found: [[regex]]\n      </Trans>\n    );\n  }\n\n  if (issue.type === FlowIssueType.LEGACY_EXTRA) {\n    message = (\n      <Trans i18nKey=\"issues.legacy_extra\">Expressions should not reference @legacy_extra</Trans>\n    );\n  }\n\n  const article = helpArticles[issue.type];\n  if (article) {\n    return (\n      <div\n        className={shared.issue_help}\n        onClick={() => {\n          showHelpArticle(article);\n        }}\n      >\n        {message}\n      </div>\n    );\n  }\n\n  return message;\n};\n\nexport const getActionUUID = (nodeSettings: NodeEditorSettings, currentType: string): string => {\n  if (nodeSettings.originalAction && nodeSettings.originalAction.type === currentType) {\n    return nodeSettings.originalAction.uuid;\n  }\n  return createUUID();\n};\n\nexport const getRecipients = (action: RecipientsAction): Asset[] => {\n  let selected: any[] = (action.groups || []).map((group: Group) => {\n    return {\n      id: group.uuid,\n      name: group.name,\n      type: AssetType.Group\n    };\n  });\n\n  selected = selected.concat(\n    (action.contacts || []).map((contact: Contact) => {\n      return { id: contact.uuid, name: contact.name, type: AssetType.Contact, missing: false };\n    })\n  );\n\n  selected = selected.concat(\n    (action.legacy_vars || []).map((expression: string) => {\n      return { id: expression, name: expression, type: AssetType.Expression, missing: false };\n    })\n  );\n\n  return selected;\n};\n\nexport const renderAssetList = (\n  assets: Asset[],\n  max: number = 10,\n  endpoints: Endpoints\n): JSX.Element[] => {\n  // show our missing ones first\n  return assets.reduce((elements, asset, idx) => {\n    if (idx <= max - 2 || assets.length === max) {\n      elements.push(renderAsset(asset, endpoints));\n    } else if (idx === max - 1) {\n      elements.push(<div key=\"ellipses\">+{assets.length - max + 1} more</div>);\n    }\n    return elements;\n  }, []);\n};\n\nexport const renderAsset = (asset: Asset, endpoints: Endpoints) => {\n  let assetBody = null;\n\n  switch (asset.type) {\n    case AssetType.Classifier:\n      assetBody = (\n        <Trans i18nKey=\"assets.classifier\" values={{ name: asset.name }}>\n          Call [[name]] classifier\n        </Trans>\n      );\n      break;\n    case AssetType.Group:\n      assetBody = (\n        <>\n          <span className={`${shared.node_group} fe-group`} />\n          {asset.name}\n        </>\n      );\n      break;\n    case AssetType.Label:\n      assetBody = (\n        <>\n          <span className={`${shared.node_label} fe-label`} />\n          {asset.name}\n        </>\n      );\n      break;\n    case AssetType.Flow:\n      assetBody = (\n        <>\n          <span className={`${shared.node_label} fe-split`} />\n          <a\n            onMouseDown={(e: any) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n            onMouseUp={(e: any) => {\n              e.preventDefault();\n              e.stopPropagation();\n            }}\n            href={`${endpoints.editor}/${asset.id}`}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            {asset.name}\n          </a>\n        </>\n      );\n      break;\n    case AssetType.Ticketer:\n      assetBody = (\n        <Trans i18nKey=\"assets.ticketer\" values={{ name: asset.name }}>\n          Using [[name]] service\n        </Trans>\n      );\n      break;\n  }\n\n  if (!assetBody) {\n    assetBody = asset.name;\n  }\n\n  return (\n    <div className={`${shared.node_asset}`} key={asset.id}>\n      {assetBody}\n    </div>\n  );\n};\n\nexport const getAllErrors = (entry: FormEntry): ValidationFailure[] => {\n  return entry ? entry.validationFailures || [] : [];\n};\n\nexport const hasErrors = (entry: FormEntry): boolean => {\n  return getAllErrors(entry).length > 0;\n};\n\nexport const getExpressions = (assets: Asset[]): any[] => {\n  return assets\n    .filter((asset: Asset) => asset.type === AssetType.Expression)\n    .map((asset: Asset) => {\n      return asset.id;\n    });\n};\n\nexport const getRecipientsByAsset = (assets: Asset[], type: AssetType): any[] => {\n  return assets\n    .filter((asset: Asset) => asset.type === type)\n    .map((asset: Asset) => {\n      return { uuid: asset.id, name: asset.name };\n    });\n};\n","import { Type } from 'config/interfaces';\nimport { AnyAction, ContactProperties, FlowIssue } from 'flowTypes';\nimport { Asset, AssetStore, AssetType, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { DispatchWithState, GetState } from 'store/thunks';\nimport { titleCase } from 'utils';\nimport { CompletionSchema } from 'utils/completion';\n\nexport interface IssueProps {\n  helpArticles: { [key: string]: string };\n  issues: FlowIssue[];\n}\n\nexport interface ActionFormProps extends IssueProps {\n  // action details\n  nodeSettings: NodeEditorSettings;\n  typeConfig: Type;\n  assetStore: AssetStore;\n  completionSchema: CompletionSchema;\n\n  addAsset(assetType: string, asset: Asset): void;\n\n  // update handlers\n  updateAction(\n    action: AnyAction,\n    onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\n  ): void;\n\n  // modal notifiers\n  onTypeChange(config: Type): void;\n  onClose(canceled: boolean): void;\n}\n\nexport interface RouterFormProps extends IssueProps {\n  nodeSettings: NodeEditorSettings;\n  typeConfig: Type;\n\n  assetStore: AssetStore;\n\n  // update handlers\n  updateRouter(renderNode: RenderNode): void;\n\n  // modal notifiers\n  onTypeChange(config: Type): void;\n  onClose(canceled: boolean): void;\n}\n\nexport interface LocalizationFormProps extends IssueProps {\n  language: Asset;\n  nodeSettings: NodeEditorSettings;\n  updateLocalizations(languageCode: string, localizations: any[]): void;\n  onClose(canceled: boolean): void;\n  helpArticles: { [key: string]: string };\n}\n\nexport const NAME_PROPERTY: Asset = {\n  name: titleCase(ContactProperties.Name),\n  id: ContactProperties.Name,\n  type: AssetType.ContactProperty\n};\n\nexport const CHANNEL_PROPERTY: Asset = {\n  name: titleCase(ContactProperties.Channel),\n  id: ContactProperties.Channel,\n  type: AssetType.ContactProperty\n};\n\nexport const LANGUAGE_PROPERTY: Asset = {\n  name: titleCase(ContactProperties.Language),\n  id: ContactProperties.Language,\n  type: AssetType.ContactProperty\n};\n","import { FlowEditorConfig } from 'flowTypes';\nimport * as React from 'react';\n\nexport const fakePropType: any = (): any => null;\nfakePropType.isRequired = (): any => null;\n\ninterface ConfigProviderProps {\n  config: FlowEditorConfig;\n  children: any;\n}\n\nexport interface ConfigProviderContext {\n  config: FlowEditorConfig;\n}\n\n// ----------------------------------------------------------------------------------------------\n\nexport const SINGLE_CHILD_ERROR = 'ConfigProvider expects only one child component.';\nexport const VALID_CHILD_ERROR =\n  'ConfigProvider expects a valid React element: https://reactjs.org/docs/react-api.html#isvalidelement';\n\nexport default class ConfigProvider extends React.Component<ConfigProviderProps> {\n  public static childContextTypes = {\n    config: fakePropType,\n    assetService: fakePropType\n  };\n\n  constructor(props: ConfigProviderProps) {\n    super(props);\n\n    if (React.Children.count(props.children) > 1) {\n      throw new Error(SINGLE_CHILD_ERROR);\n    } else if (!React.isValidElement(props.children)) {\n      throw new Error(VALID_CHILD_ERROR);\n    }\n  }\n\n  public getChildContext(): ConfigProviderContext {\n    return {\n      config: this.props.config\n    };\n  }\n\n  public render(): JSX.Element {\n    return React.Children.only(this.props.children);\n  }\n}\n","import * as React from 'react';\nimport { renderAssetList } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { AddLabels } from 'flowTypes';\nimport { AssetType } from 'store/flowContext';\n\nexport const MAX_TO_SHOW = 5;\n\nconst AddLabelsComp: React.SFC<AddLabels> = ({ labels }, context: any): JSX.Element => {\n  return (\n    <>\n      {renderAssetList(\n        labels.map(label => {\n          return {\n            id: label.uuid,\n            name: label.name,\n            type: AssetType.Label\n          };\n        }),\n        MAX_TO_SHOW,\n        context.config.endpoints\n      )}\n    </>\n  );\n};\n\nAddLabelsComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default AddLabelsComp;\n","import { Template } from 'flowTypes';\nimport { Asset } from 'store/flowContext';\n\n/**\n * Sorts all search results by name\n */\nexport const sortByName = (a: Asset, b: Asset): number => {\n  if (a.type !== b.type) {\n    return b.type.localeCompare(a.type);\n  }\n\n  return a.name.localeCompare(b.name);\n};\n\nexport const hasPendingTranslation = (template: Template) => {\n  return !!template.translations.find(translation => translation.status === 'pending');\n};\n\nexport const hasUseableTranslation = (template: Template) => {\n  return !!template.translations.find(\n    translation => translation.status === 'pending' || translation.status === 'approved'\n  );\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport * as React from 'react';\nimport { FormEntry, ValidationFailure } from 'store/nodeEditor';\nimport { renderIf } from 'utils';\n\nimport styles from './FormElement.module.scss';\nimport { hasErrors } from 'components/flow/actions/helpers';\n\nconst cx: any = classNames.bind(styles);\n\nexport interface FormElementProps {\n  name: string;\n  helpText?: string | JSX.Element;\n  entry?: FormEntry;\n  showLabel?: boolean;\n  __className?: string;\n  border?: boolean;\n  sendMsgError?: boolean;\n  kaseError?: boolean;\n  attribError?: boolean;\n  hideError?: boolean;\n}\n\nexport default class FormElement extends React.PureComponent<FormElementProps> {\n  constructor(props: FormElementProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^get/, /^has/]\n    });\n  }\n  private getName(): JSX.Element {\n    return renderIf(\n      this.props.showLabel &&\n        this.props.name !== undefined &&\n        this.props.name !== null &&\n        this.props.name.length > 0\n    )(<div className={styles.label}>{this.props.name}</div>);\n  }\n\n  private getHelpText(): JSX.Element {\n    return renderIf(this.props.helpText != null)(\n      <div className={styles.help_text}>{this.props.helpText} </div>\n    );\n  }\n\n  private hasErrors(): boolean {\n    return hasErrors(this.props.entry);\n  }\n\n  private getValidationErrors(): ValidationFailure[] {\n    if (this.props.entry) {\n      return this.props.entry.validationFailures || [];\n    }\n    return [];\n  }\n\n  private getErrors(): JSX.Element {\n    if (this.hasErrors() && !this.props.hideError) {\n      const errors = this.getValidationErrors().map((failure, idx) => {\n        const className = cx({\n          [styles.error]: true,\n          [styles.send_msg_error]: this.props.sendMsgError === true\n        });\n        return (\n          <div key={idx} className={className}>\n            <div className={styles.arrow_up} />\n            <div>{failure.message}</div>\n          </div>\n        );\n      });\n      return <div className={styles.error_list}>{errors}</div>;\n    }\n    return null;\n  }\n\n  public render(): JSX.Element {\n    const name: JSX.Element = this.getName();\n    const helpText: JSX.Element = this.getHelpText();\n    const errorsToDisplay: JSX.Element = this.getErrors();\n\n    const className = cx({\n      [styles.ele]: true,\n      [styles.border]: this.props.border,\n      [styles.invalid]: this.hasErrors(),\n      [this.props.__className]: this.props.__className !== undefined\n    });\n\n    return (\n      <div className={className}>\n        {name}\n        {this.props.children}\n        {helpText}\n        {errorsToDisplay}\n      </div>\n    );\n  }\n}\n","import { StylesConfig } from 'react-select';\n\nexport const large = {\n  placeholder: (styles: StylesConfig, state: any) => {\n    return { ...styles, color: '#ddd', marginLeft: '3px' };\n  },\n  singleValue: (styles: StylesConfig, state: any) => {\n    return { ...styles, marginLeft: '3px' };\n  },\n  multiValue: (styles: StylesConfig, state: any) => {\n    return { ...styles, marginLeft: '0px' };\n  },\n  input: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      marginLeft: '0px',\n      caretColor: '#999',\n      marginBottom: '0px',\n      boxShadow: 'none',\n      border: 'none'\n    };\n  },\n  control: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      borderColor: '#ccc',\n      boxShadow: 'none',\n      transition: 'all 0.3s ease-in-out',\n      '&:hover': {\n        borderColor: '#ccc'\n      }\n    };\n  }\n};\n\nexport const messageStyle = {\n  control: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      borderColor: '#ccc',\n      boxShadow: 'none',\n      borderBottom: 'none',\n      borderBottomRightRadius: '0px',\n      borderBottomLeftRadius: '0px',\n      '&:hover': {\n        borderColor: '#ccc'\n      }\n    };\n  }\n};\n\nexport const getErroredSelect = (baseControl: any): any => {\n  return {\n    control: (styles: StylesConfig) => ({\n      ...styles,\n      ...baseControl,\n      borderColor: 'tomato',\n      boxShadow: '0 0 0 3px rgba(255,196,186,0.5) !important;',\n      '&:hover': {\n        borderColor: 'tomato'\n      }\n    })\n  };\n};\n\nexport const small = {\n  control: (styles: StylesConfig) => ({\n    ...styles,\n    borderColor: '#ccc',\n    boxShadow: 'none',\n    '&:hover': {\n      borderColor: '#ccc'\n    },\n    maxHeight: '28px',\n    minHeight: '28px',\n    fontSize: '12px',\n    lineHeight: '12px',\n    marginBottom: '-10px'\n  }),\n  menuList: (styles: StylesConfig) => ({\n    ...styles,\n    maxHeight: 200\n  }),\n  option: (styles: StylesConfig) => ({\n    ...styles,\n    fontSize: 12\n  }),\n  singleValue: (styles: StylesConfig) => ({\n    ...styles,\n    maxHeight: 28,\n    lineHeight: '13px'\n  }),\n  indicatorsContainer: (styles: StylesConfig) => ({\n    ...styles,\n    height: 28,\n    maxHeight: 28\n  }),\n  valueContainer: (styles: StylesConfig) => ({\n    ...styles,\n    height: 28,\n    maxHeight: 28\n  }),\n  input: (styles: StylesConfig) => ({\n    ...styles,\n    marginLeft: '-2px',\n    marginTop: '0px',\n    caretColor: '#999',\n    boxShadow: 'none',\n    border: 'none',\n    maxHeight: '20px',\n    minHeight: '20px',\n    lineHeight: '12px'\n  })\n};\n\nexport const tagging = {\n  control: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      borderColor: '#ccc',\n      boxShadow: 'none',\n      transition: 'all 0.3s ease-in-out',\n      '&:hover': {\n        borderColor: '#ccc'\n      }\n    };\n  },\n  input: (styles: StylesConfig, state: any) => {\n    return {\n      ...styles,\n      marginLeft: '0px',\n      caretColor: '#999',\n      marginBottom: '0px',\n      boxShadow: 'none',\n      border: 'none'\n    };\n  },\n  multiValue: (styles: StylesConfig) => {\n    return {\n      ...styles,\n      maxHeight: 24,\n      minHeight: 24,\n      lineHeight: '17px',\n      backgroundColor: 'hsl(0, 0%, 94%)',\n      border: '1px solid hsl(0, 0%, 85%)'\n    };\n  }\n};\n","import { AssetStore, CompletionOption } from 'store/flowContext';\n\nexport interface CompletionAssets {\n  assetStore: AssetStore;\n  schema: CompletionSchema;\n}\n\nexport interface CompletionProperty {\n  key: string;\n  help: string;\n  type: string;\n}\n\nexport interface CompletionType {\n  name: string;\n\n  key_source?: string;\n  property_template?: CompletionProperty;\n  properties?: CompletionProperty[];\n}\n\nexport interface CompletionSchema {\n  types: CompletionType[];\n  root: CompletionProperty[];\n}\n\nexport const getFunctions = (functions: CompletionOption[], query: string): CompletionOption[] => {\n  return functions.filter((option: CompletionOption) => {\n    if (option.signature) {\n      return option.signature.indexOf((query || '').toLowerCase()) === 0;\n    }\n    return false;\n  });\n};\n\n/**\n * Takes a dot query and returns the completions options at the current level\n * @param dotQuery query such as \"results.field_name.ca\"\n */\nexport const getCompletions = (\n  completion: CompletionAssets,\n  dotQuery: string\n): CompletionOption[] => {\n  const parts = (dotQuery || '').split('.');\n  let currentProps: CompletionProperty[] = completion.schema.root;\n\n  let prefix = '';\n  let part = '';\n  while (parts.length > 0) {\n    part = parts.shift();\n    if (part) {\n      // eslint-disable-next-line\n      const nextProp = currentProps.find((prop: CompletionProperty) => prop.key === part);\n      if (nextProp) {\n        // eslint-disable-next-line\n        const nextType = completion.schema.types.find(\n          (type: CompletionType) => type.name === nextProp.type\n        );\n        if (nextType && nextType.properties) {\n          currentProps = nextType.properties;\n          prefix += part + '.';\n        } else if (nextType && nextType.property_template) {\n          prefix += part + '.';\n          const template = nextType.property_template;\n\n          const assetStore = completion.assetStore[nextType.name];\n          currentProps = assetStore\n            ? Object.keys(assetStore.items).map((key: string) => ({\n                key: template.key.replace('{key}', key),\n                help: template.help.replace('{key}', key),\n                type: template.type\n              }))\n            : [];\n        } else {\n          // if not type found, hide completion\n          currentProps = [];\n          break;\n        }\n      } else {\n        // eslint-disable-next-line\n        currentProps = currentProps.filter((prop: CompletionProperty) =>\n          prop.key.startsWith(part.toLowerCase())\n        );\n        break;\n      }\n    }\n  }\n\n  return currentProps.map((prop: CompletionProperty) => {\n    const name =\n      prop.key === '__default__' ? prefix.substr(0, prefix.length - 1) : prefix + prop.key;\n    return { name, summary: prop.help };\n  });\n};\n\nexport const getCompletionName = (option: CompletionOption): string => {\n  return option.name || option.signature.substr(0, option.signature.indexOf('('));\n};\n\nexport const getCompletionSignature = (option: CompletionOption): string => {\n  return option.signature.substr(option.signature.indexOf('('));\n};\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\n// TODO: consider chunking out translation files\n// and using something like XHR backend to lazily\n// load only the required language.\n// See https://www.i18next.com/how-to/add-or-load-translations\n\nimport defaults from './defaults.json';\nimport en from './en/resource.json';\nimport es from './es/resource.json';\n\nconst resources = {\n  defaults: { translation: defaults },\n  en: { translation: en },\n  es: { translation: es }\n};\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources,\n\n    // do not load a fallback\n    fallbackLng: ['en', 'defaults'],\n\n    interpolation: {\n      prefix: '[[',\n      suffix: ']]'\n    }\n  });\n\nexport default i18n;\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport { bool, snakify } from 'utils';\nimport styles from './TembaSelect.module.scss';\n\nexport enum TembaSelectStyle {\n  small = 'small',\n  normal = 'normal'\n}\n\nexport interface TembaSelectProps {\n  name: string;\n  options: any[];\n  value: any;\n  onChange: (option: any) => void;\n\n  error?: boolean;\n  style?: TembaSelectStyle;\n\n  placeholder?: string;\n  searchable?: boolean;\n  multi?: boolean;\n\n  nameKey?: string;\n  valueKey?: string;\n}\n\ninterface TembaSelectState {}\n\nexport default class TembaSelect extends React.Component<TembaSelectProps, TembaSelectState> {\n  private selectbox: HTMLElement;\n\n  constructor(props: TembaSelectProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public getName(option: any): string {\n    if (this.props.nameKey in option) {\n      return option[this.props.nameKey];\n    }\n\n    if ('label' in option) {\n      return option['label'];\n    }\n\n    return option['name'];\n  }\n\n  public getValue(option: any): string {\n    return option[this.props.valueKey || 'value'];\n  }\n\n  public isMatch(a: any, b: any): boolean {\n    if (a && b) {\n      if (Array.isArray(a)) {\n        return a.find((option: any) => this.getValue(option) === this.getValue(b));\n      } else {\n        return this.getValue(a) === this.getValue(b);\n      }\n    }\n    return false;\n  }\n\n  public componentDidMount(): void {\n    this.selectbox.addEventListener('change', (event: any) => {\n      const values = event.target.values || [event.target.value];\n      const resolved = values.map((op: any) => {\n        return this.props.options.find((option: any) => this.getValue(option) === op.value);\n      });\n\n      resolved.forEach((option: any) => {\n        if (!option) {\n          throw new Error('No option found for selection');\n        }\n      });\n\n      if (this.props.multi) {\n        this.props.onChange(resolved);\n      } else {\n        this.props.onChange(resolved[0]);\n      }\n    });\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div\n        className={\n          styles[this.props.style || TembaSelectStyle.normal] +\n          ' ' +\n          (this.props.error ? styles.error : '')\n        }\n      >\n        <temba-select\n          data-testid={`temba_select_${snakify(this.props.name)}`}\n          ref={(ele: any) => {\n            this.selectbox = ele;\n          }}\n          placeholder={this.props.placeholder}\n          searchable={bool(this.props.searchable)}\n          multi={bool(this.props.multi)}\n        >\n          {this.props.options.map((option: any) => {\n            const selected = this.isMatch(this.props.value, option) ? { selected: true } : {};\n\n            const optionValue = this.getValue(option);\n            const optionName = this.getName(option);\n\n            return (\n              <temba-option\n                key={this.props.name + '_' + optionValue}\n                name={optionName}\n                value={optionValue}\n                {...selected}\n              ></temba-option>\n            );\n          })}\n        </temba-select>\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport { sortByName } from 'components/form/assetselector/helpers';\nimport { getIconForAssetType } from 'components/form/assetselector/widgets';\nimport FormElement, { FormElementProps } from 'components/form/FormElement';\nimport { getAssets, isMatch, postNewAsset, searchAssetMap } from 'external';\nimport * as React from 'react';\nimport { Asset, Assets, AssetType, CompletionOption, REMOVE_VALUE_ASSET } from 'store/flowContext';\nimport { AssetEntry } from 'store/nodeEditor';\nimport { uniqueBy } from 'utils';\nimport { getErroredSelect as getErroredControl, large, messageStyle } from 'utils/reactselect';\n\nimport styles from './AssetSelector.module.scss';\nimport { getCompletions, CompletionAssets } from 'utils/completion';\nimport i18n from 'config/i18n';\nimport { OptionProps, OptionsType, ValueType, StylesConfig, components } from 'react-select';\nimport Creatable from 'react-select/creatable';\nimport AsyncSelect from 'react-select/async';\n\ntype CallbackFunction = (options: OptionsType<Asset>) => void;\n\nconst AssetOption = (props: OptionProps<Asset>) => {\n  const asset = (props as any).data as Asset;\n\n  const prefix = '';\n  let suffix = '';\n  if (asset.type === AssetType.Currency) {\n    suffix = ` (${asset.id})`;\n  }\n\n  // TODO: add styling for different asset types\n  return !props.isDisabled && components ? (\n    <div ref={props.innerRef} {...props.innerProps}>\n      <components.Option {...props}>\n        {prefix}\n        {getIconForAssetType(asset)} {asset.name}\n        {suffix}\n      </components.Option>\n    </div>\n  ) : null;\n};\n\nexport interface AssetSelectorProps extends FormElementProps {\n  assets: Assets;\n  onChange: (selected: Asset[]) => void;\n\n  // a function to exclude assets when matching\n  shouldExclude?: (asset: Asset) => boolean;\n\n  // more options to consider when searching\n  additionalOptions?: Asset[];\n\n  // add custom styling\n  styles?: StylesConfig;\n\n  placeholder?: string;\n  searchable?: boolean;\n\n  // do we give the clearing option (trash)\n  valueClearable?: boolean;\n\n  // do we present an x to clear the form\n  formClearable?: boolean;\n\n  onFilter?: (asset: Asset) => boolean;\n\n  // creation options\n  createPrefix?: string;\n  onAssetCreated?: (asset: Asset) => void;\n  createAssetFromInput?: (input: string) => Asset;\n\n  // supports multiple selection\n  multi?: boolean;\n\n  // overrids default message when no options to show\n  noOptionsMessage?: string;\n\n  // override default sorting function\n  sortFunction?(a: Asset, b: Asset): number;\n\n  // completion options\n  completion?: CompletionAssets;\n}\n\ninterface AssetSelectorState {\n  defaultOptions: Asset[];\n  entry: AssetEntry;\n  isLoading: boolean;\n  menuOpen: boolean;\n  message?: string;\n}\n\nexport default class AssetSelector extends React.Component<AssetSelectorProps, AssetSelectorState> {\n  private lastCreation: number = 0;\n\n  constructor(props: AssetSelectorProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^is/, /^handle/, /^get/]\n    });\n\n    let defaultOptions: Asset[] = [];\n\n    // or it should be a list of local assets from an empty search\n    if (!props.assets.endpoint) {\n      defaultOptions = searchAssetMap('', props.assets.items);\n    }\n\n    this.state = {\n      menuOpen: false,\n      defaultOptions,\n      entry: this.props.entry,\n      isLoading: false\n    };\n  }\n\n  public static getDerivedStateFromProps(\n    nextProps: AssetSelectorProps,\n    prevState: AssetSelectorState\n  ): Partial<AssetSelectorState> {\n    // the default options should be true if there is an endpoint\n    let entry = nextProps.entry;\n\n    // if we don't know our entry name, look for it\n    if (prevState.defaultOptions && entry.value && !entry.value.name) {\n      const existing = prevState.defaultOptions.find((asset: Asset) => asset.id === entry.value.id);\n      if (existing) {\n        entry = { value: existing };\n      }\n    }\n\n    return { entry };\n  }\n\n  private handleChanged(selected: any): void {\n    this.setState({ message: null });\n    if (Array.isArray(selected) || !selected) {\n      this.props.onChange(selected);\n    } else if (this.props.onChange) {\n      /* istanbul ignore else */\n      this.props.onChange([selected]);\n    }\n  }\n\n  public handleLoadOptions(input: string, callback: CallbackFunction): void {\n    let options = this.props.additionalOptions || [];\n\n    if (this.props.completion && input.startsWith('@')) {\n      const completions = getCompletions(this.props.completion, input.substr(1));\n\n      callback(\n        completions.map((option: CompletionOption) => {\n          return {\n            id: '@' + option.name,\n            name: '@' + option.name,\n            type: AssetType.Expression\n          };\n        })\n      );\n      return;\n    }\n\n    let localMatches = searchAssetMap(\n      input,\n      this.props.assets.items,\n      options,\n      this.props.shouldExclude\n    );\n\n    const assets = this.props.assets;\n\n    // then query against our endpoint to add to that list if we weren't prefetched\n    if (!assets.prefetched) {\n      let url = assets.endpoint;\n      if (url && input) {\n        url += url.indexOf('?') < 0 ? '?' : '&';\n        url += 'search=' + encodeURIComponent(input);\n      }\n\n      getAssets(url, assets.type, assets.id || 'uuid').then((remoteAssets: Asset[]) => {\n        const remoteMatches = remoteAssets.filter((asset: Asset) =>\n          isMatch(input, asset, this.props.shouldExclude)\n        );\n\n        const removalAsset: Asset[] = this.props.valueClearable ? [REMOVE_VALUE_ASSET] : [];\n\n        // concat them all together and uniquify them\n        let matches = uniqueBy(localMatches.concat(remoteMatches).concat(removalAsset), 'id');\n\n        // if we don't know our initial name, look for it\n        if (this.props.entry.value && !this.props.entry.value.name) {\n          const existing = matches.find((asset: Asset) => asset.id === this.props.entry.value.id);\n          if (existing) {\n            this.props.onChange([existing]);\n          }\n        }\n\n        if (this.props.onFilter) {\n          matches = matches.filter(this.props.onFilter);\n        }\n\n        // sort our results and callback\n        callback(matches.sort(this.props.sortFunction || sortByName));\n      });\n    } else {\n      if (this.props.onFilter) {\n        localMatches = localMatches.filter(this.props.onFilter);\n      }\n      // only local matches\n      callback(localMatches.sort(this.props.sortFunction || sortByName));\n    }\n  }\n\n  public handleCheckValid(\n    input: string,\n    value: ValueType<Asset>,\n    options: OptionsType<Asset>\n  ): boolean {\n    if (!this.props.createAssetFromInput) {\n      return false;\n    }\n\n    if (input.length > 0) {\n      return (\n        searchAssetMap(\n          input,\n          this.props.assets.items,\n          this.props.additionalOptions,\n          this.props.shouldExclude\n        ).filter((asset: Asset) => asset.name.toLowerCase() === input.toLowerCase()).length === 0\n      );\n    }\n\n    return false;\n  }\n\n  public handleCreatePrompt(input: string): any {\n    return (this.props.createPrefix || `New ${this.props.name}: `) + input;\n  }\n\n  public handleGetNewOptionData(inputValue: string, label: any): Asset {\n    return { id: '_', name: label, type: null };\n  }\n\n  public handleLoadingComplete(): void {\n    this.setState({ isLoading: false });\n  }\n\n  public handleMenuOpen(): void {\n    this.setState({\n      menuOpen: true,\n      message: null\n    });\n  }\n\n  public handleMenuClose(): void {\n    this.setState({\n      menuOpen: false\n    });\n  }\n\n  public handleClearMessage(): void {\n    if (this.state.message) {\n      this.setState({ message: null });\n    }\n  }\n\n  public handleCreateOption(input: string): void {\n    // this is a hack due to react-select triggering two creates in a race\n    const now = new Date().getTime();\n    if (now - this.lastCreation < 1000) {\n      return;\n    }\n\n    this.lastCreation = now;\n    // mark us as loading\n    const asset: Asset = this.props.createAssetFromInput(input);\n\n    if (this.props.assets.endpoint) {\n      this.setState({ isLoading: true, message: null });\n      postNewAsset(this.props.assets, asset)\n        .then((result: Asset) => {\n          this.setState({ isLoading: false });\n          this.props.onAssetCreated(result);\n          // this.props.onChange([...(this.state.entry.value as any)]);\n        })\n        .catch(error => {\n          let suffix = '';\n          if (error.response && error.response.data && error.response.data.non_field_errors) {\n            suffix = ' ' + error.response.data.non_field_errors.join(', ');\n          }\n          this.setState({\n            message: `Couldn't create new ${this.props.assets.type} \"${input}\".${suffix}`,\n            isLoading: false\n          });\n        });\n    } else {\n      this.props.onChange([asset]);\n    }\n  }\n\n  private getStyle(): any {\n    if (this.state.message) {\n      return messageStyle;\n    }\n\n    let style = this.props.styles || large;\n    if (hasErrors(this.props.entry)) {\n      const erroredControl = getErroredControl(style.control({}, {}));\n      style = { ...style, ...erroredControl };\n    }\n    return style;\n  }\n\n  public getOptionValue(option: any) {\n    return option.value || option.id;\n  }\n\n  public getOptionLabel(option: any) {\n    return option.label || option.name;\n  }\n\n  public render(): JSX.Element {\n    const fallbackPlaceholder = i18n.t(\n      'asset_selector.placeholder',\n      'Select existing [[name]] or enter a new one',\n      { name: this.props.name.toLocaleLowerCase(), count: this.props.multi ? 1000 : 1 }\n    );\n\n    const commonAttributes = {\n      className: 'react-select ' + styles.selection,\n      captureMenuScroll: false,\n      value: this.state.entry.value,\n      components: { Option: AssetOption },\n      styles: this.getStyle(),\n      onChange: this.handleChanged,\n      onMenuOpen: this.handleMenuOpen,\n      onMenuClose: this.handleMenuClose,\n      onBlur: this.handleClearMessage,\n      menuShouldBlockScroll: true,\n      isMulti: this.props.multi,\n      isDisabled: this.state.isLoading,\n      isLoading: this.state.isLoading,\n      isClearable: this.props.formClearable,\n      isSearchable: this.props.searchable,\n      getOptionValue: this.getOptionValue,\n      getOptionLabel: this.getOptionLabel,\n      placeholder: this.props.placeholder || fallbackPlaceholder\n    };\n\n    if (this.props.createAssetFromInput) {\n      // Perform this in lieu of AsyncCreatable loadOptions\n      const localMatches = searchAssetMap(\n        '',\n        this.props.assets.items,\n        this.props.additionalOptions,\n        this.props.shouldExclude\n      );\n\n      return (\n        <FormElement\n          name={this.props.name}\n          entry={this.props.entry}\n          showLabel={this.props.showLabel}\n          helpText={this.props.helpText}\n          hideError={this.state.menuOpen}\n          __className={styles.ele}\n        >\n          <Creatable\n            {...commonAttributes}\n            options={localMatches.sort(this.props.sortFunction || sortByName)}\n            isValidNewOption={this.handleCheckValid}\n            formatCreateLabel={this.handleCreatePrompt}\n            getNewOptionData={this.handleGetNewOptionData}\n            onCreateOption={this.handleCreateOption}\n\n            // We are currently using Creatable since our assets are currently\n            // being preloaded on page load and because of isLoaded not being\n            // honored when set manually (this is needed to perform onCreateOption\n            // via call to asset endpoint with feedback). Once that fix is merged,\n            // we can consider using AsyncCreateable\n            //\n            // See: https://github.com/JedWatson/react-select/issues/2986\n            //      https://github.com/JedWatson/react-select/pull/3319\n            //\n          />\n          {this.state.message ? <div className={styles.message}>{this.state.message}</div> : null}\n        </FormElement>\n      );\n    } else {\n      // the default options should be true if there is an endpoint\n      let defaultOptions: any = this.props.assets.endpoint !== undefined;\n\n      // or it should be a list of local assets from an empty search\n      if (!defaultOptions) {\n        defaultOptions = this.state.defaultOptions;\n\n        if (this.props.shouldExclude) {\n          defaultOptions = searchAssetMap(\n            '',\n            this.props.assets.items,\n            this.props.additionalOptions,\n            this.props.shouldExclude\n          );\n        }\n      }\n\n      return (\n        <FormElement\n          name={this.props.name}\n          entry={this.props.entry}\n          showLabel={this.props.showLabel}\n          helpText={this.props.helpText}\n          hideError={this.state.menuOpen}\n          __className={styles.ele}\n        >\n          <AsyncSelect\n            {...commonAttributes}\n            defaultOptions={defaultOptions}\n            cacheOptions={true}\n            loadOptions={this.handleLoadOptions}\n            noOptionsMessage={(obj: { inputValue: string }) =>\n              this.props.noOptionsMessage || `No ${this.props.name} Found`\n            }\n          />\n          {this.state.message ? <div className={styles.message}>{this.state.message}</div> : null}\n        </FormElement>\n      );\n    }\n  }\n}\n","import * as React from 'react';\nimport { hasPendingTranslation } from 'components/form/assetselector/helpers';\nimport { Template } from 'flowTypes';\nimport { Asset, AssetType } from 'store/flowContext';\n\nexport const getIconForAssetType = (asset: Asset): JSX.Element => {\n  switch (asset.type) {\n    case AssetType.Group:\n      return <span className=\"fe-group\" />;\n    case AssetType.Label:\n      return <span className=\"fe-label\" />;\n    case AssetType.Flow:\n      return <span className=\"fe-split\" />;\n    case AssetType.Scheme:\n      return <span className=\"fe-connection\" />;\n    case AssetType.Template:\n      if (hasPendingTranslation(asset.content as Template)) {\n        return <span className=\"fe-hourglass\" />;\n      } else {\n        return <span className=\"fe-check\" />;\n      }\n    case AssetType.Remove:\n      return (\n        <>\n          <span className=\"fe-trash\" />\n          &nbsp;\n        </>\n      );\n    default:\n      return null;\n  }\n};\n","import { FlowTypes, FlowTypeVisibility, ONLINE, Operator, Type } from 'config/interfaces';\nimport { FlowEditorConfig } from 'flowTypes';\n\nexport const isOnlineFlowType = (flowType: FlowTypes) => {\n  return !!ONLINE.find((type: FlowTypes) => type === flowType);\n};\n\nexport const filterOperators = (operators: Operator[], config: FlowEditorConfig): Operator[] => {\n  console.log('operators', operators);\n  return filterVisibility(excludeOperators(operators, config), config);\n};\n\nexport const filterTypeConfigs = (typeConfigs: Type[], config: FlowEditorConfig): Type[] => {\n  return filterVisibility(excludeTypes(typeConfigs, config), config);\n};\n\nconst filterVisibility = (items: FlowTypeVisibility[], config: FlowEditorConfig): any[] => {\n  return items.filter((item: FlowTypeVisibility) => {\n    // if we have a filter on our type, don't return it unless its present in our config\n    if (item.filter) {\n      if (!(config.filters || []).find((name: string) => name === item.filter)) {\n        return false;\n      }\n    }\n\n    if (item.visibility === undefined) {\n      return true;\n    }\n\n    return item.visibility.findIndex((ft: FlowTypes) => ft === config.flowType) > -1;\n  });\n};\n\nconst excludeTypes = (items: Type[], config: FlowEditorConfig): any[] => {\n  if (!config.excludeTypes) {\n    return items;\n  }\n  return items.filter((item: Type) => !config.excludeTypes.includes(item.type));\n};\n\nconst excludeOperators = (items: Operator[], config: FlowEditorConfig): any[] => {\n  if (!config.excludeOperators) {\n    return items;\n  }\n  return items.filter((item: Operator) => !config.excludeOperators.includes(item.type));\n};\n","import { fakePropType } from 'config/ConfigProvider';\nimport { filterTypeConfigs } from 'config/helpers';\nimport { Type } from 'config/interfaces';\nimport { configsToDisplay } from 'config/typeConfigs';\nimport * as React from 'react';\nimport i18n from 'config/i18n';\nimport styles from './TypeList.module.scss';\nimport TembaSelect from 'temba/TembaSelect';\n\nexport interface TypeListProps {\n  __className: string;\n  initialType: Type;\n  onChange(config: Type): void;\n}\n\nexport interface TypeListState {\n  config: Type;\n}\n\nexport default class TypeList extends React.PureComponent<TypeListProps, TypeListState> {\n  private typeConfigs: Type[];\n\n  constructor(props: TypeListProps) {\n    super(props);\n\n    this.state = {\n      config: this.props.initialType\n    };\n\n    this.handleChangeType = this.handleChangeType.bind(this);\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  private handleChangeType(config: Type): void {\n    this.setState({ config }, () => this.props.onChange(config));\n  }\n\n  private getTypeConfigs(): Type[] {\n    if (this.typeConfigs === undefined) {\n      this.typeConfigs = filterTypeConfigs(configsToDisplay, this.context.config);\n    }\n    return this.typeConfigs;\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className={`${this.props.__className} ${styles.type_list}`}>\n        <p>{i18n.t('forms.type_label', 'When a contact arrives at this point in your flow...')}</p>\n        <div>\n          <TembaSelect\n            key=\"type_select\"\n            name=\"type\"\n            onChange={this.handleChangeType}\n            nameKey=\"description\"\n            valueKey=\"type\"\n            value={this.state.config}\n            options={this.getTypeConfigs()}\n            searchable={true}\n          ></TembaSelect>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as headerUtils from 'http-headers-validation';\nimport { Asset } from 'store/flowContext';\nimport { FormEntry, ValidationFailure } from 'store/nodeEditor';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport i18n from 'config/i18n';\n\nexport type FormInput =\n  | string\n  | string[]\n  | number\n  | Asset\n  | Asset[]\n  | SelectOption\n  | SelectOption[];\nexport type ValidatorFunc = (\n  name: string,\n  input: FormInput\n) => { failures: ValidationFailure[]; value: FormInput };\n\n// Courtesy of @diegoperini: https://gist.github.com/dperini/729294\n// Expected behavior: https://mathiasbynens.be/demo/url-regex\nconst REGEX_URL = new RegExp(\n  '^' +\n    // protocol identifier\n    '(?:(?:https?|ftp)://)' +\n    // user:pass authentication\n    '(?:\\\\S+(?:u:\\\\S*)?@)?' +\n    '(?:' +\n    // IP address exclusion\n    // private & local networks\n    '(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})' +\n    '(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})' +\n    '(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})' +\n    // IP address dotted notation octets\n    // excludes loopback network 0.0.0.0\n    // excludes reserved space >= 224.0.0.0\n    // excludes network & broacast addresses\n    // (first & last IP address of each class)\n    '(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])' +\n    '(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}' +\n    '(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))' +\n    '|' +\n    // host name\n    '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)' +\n    // domain name\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*' +\n    // TLD identifier\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))' +\n    // TLD may end with dot\n    '\\\\.?' +\n    ')' +\n    // port number\n    '(?::\\\\d{2,5})?' +\n    // resource path\n    '(?:[/?#]\\\\S*)?' +\n    '$',\n  'i'\n);\n\nconst inputAsString = (input: FormInput): string => {\n  let value = input;\n  if (typeof input === 'string') {\n    return value + '';\n  }\n\n  // if we are an object consider the name to match assets\n  if (input && typeof input === 'object') {\n    value = (input as any).name || undefined;\n  }\n\n  return value ? value + '' : null;\n};\n\nconst fromMaxItems = (max: number): ValidatorFunc => (name: string, input: FormInput) => {\n  if (Array.isArray(input)) {\n    const items = input as string[];\n    if (items.length > max) {\n      return {\n        value: input,\n        failures: [{ message: `${name} cannot have more than ${max} entries` }]\n      };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nconst fromRegex = (regex: RegExp, message: string): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  const value = inputAsString(input);\n  if (value) {\n    if (!regex.test(value)) {\n      return {\n        value: input,\n        failures: [{ message: `${name} ${message}` }]\n      };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nexport const validate = (\n  name: string,\n  input: FormInput,\n  validators: ValidatorFunc[]\n): FormEntry => {\n  let allFailures: ValidationFailure[] = [];\n  let value = input;\n  validators.forEach(validateFunc => {\n    const validation = validateFunc(name, input);\n    value = validation.value;\n    allFailures = allFailures.concat(validation.failures);\n  });\n\n  return { value, validationFailures: allFailures };\n};\n\nexport const Empty: ValidatorFunc = (name: string, input: FormInput) => {\n  const isNotFinished = i18n.t('forms.is_not_finished', 'is not finished');\n\n  if (input) {\n    return { value: input, failures: [{ message: `${name} ${isNotFinished}` }] };\n  }\n\n  if (typeof input === 'string') {\n    if ((input as string).trim().length !== 0) {\n      return {\n        value: input,\n        failures: [{ message: `${name} ${isNotFinished}` }]\n      };\n    }\n  } else if (Array.isArray(input)) {\n    if (input.length !== 0) {\n      return {\n        value: input,\n        failures: [{ message: `${name} ${isNotFinished}` }]\n      };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nexport const Required: ValidatorFunc = (name: string, input: FormInput) => {\n  const isRequired = i18n.t('forms.is_required', 'is required');\n\n  if (!input) {\n    return { value: input, failures: [{ message: `${name} ${isRequired}` }] };\n  }\n\n  if (typeof input === 'string') {\n    if ((input as string).trim().length === 0) {\n      return { value: input, failures: [{ message: `${name} ${isRequired}` }] };\n    }\n  } else if (Array.isArray(input)) {\n    if (input.length === 0) {\n      return {\n        value: input,\n        failures: [{ message: `${name} ${i18n.t('forms.are_required', 'are required')}` }]\n      };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nexport const Regex: ValidatorFunc = (name: string, input: FormInput) => {\n  if (typeof input === 'string') {\n    const inputString = input as string;\n\n    if (inputString.trim().startsWith('@')) {\n      return { failures: [], value: input };\n    }\n\n    try {\n      // tslint:disable-next-line:no-unused-expression\n      new RegExp(inputString);\n    } catch (e) {\n      return {\n        value: input,\n        failures: [\n          {\n            message: `${name} ${i18n.t('forms.is_not_a_valid_regex', 'is not a valid regex')}`\n          }\n        ]\n      };\n    }\n  }\n\n  return { failures: [], value: input };\n};\n\nexport const LessThan = (amount: number, checkName: string): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  if (typeof input === 'string') {\n    if (parseFloat(input as string) >= amount) {\n      return {\n        value: input,\n        failures: [\n          {\n            message: `${name} ${i18n.t(\n              'forms.must_be_less_than',\n              'must be less than'\n            )} ${checkName}`\n          }\n        ]\n      };\n    }\n\n    return { failures: [], value: input };\n  }\n  return { failures: [], value: input };\n};\n\nexport const MoreThan = (amount: number, checkName: string): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  if (typeof input === 'string') {\n    if (parseFloat(input as string) <= amount) {\n      return {\n        value: input,\n        failures: [{ message: `${name} must be a more than ${checkName}` }]\n      };\n    }\n\n    return { failures: [], value: input };\n  }\n  return { failures: [], value: input };\n};\n\nexport const shouldRequireIf = (required: boolean): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  if (required) {\n    return Required(name, input);\n  }\n  return { failures: [], value: input };\n};\n\nexport const validateIf = (func: ValidatorFunc, predicate: boolean): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  if (predicate) {\n    return func(name, input);\n  }\n  return { failures: [], value: input };\n};\n\nexport const HeaderName: ValidatorFunc = (name: string, input: FormInput) => {\n  if (typeof input === 'string') {\n    if (input.trim().length > 0 && !headerUtils.validateHeaderName(input)) {\n      return { failures: [{ message: 'Invalid header name' }], value: input };\n    }\n  }\n  return { failures: [], value: input };\n};\n\nexport const IsValidIntent = (classifier: Asset): ValidatorFunc => (\n  name: string,\n  input: FormInput\n) => {\n  if (typeof input === 'object') {\n    const option = input as SelectOption;\n\n    if (option && classifier && classifier.content) {\n      const exists = !!classifier.content.intents.find((intent: string) => intent === option.value);\n      if (!exists) {\n        return {\n          value: input,\n          failures: [{ message: `${option.value} is not a valid intent for ${classifier.name}` }]\n        };\n      }\n    }\n    return { failures: [], value: input };\n  }\n  return { failures: [], value: input };\n};\n\nexport const MaxOfTenItems = fromMaxItems(10);\nexport const StartIsNonNumeric = fromRegex(/^(?!\\d)/, \"can't start with a number\");\nexport const ValidURL = fromRegex(REGEX_URL, 'is not a valid URL');\nexport const Numeric = fromRegex(/^([-+]?((\\.\\d+)|(\\d+)(\\.\\d+)?)$)/, 'must be a number');\nexport const Alphanumeric = fromRegex(/^[a-z\\d\\-_\\s]+$/i, 'can only have letters and numbers');\nexport const NumOrExp = fromRegex(/^@.*$|^([-+]?((\\.\\d+)|(\\d+)(\\.\\d+)?)$)/, 'must be a number');\n","import { hasErrors } from 'components/flow/actions/helpers';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Type } from 'config/interfaces';\nimport { Scheme } from 'config/typeConfigs';\nimport { AnyAction } from 'flowTypes';\nimport mutate from 'immutability-helper';\nimport { combineReducers } from 'redux';\nimport { LocalizedObject } from 'services/Localization';\nimport ActionTypes, {\n  UpdateNodeEditorSettings,\n  UpdateTypeConfigAction,\n  UpdateUserAddingActionAction\n} from 'store/actionTypes';\nimport Constants from 'store/constants';\nimport { Asset, RenderNode } from 'store/flowContext';\n\n// tslint:disable:no-shadowed-variable\nexport interface ValidationFailure {\n  message: string;\n}\n\nexport interface FormEntry {\n  value: any;\n  validationFailures?: ValidationFailure[];\n}\n\nexport interface SelectOptionEntry extends FormEntry {\n  value: SelectOption;\n}\n\nexport interface NumberEntry extends FormEntry {\n  value: number;\n}\n\nexport interface StringEntry extends FormEntry {\n  value: string;\n}\n\nexport interface SchemeEntry extends FormEntry {\n  value: Scheme;\n}\n\nexport interface StringArrayEntry extends FormEntry {\n  value: string[];\n}\n\nexport interface AssetEntry extends FormEntry {\n  value: Asset;\n}\n\nexport interface AssetArrayEntry extends FormEntry {\n  value: Asset[] | null;\n}\n\nexport interface SelectOptionArrayEntry extends FormEntry {\n  value: SelectOption[] | null;\n}\n\nexport const mergeForm = (\n  form: FormState,\n  toMerge: Partial<FormState>,\n  toRemove: any[] = []\n): FormState => {\n  // TODO: deal with explicit array setting\n  let updated = form || {};\n  // we auto update array items with uuids\n  for (const key of Object.keys(toMerge)) {\n    const entry: any = (toMerge as any)[key];\n    if (Array.isArray(entry)) {\n      for (const item of entry) {\n        // we support objects with uuids or FormEntry's with uuids\n        const isEntry = item.hasOwnProperty('value') && typeof item.value === 'object';\n\n        if ((isEntry && item.value.uuid) || item.uuid) {\n          const existingIdx = (form as any)[key].findIndex((existing: any) => {\n            if (isEntry) {\n              return existing.value.uuid === item.value.uuid;\n            } else {\n              return existing.uuid === item.uuid;\n            }\n          });\n\n          if (existingIdx > -1) {\n            // we found a match, merge us in\n            updated = mutate(updated, {\n              [key]: { $merge: { [existingIdx]: item } }\n            }) as FormState;\n          } else {\n            // couldn't find it, lets push it on\n            updated = mutate(updated, {\n              [key]: { $push: [item] }\n            }) as FormState;\n          }\n        }\n      }\n\n      // remove it from our merge\n      delete (toMerge as any)[key];\n    }\n  }\n\n  // removals can be items in an array\n  for (const remove of toRemove.filter((item: any) => typeof item === 'object')) {\n    for (const key of Object.keys(remove)) {\n      const entry: any = remove[key];\n      if (Array.isArray(entry)) {\n        for (const item of entry) {\n          // we support objects with uuids or FormEntry's with uuids\n          const isEntry = item.hasOwnProperty('value') && typeof item.value === 'object';\n          if ((isEntry && item.value.uuid) || item.uuid) {\n            updated = mutate(updated, {\n              [key]: (items: any) =>\n                items.filter((existing: any) => {\n                  if (isEntry) {\n                    return existing.value.uuid !== item.value.uuid;\n                  } else {\n                    return existing.uuid !== item.uuid;\n                  }\n                })\n            });\n          }\n        }\n      }\n    }\n  }\n\n  const removeKeys = toRemove.filter((item: any) => typeof item === 'string');\n  updated = mutate(updated, {\n    $merge: toMerge,\n    $unset: removeKeys\n  }) as FormState;\n\n  let valid = true;\n  for (const key of Object.keys(form)) {\n    const entry: any = (updated as any)[key];\n    if (Array.isArray(entry)) {\n      for (const item of entry) {\n        if (hasErrors(item)) {\n          valid = false;\n          break;\n        }\n      }\n    } else if (entry && typeof entry === 'object') {\n      if (hasErrors(entry)) {\n        valid = false;\n        break;\n      }\n    }\n  }\n\n  return mutate(updated, { $merge: { valid } }) as FormState;\n};\n\nexport interface FormState {\n  validationFailures?: ValidationFailure[];\n  valid: boolean;\n}\n\nexport interface NodeEditorSettings {\n  originalNode: RenderNode;\n  showAdvanced?: boolean;\n  originalAction?: AnyAction;\n  localizations?: LocalizedObject[];\n}\n\nexport interface NodeEditor {\n  typeConfig: Type | null;\n  userAddingAction: boolean;\n  settings: NodeEditorSettings | null;\n}\n\n// Initial state\nexport const initialState: NodeEditor = {\n  typeConfig: null,\n  userAddingAction: false,\n  settings: null\n};\n\n// Action Creators\nexport const updateTypeConfig = (typeConfig: Type): UpdateTypeConfigAction => ({\n  type: Constants.UPDATE_TYPE_CONFIG,\n  payload: {\n    typeConfig\n  }\n});\n\nexport const updateNodeEditorSettings = (\n  settings: NodeEditorSettings\n): UpdateNodeEditorSettings => ({\n  type: Constants.UPDATE_NODE_EDITOR_SETTINGS,\n  payload: {\n    settings\n  }\n});\n\nexport const updateUserAddingAction = (\n  userAddingAction: boolean\n): UpdateUserAddingActionAction => ({\n  type: Constants.UPDATE_USER_ADDING_ACTION,\n  payload: {\n    userAddingAction\n  }\n});\n\n// Reducers\nexport const typeConfig = (state: Type | null = initialState.typeConfig, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_TYPE_CONFIG:\n      return action.payload!.typeConfig;\n    default:\n      return state;\n  }\n};\n\nexport const userAddingAction = (\n  state: boolean = initialState.userAddingAction,\n  action: ActionTypes\n) => {\n  switch (action.type) {\n    case Constants.UPDATE_USER_ADDING_ACTION:\n      return action.payload!.userAddingAction;\n    default:\n      return state;\n  }\n};\n\nexport const settings = (\n  state: NodeEditorSettings | null = initialState.settings,\n  action: ActionTypes\n) => {\n  switch (action.type) {\n    case Constants.UPDATE_NODE_EDITOR_SETTINGS:\n      return action.payload!.settings;\n    default:\n      return state;\n  }\n};\n\n// Root reducer\nexport default combineReducers({\n  typeConfig,\n  userAddingAction,\n  settings\n});\n","import { AddLabelsFormState } from 'components/flow/actions/addlabels/AddLabelsForm';\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { Types } from 'config/interfaces';\nimport { AddLabels } from 'flowTypes';\nimport { Asset, AssetType } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): AddLabelsFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.add_input_labels) {\n    const action = settings.originalAction as AddLabels;\n    return {\n      labels: {\n        value: action.labels.map(label => {\n          return { id: label.uuid, name: label.name, type: AssetType.Label };\n        })\n      },\n      valid: true\n    };\n  }\n\n  return {\n    labels: { value: [] },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  formState: AddLabelsFormState\n): AddLabels => {\n  return {\n    type: Types.add_input_labels,\n    labels: getAsset(formState.labels.value!, AssetType.Label),\n    uuid: getActionUUID(settings, Types.add_input_labels)\n  };\n};\n\nexport const getAsset = (assets: Asset[], type: AssetType): any[] => {\n  return assets\n    .filter((asset: Asset) => asset.type === type)\n    .map((asset: Asset) => {\n      return { uuid: asset.id, name: asset.name };\n    });\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { AssetArrayEntry, FormState, mergeForm } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { renderIssues } from '../helpers';\n\nexport interface AddLabelsFormState extends FormState {\n  labels: AssetArrayEntry;\n}\n\nexport const controlLabelSpecId = 'label';\n\nexport default class AddLabelsForm extends React.PureComponent<\n  ActionFormProps,\n  AddLabelsFormState\n> {\n  public static contextTypes = {\n    assetService: fakePropType\n  };\n\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleSave(): void {\n    const valid = this.handleLabelsChanged(this.state.labels.value!, true);\n\n    if (valid) {\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\n      this.props.updateAction(newAction);\n      this.props.onClose(false);\n    }\n  }\n\n  public handleLabelsChanged(selected: Asset[], submitting: boolean = false): boolean {\n    const updates: Partial<AddLabelsFormState> = {\n      labels: validate(i18n.t('forms.labels', 'Labels'), selected, [shouldRequireIf(submitting)])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public handleCreateAssetFromInput(input: string): any {\n    return { name: input };\n  }\n\n  public handleLabelCreated(label: Asset): void {\n    // update our store with our new group\n    this.props.addAsset('labels', label);\n\n    this.handleLabelsChanged(this.state.labels.value!.concat(label));\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p data-spec={controlLabelSpecId}>\n          <Trans i18nKey=\"forms.add_labels_summary\">\n            Select the labels to apply to the incoming message.\n          </Trans>\n        </p>\n\n        <AssetSelector\n          name={i18n.t('forms.labels', 'Labels')}\n          placeholder={i18n.t(\n            'enter_to_create_label',\n            'Enter the name of an existing label or create a new one'\n          )}\n          assets={this.props.assetStore.labels}\n          entry={this.state.labels}\n          searchable={true}\n          multi={true}\n          onChange={this.handleLabelsChanged}\n          createPrefix={i18n.t('create_label', 'Create Label') + ': '}\n          createAssetFromInput={this.handleCreateAssetFromInput}\n          onAssetCreated={this.handleLabelCreated}\n        />\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { AddURNFormState } from 'components/flow/actions/addurn/AddURNForm';\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Types } from 'config/interfaces';\nimport { Scheme, SCHEMES } from 'config/typeConfigs';\nimport { AddURN } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const getSchemeOptions = (): SelectOption[] => {\n  return SCHEMES.map((scheme: Scheme) => {\n    return schemeToSelectOption(scheme);\n  });\n};\n\nexport const getSchemeObject = (scheme: string): Scheme => {\n  return SCHEMES.find((item: Scheme) => item.scheme === scheme)!;\n};\n\nexport const getSchemeSelectOption = (scheme: string): SelectOption =>\n  schemeToSelectOption(getSchemeObject(scheme));\n\nexport const schemeToSelectOption = (scheme: Scheme): SelectOption => {\n  return { value: scheme.scheme, label: scheme.path };\n};\n\nexport const initializeForm = (settings: NodeEditorSettings): AddURNFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.add_contact_urn) {\n    const { scheme, path } = settings.originalAction as AddURN;\n\n    return {\n      scheme: { value: getSchemeSelectOption(scheme) },\n      path: { value: path },\n      valid: true\n    };\n  }\n\n  return {\n    scheme: { value: getSchemeSelectOption('tel') },\n    path: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (settings: NodeEditorSettings, formState: AddURNFormState): AddURN => {\n  return {\n    type: Types.add_contact_urn,\n    uuid: getActionUUID(settings, Types.add_input_labels),\n    scheme: formState.scheme.value.value,\n    path: formState.path.value\n  };\n};\n","// https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values\nexport enum KeyValues {\n  KEY_AT = '@',\n  KEY_SPACE = ' ',\n  KEY_ENTER = 'Enter',\n  KEY_UP = 'ArrowUp',\n  KEY_DOWN = 'ArrowDown',\n  KEY_RIGHT = 'ArrowRight',\n  KEY_LEFT = 'ArrowLeft',\n  KEY_TAB = 'Tab',\n  KEY_ESC = 'Escape',\n  KEY_BACKSPACE = 'Backspace',\n  KEY_N = 'n',\n  KEY_P = 'p',\n  KEY_F = 'f',\n  KEY_B = 'b'\n}\n\nexport const MAX_GSM_SINGLE = 160;\nexport const MAX_GSM_MULTI = 153;\nexport const MAX_UNICODE_SINGLE = 70;\nexport const MAX_UNICODE_MULTI = 67;\n\nexport const COMPLETION_HELP = 'Tab to complete, enter to select';\n\nexport const GSM: { [key: string]: number } = {\n  // char: charCode\n  0: 48,\n  1: 49,\n  2: 50,\n  3: 51,\n  4: 52,\n  5: 53,\n  6: 54,\n  7: 55,\n  8: 56,\n  9: 57,\n  '\\n': 10,\n  '\\f': 12,\n  '\\r': 13,\n  ' ': 32,\n  '!': 33,\n  '\"': 34,\n  '#': 35,\n  $: 36,\n  '%': 37,\n  '&': 38,\n  \"'\": 39,\n  '(': 40,\n  ')': 41,\n  '*': 42,\n  '+': 43,\n  ',': 44,\n  '-': 45,\n  '.': 46,\n  '/': 47,\n  ':': 58,\n  ';': 59,\n  '<': 60,\n  '=': 61,\n  '>': 62,\n  '?': 63,\n  '@': 64,\n  A: 65,\n  B: 66,\n  C: 67,\n  D: 68,\n  E: 69,\n  F: 70,\n  G: 71,\n  H: 72,\n  I: 73,\n  J: 74,\n  K: 75,\n  L: 76,\n  M: 77,\n  N: 78,\n  O: 79,\n  P: 80,\n  Q: 81,\n  R: 82,\n  S: 83,\n  T: 84,\n  U: 85,\n  V: 86,\n  W: 87,\n  X: 88,\n  Y: 89,\n  Z: 90,\n  '[': 91,\n  '\\\\': 92,\n  ']': 93,\n  '^': 94,\n  _: 95,\n  a: 97,\n  b: 98,\n  c: 99,\n  d: 100,\n  e: 101,\n  f: 102,\n  g: 103,\n  h: 104,\n  i: 105,\n  j: 106,\n  k: 107,\n  l: 108,\n  m: 109,\n  n: 110,\n  o: 111,\n  p: 112,\n  q: 113,\n  r: 114,\n  s: 115,\n  t: 116,\n  u: 117,\n  v: 118,\n  w: 119,\n  x: 120,\n  y: 121,\n  z: 122,\n  '{': 123,\n  '|': 124,\n  '}': 125,\n  '~': 126,\n  '¡': 161,\n  '£': 163,\n  '¤': 164,\n  '¥': 165,\n  '§': 167,\n  '¿': 191,\n  Ä: 196,\n  Å: 197,\n  Æ: 198,\n  Ç: 199,\n  É: 201,\n  Ñ: 209,\n  Ö: 214,\n  Ø: 216,\n  Ü: 220,\n  ß: 223,\n  à: 224,\n  ä: 228,\n  å: 229,\n  æ: 230,\n  è: 232,\n  é: 233,\n  ì: 236,\n  ñ: 241,\n  ò: 242,\n  ö: 246,\n  ø: 248,\n  ù: 249,\n  ü: 252,\n  Γ: 915,\n  Δ: 916,\n  Θ: 920,\n  Λ: 923,\n  Ξ: 926,\n  Π: 928,\n  Σ: 931,\n  Φ: 934,\n  Ψ: 936,\n  Ω: 937,\n  '€': 8364\n};\n","import * as React from 'react';\nimport { AddURN } from 'flowTypes';\n\nimport { getSchemeObject } from './helpers';\nimport i18n from 'config/i18n';\nimport { emphasize } from 'utils';\n\nexport const MAX_TO_SHOW = 5;\n\nconst AddURNComp: React.SFC<AddURN> = ({ scheme, path }): JSX.Element => {\n  const schemeObject = getSchemeObject(scheme);\n  const schemeName = schemeObject ? schemeObject.path : scheme;\n  return (\n    <>\n      {i18n.t('add', 'Add')} {schemeName} {emphasize(path)}\n    </>\n  );\n};\n\nexport default AddURNComp;\n","import FormElement, { FormElementProps } from 'components/form/FormElement';\nimport * as React from 'react';\nimport TembaSelect, { TembaSelectStyle } from 'temba/TembaSelect';\nimport { hasErrors } from 'components/flow/actions/helpers';\n\ninterface SelectElementProps extends FormElementProps {\n  onChange?(value: any, action?: any): void;\n  onMenuOpen?: () => void;\n  onMenuClose?: () => void;\n  options: any;\n\n  style?: TembaSelectStyle;\n  placeholder?: string;\n  clearable?: boolean;\n\n  multi?: boolean;\n  styles?: any;\n}\n\nexport interface SelectOption {\n  label: string;\n  value: string;\n}\n\nexport default class SelectElement extends React.Component<SelectElementProps> {\n  public render(): JSX.Element {\n    return (\n      <FormElement name={this.props.name} entry={this.props.entry}>\n        <TembaSelect\n          key={this.props.name + '_select'}\n          name={this.props.name}\n          placeholder={this.props.placeholder}\n          onChange={this.props.onChange}\n          value={this.props.entry.value}\n          options={this.props.options}\n          searchable={false}\n          error={hasErrors(this.props.entry)}\n          style={this.props.style}\n          multi={this.props.multi}\n        ></TembaSelect>\n        {/*<Select\n          isDisabled={this.props.onChange === undefined}\n          placeholder={this.props.placeholder}\n          styles={this.getStyle()}\n          name={this.props.name}\n          value={this.props.entry.value}\n          onChange={this.props.onChange}\n          onMenuOpen={this.props.onMenuOpen}\n          onMenuClose={this.props.onMenuClose}\n          isSearchable={false}\n          isClearable={this.props.clearable}\n          options={this.props.options}\n          \n        />*/}\n      </FormElement>\n    );\n  }\n}\n","import { UnicodeCharMap } from 'components/form/textinput/helpers';\nimport * as React from 'react';\nimport { pluralize, renderIf } from 'utils';\n\nimport styles from './UnicodeList.module.scss';\n\nexport interface UnicodeListProps {\n  unicodeChars: UnicodeCharMap;\n}\n\nexport const utfWarning = (num: number) =>\n  ` Note that your message may require more segments to send because it contains the following ${pluralize(\n    num,\n    'character'\n  )}:`;\n\nexport const unicodeListContainerSpecId = 'unicode-list-container';\nexport const unicodeListSpecId = 'unicode-list';\n\nconst UnicodeList: React.SFC<UnicodeListProps> = ({ unicodeChars }) => {\n  const chars = Object.keys(unicodeChars);\n  return renderIf(chars.length > 0)(\n    <span data-testid={unicodeListContainerSpecId}>\n      {utfWarning(chars.length)}\n      <div className={styles.unicode_list} data-testid={unicodeListSpecId}>\n        {chars.map((char, idx) => (\n          <span key={char} className={styles.unicode_char}>\n            {char}\n          </span>\n        ))}\n      </div>\n    </span>\n  );\n};\n\nexport default UnicodeList;\n","import classNames from 'classnames/bind';\nimport { UnicodeCharMap } from 'components/form/textinput/helpers';\nimport UnicodeList from 'components/form/textinput/UnicodeList';\nimport React from 'react';\nimport { pluralize } from 'utils';\n\nimport styles from './CharCount.module.scss';\n\ninterface CharCountProps {\n  count: number;\n  parts: number;\n  unicodeChars: UnicodeCharMap;\n}\n\nconst cx: any = classNames.bind(styles);\n\nconst CharCount: React.SFC<CharCountProps> = ({ count, parts, unicodeChars }) => {\n  const hasUnicode = Object.keys(unicodeChars).length > 0;\n  const toolTipTextClasses = cx({\n    [styles.tooltip_text]: true,\n    [styles.unicode]: hasUnicode\n  });\n  return (\n    <div className={styles.count}>\n      <div className={styles.tooltip}>\n        {count}\n        <span className={styles.divider}>/</span>\n        {parts}\n        <span className={toolTipTextClasses}>\n          This message will be about <b>{count}</b> {pluralize(count, 'character')} long. We\n          estimate it will take <b>{parts}</b> {pluralize(parts, 'message')} to send over SMS.\n          {hasUnicode && <UnicodeList unicodeChars={unicodeChars} />}\n          <div className={styles.fine_print}>\n            Using variables may result in longer messages that require more messages to send over\n            SMS.\n          </div>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default CharCount;\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport FormElement, { FormElementProps } from 'components/form/FormElement';\nimport shared from 'components/form/FormElement.module.scss';\nimport CharCount from 'components/form/textinput/CharCount';\nimport { COMPLETION_HELP, KeyValues } from 'components/form/textinput/constants';\nimport ExcellentParser, { isWordChar } from 'components/form/textinput/ExcellentParser';\nimport { getMsgStats, UnicodeCharMap } from 'components/form/textinput/helpers';\nimport { Type, Types } from 'config/interfaces';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { AssetStore, CompletionOption, FunctionExample } from 'store/flowContext';\nimport { StringEntry } from 'store/nodeEditor';\nimport AppState from 'store/state';\nimport getCaretCoordinates from 'textarea-caret';\nimport {\n  CompletionSchema,\n  getCompletions,\n  getFunctions,\n  getCompletionName,\n  getCompletionSignature,\n  CompletionAssets\n} from 'utils/completion';\n\nimport styles from './TextInputElement.module.scss';\nimport { hasErrors } from 'components/flow/actions/helpers';\n\nconst ReactMarkdown = require('react-markdown');\n\n// import setCaretPosition from 'get-input-selection';\nexport enum Count {\n  SMS = 'SMS'\n}\n\nexport interface Coordinates {\n  left: number;\n  top: number;\n}\n\nexport type HTMLTextElement = HTMLTextAreaElement | HTMLInputElement;\n\nexport interface TextInputStoreProps {\n  typeConfig: Type;\n  assetStore: AssetStore;\n  completionSchema: CompletionSchema;\n  functions: CompletionOption[];\n}\n\nexport interface TextInputPassedProps extends FormElementProps {\n  entry?: StringEntry;\n  __className?: string;\n  count?: Count;\n  textarea?: boolean;\n  placeholder?: string;\n  autocomplete?: boolean;\n  focus?: boolean;\n  showInvalid?: boolean;\n  maxLength?: number;\n  onChange?: (value: string, name?: string) => void;\n  onBlur?: (event: React.ChangeEvent<HTMLTextElement>) => void;\n  onEnter?: (event: React.KeyboardEvent<HTMLTextElement>) => boolean;\n}\n\nexport type TextInputProps = TextInputStoreProps & TextInputPassedProps;\n\nexport interface TextInputState {\n  value: string;\n  caretCoordinates: Coordinates;\n  completionVisible: boolean;\n  selectedOptionIndex: number;\n  matches: CompletionOption[];\n  query: string;\n  parts?: string[];\n  characterCount?: number;\n  unicodeChars?: UnicodeCharMap;\n  fn?: CompletionOption;\n}\n\ntype InitialState = Pick<\n  TextInputState,\n  'caretCoordinates' | 'completionVisible' | 'selectedOptionIndex' | 'matches' | 'query'\n>;\n\nconst initialState: InitialState = {\n  caretCoordinates: { left: 0, top: 0 },\n  completionVisible: false,\n  selectedOptionIndex: 0,\n  matches: [],\n  query: ''\n};\n\nconst cx: any = classNames.bind({ ...styles, ...shared });\n\nexport class TextInputElement extends React.Component<TextInputProps, TextInputState> {\n  private selectedEl: HTMLLIElement;\n  private textEl: HTMLTextElement;\n  private parser: ExcellentParser;\n  private nextCaret = -1;\n  private completion: CompletionAssets;\n\n  constructor(props: TextInputProps) {\n    super(props);\n\n    this.completion = {\n      schema: this.props.completionSchema,\n      assetStore: this.props.assetStore\n    };\n\n    let initial = '';\n    if (this.props.entry && this.props.entry.value) {\n      initial = this.props.entry.value;\n    }\n\n    this.state = {\n      value: initial,\n      ...initialState,\n      ...(this.props.count && this.props.count === Count.SMS ? getMsgStats(initial) : {})\n    };\n\n    this.parser = new ExcellentParser('@', [\n      'contact',\n      'child',\n      'fields',\n      'globals',\n      'input',\n      'parent',\n      'results',\n      'run',\n      'trigger',\n      'urns',\n      'webhook'\n    ]);\n\n    bindCallbacks(this, {\n      include: [/^on/, /Ref$/, 'setSelection', 'validate', /^has/, /^handle/]\n    });\n  }\n\n  private selectedElRef(ref: HTMLLIElement): HTMLLIElement {\n    return (this.selectedEl = ref);\n  }\n\n  private textElRef(ref: HTMLTextElement): HTMLTextElement {\n    return (this.textEl = ref);\n  }\n\n  public UNSAFE_componentWillReceiveProps(nextProps: TextInputProps): void {\n    if (nextProps.entry.value !== this.props.entry.value || this.nextCaret > -1) {\n      this.setState({ value: nextProps.entry.value }, () => {\n        if (this.nextCaret > -1) {\n          this.textEl.selectionStart = this.nextCaret;\n          this.textEl.selectionEnd = this.nextCaret;\n          this.nextCaret = -1;\n        }\n      });\n    }\n  }\n\n  public componentDidMount(): void {\n    return this.props.focus && this.focusInput();\n  }\n\n  public componentDidUpdate(previous: TextInputProps): void {\n    if (this.selectedEl) {\n      if (this.selectedEl.scrollIntoView) {\n        this.selectedEl.scrollIntoView(false);\n      }\n    }\n  }\n\n  private handleKeyDown(event: React.KeyboardEvent<HTMLTextElement>): void {\n    if (!this.props.autocomplete) {\n      return;\n    }\n\n    // if our parent cares about enter, give them a go at it\n    if (event.key === KeyValues.KEY_ENTER && this.props.onEnter) {\n      if (this.props.onEnter(event)) {\n        return;\n      }\n    }\n\n    switch (event.key) {\n      case KeyValues.KEY_SPACE:\n        if (event.ctrlKey) {\n          this.reevaluate(event.currentTarget.value, event.currentTarget.selectionStart, true);\n        }\n        break;\n      case KeyValues.KEY_P:\n        if (event.ctrlKey) {\n          if (this.state.completionVisible) {\n            this.setSelection(this.state.selectedOptionIndex - 1);\n            event.preventDefault();\n          }\n        }\n        break;\n      case KeyValues.KEY_UP:\n        if (this.state.completionVisible) {\n          this.setSelection(this.state.selectedOptionIndex - 1);\n          event.preventDefault();\n        }\n        break;\n      case KeyValues.KEY_N:\n        if (event.ctrlKey) {\n          if (this.state.completionVisible) {\n            this.setSelection(this.state.selectedOptionIndex + 1);\n            event.preventDefault();\n          }\n        }\n        break;\n      case KeyValues.KEY_DOWN:\n        if (this.state.completionVisible) {\n          this.setSelection(this.state.selectedOptionIndex + 1);\n          event.preventDefault();\n        }\n        return;\n      case KeyValues.KEY_AT:\n        this.setState({\n          completionVisible: true,\n          caretCoordinates: getCaretCoordinates(this.textEl, this.textEl.selectionEnd)\n        });\n        return;\n      case KeyValues.KEY_ESC:\n        if (this.state.completionVisible) {\n          this.setState({\n            completionVisible: false\n          });\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        return;\n      case KeyValues.KEY_TAB:\n      case KeyValues.KEY_ENTER:\n        let caret = event.currentTarget.selectionStart;\n        if (this.state.completionVisible && this.state.matches.length > 0) {\n          const option = this.state.matches[this.state.selectedOptionIndex];\n          let newValue = this.state.value.substr(0, caret - this.state.query.length);\n\n          if (option.signature) {\n            let parens = 1;\n            if (option.signature.indexOf('()') > -1) {\n              parens++;\n            }\n\n            newValue += option.signature.substring(0, option.signature.indexOf('(') + parens);\n          } else {\n            newValue += option.name;\n          }\n\n          const newCaret = newValue.length;\n\n          // skip over adjacent text including dot completions\n          for (const ch of this.state.value.substr(caret)) {\n            if (isWordChar(ch) || ch === '.') {\n              caret++;\n            } else {\n              break;\n            }\n          }\n\n          newValue += this.state.value.substr(caret);\n\n          let fn: CompletionOption = null;\n          let query = '';\n          let completionVisible = false;\n          const matches: CompletionOption[] = [];\n          if (event.key === KeyValues.KEY_TAB || option.signature) {\n            query = option.name;\n            matches.push(\n              ...getCompletions(this.completion, query),\n              ...getFunctions(this.props.functions, query)\n            );\n            completionVisible = matches.length > 0;\n            if (option.signature && option.signature.indexOf('()') === -1) {\n              fn = option;\n            }\n          }\n\n          this.setState(\n            {\n              fn,\n              query,\n              value: newValue,\n              matches,\n              completionVisible,\n              selectedOptionIndex: 0\n            },\n            () => {\n              if (this.props.onChange) {\n                this.props.onChange(this.state.value, this.props.name);\n              }\n              this.nextCaret = newCaret;\n            }\n          );\n\n          event.preventDefault();\n          event.stopPropagation();\n          return;\n        } else {\n          if (this.props.onEnter) {\n            this.props.onEnter(event);\n          }\n        }\n        return;\n      case KeyValues.KEY_BACKSPACE:\n        // go backwards on our value until we reach either a space or @\n        this.executeQuery(event.currentTarget.value, event.currentTarget.selectionStart - 1);\n        return;\n    }\n  }\n\n  private reevaluate(value: string, selectionStart: number, force: boolean = false): void {\n    if (this.state.completionVisible || force) {\n      this.setState(this.executeQuery(value, selectionStart) as TextInputState);\n    }\n  }\n\n  private handleKeyUp(event: React.KeyboardEvent<HTMLTextElement>): void {\n    if (event.currentTarget) {\n      const {\n        currentTarget: { value, selectionStart }\n      } = event;\n\n      switch (event.key) {\n        case KeyValues.KEY_P:\n        case KeyValues.KEY_N:\n          if (this.state.completionVisible && event.ctrlKey) {\n            return;\n          }\n          this.reevaluate(value, selectionStart);\n          return;\n\n        case KeyValues.KEY_F:\n        case KeyValues.KEY_B:\n          this.reevaluate(value, selectionStart);\n          return;\n\n        case KeyValues.KEY_RIGHT:\n        case KeyValues.KEY_LEFT:\n          this.reevaluate(value, selectionStart);\n          return;\n\n        case KeyValues.KEY_UP:\n        case KeyValues.KEY_DOWN:\n          if (this.state.completionVisible) {\n            return;\n          }\n          this.reevaluate(value, selectionStart);\n      }\n    }\n  }\n\n  private handleClick(event: React.MouseEvent<HTMLTextElement>): void {\n    if (event.currentTarget) {\n      const {\n        currentTarget: { value, selectionStart }\n      } = event;\n\n      this.reevaluate(value, selectionStart);\n    }\n  }\n\n  private handleBlur(event: React.ChangeEvent<HTMLTextElement>): void {\n    this.setState(\n      {\n        query: '',\n        matches: [],\n        selectedOptionIndex: 0,\n        completionVisible: false\n      },\n      () => this.props.onBlur && this.props.onBlur(event)\n    );\n  }\n\n  private executeQuery(value: string, position: number): Partial<TextInputState> {\n    // go backwards until we have a query\n    const expression = this.parser.expressionContext(value.substr(0, position));\n\n    let fn: CompletionOption = null;\n    if (expression !== null) {\n      const includeFunctions = expression.startsWith('(');\n\n      if (includeFunctions) {\n        const functionQuery = this.parser.functionContext(expression);\n        if (functionQuery) {\n          const fns = getFunctions(this.props.functions, functionQuery);\n          if (fns.length > 0) {\n            fn = fns[0];\n          }\n        }\n      }\n\n      for (let i = expression.length; i >= 0; i--) {\n        const curr = expression[i];\n        if (curr === '@' || curr === '(' || curr === ' ' || i === 0) {\n          // don't include open parens or spaces\n          if (curr === '(' || curr === ' ') {\n            i++;\n\n            if (!includeFunctions) {\n              return {\n                completionVisible: false\n              };\n            }\n          }\n\n          const query = expression.substr(i, expression.length - i);\n          const matches = getCompletions(this.completion, query);\n\n          if (includeFunctions) {\n            matches.push(...getFunctions(this.props.functions, query));\n          }\n\n          const completionVisible = matches.length > 0;\n          return {\n            query,\n            matches,\n            completionVisible,\n            selectedOptionIndex: 0,\n            caretCoordinates: getCaretCoordinates(this.textEl, position - query.length),\n            fn,\n            value\n          };\n        }\n      }\n    }\n\n    return {\n      // keep our text field state\n      value,\n\n      // reset the others\n      query: null,\n      completionVisible: false,\n      matches: [],\n      selectedOptionIndex: 0\n    };\n  }\n\n  private handleChange({\n    currentTarget: { value, selectionStart }\n  }: React.ChangeEvent<HTMLTextElement>): void {\n    const updates: Partial<TextInputState> = this.executeQuery(value, selectionStart);\n\n    if (this.props.autocomplete) {\n      if (this.props.count === Count.SMS) {\n        const { parts, characterCount, unicodeChars } = getMsgStats(value, true);\n        updates.parts = parts;\n        updates.characterCount = characterCount;\n        updates.unicodeChars = unicodeChars;\n      }\n\n      updates.selectedOptionIndex = 0;\n      this.setState(updates as TextInputState);\n    }\n\n    if (this.props.onChange) {\n      this.props.onChange(value, this.props.name);\n    }\n  }\n\n  private setSelection(selectedIdx: number): void {\n    let selectedOptionIndex: number = selectedIdx;\n\n    // Can't exceed the last option\n    if (selectedIdx >= this.state.matches.length) {\n      selectedOptionIndex = this.state.matches.length - 1;\n    }\n\n    // Can't go beyond the first option\n    if (selectedIdx < 0) {\n      selectedOptionIndex = 0;\n    }\n\n    if (selectedOptionIndex !== this.state.selectedOptionIndex) {\n      this.setState({ selectedOptionIndex });\n    }\n  }\n\n  private focusInput(): void {\n    const {\n      value: { length }\n    } = this.textEl;\n    this.textEl.focus();\n    this.textEl.selectionStart = length;\n  }\n\n  private getOption(\n    option: CompletionOption,\n    showSummary: boolean = false,\n    numExamples: number = 0\n  ): JSX.Element {\n    const name = getCompletionName(option);\n\n    let summary = null;\n    let examples = null;\n\n    if (showSummary) {\n      summary = (\n        <div data-spec=\"option-summary\" className={styles.option_summary}>\n          <ReactMarkdown source={option.summary} />\n        </div>\n      );\n    }\n\n    if (option.examples && numExamples > 0) {\n      examples = (\n        <div data-spec=\"option-example\" className={styles.option_examples}>\n          <div className={styles.example_header}>\n            EXAMPLE\n            {numExamples !== 1 ? 'S' : ''}\n          </div>\n\n          <div className={styles.example}>\n            {option.examples.slice(0, numExamples).map((example: FunctionExample, idx: number) => (\n              <div key={option.name + '_example_' + idx}> {example.template}</div>\n            ))}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <div data-spec=\"option-name\" className={styles.option_name}>\n          {option.signature ? <div className={styles.fn_marker}>ƒ</div> : null}\n          {name}\n\n          {showSummary && option.signature ? (\n            <div className={styles.option_signature}>{getCompletionSignature(option)}</div>\n          ) : null}\n        </div>\n        {summary}\n        {examples}\n      </>\n    );\n  }\n\n  private getOptions(): JSX.Element[] {\n    return this.state.matches.map((option: CompletionOption, idx: number) => {\n      const optionClasses = [styles.option];\n\n      if (idx === this.state.selectedOptionIndex) {\n        optionClasses.push(styles.selected);\n\n        if (idx === 0) {\n          optionClasses.push(styles.first_option);\n        }\n\n        return (\n          <li\n            ref={this.selectedElRef}\n            className={optionClasses.join(' ')}\n            key={option.signature || option.name}\n          >\n            {this.getOption(option, true, 1)}\n          </li>\n        );\n      }\n\n      return (\n        <li className={optionClasses.join(' ')} key={option.signature || option.name}>\n          {this.getOption(option, false)}\n        </li>\n      );\n    });\n  }\n\n  private getScroll(): number {\n    if (this.textEl) {\n      return this.textEl.scrollTop;\n    }\n    return 0;\n  }\n\n  private getError(): string {\n    return this.props.entry.validationFailures && this.props.entry.validationFailures.length > 0\n      ? this.props.entry.validationFailures[0].message\n      : null;\n  }\n\n  private getTextElement(): JSX.Element {\n    const textElClasses = cx({\n      [styles.textinput]: true,\n      [shared.invalid]: hasErrors(this.props.entry) || this.props.showInvalid === true\n    });\n\n    let text = this.state.value;\n    if (this.props.entry) {\n      text = this.props.entry.value;\n    }\n\n    if (this.props.textarea) {\n      return (\n        <textarea\n          name={this.props.name}\n          data-spec=\"input\"\n          data-testid=\"input\"\n          ref={this.textElRef}\n          className={textElClasses}\n          value={text}\n          onClick={this.handleClick}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onKeyDown={this.handleKeyDown}\n          onKeyUp={this.handleKeyUp}\n          placeholder={this.props.placeholder}\n          maxLength={this.props.maxLength || -1}\n        />\n      );\n    } else {\n      return (\n        <input\n          name={this.props.name}\n          data-spec=\"input\"\n          data-testid=\"input\"\n          ref={this.textElRef}\n          type=\"text\"\n          className={textElClasses}\n          value={text}\n          onClick={this.handleClick}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n          onKeyDown={this.handleKeyDown}\n          onKeyUp={this.handleKeyUp}\n          placeholder={this.props.placeholder}\n          maxLength={this.props.maxLength || -1}\n        />\n      );\n    }\n  }\n\n  public render(): JSX.Element {\n    const completionClasses = cx({\n      [styles.completion_container]: true,\n      [styles.hidden]: !this.state.completionVisible || this.state.matches.length === 0\n    });\n\n    const fnClasses = cx({\n      [styles.fn_container]: true,\n      [styles.hidden]: !this.state.completionVisible || this.state.matches.length === 0\n    });\n    const options: JSX.Element[] = this.getOptions();\n    const charCount: JSX.Element =\n      this.props.count && this.props.count === Count.SMS ? (\n        <CharCount\n          count={this.state.characterCount}\n          parts={this.state.parts.length}\n          unicodeChars={this.state.unicodeChars}\n        />\n      ) : null;\n\n    const sendMsgError =\n      hasErrors(this.props.entry) &&\n      this.props.name === 'Message' &&\n      (this.props.typeConfig.type === Types.send_msg ||\n        this.props.typeConfig.type === Types.send_broadcast);\n\n    const showFn = this.state.fn && !this.state.query;\n\n    return (\n      <FormElement\n        __className={this.props.__className}\n        name={this.props.name}\n        helpText={this.props.helpText}\n        showLabel={this.props.showLabel}\n        // errors={this.state.errors}\n        entry={this.props.entry}\n        sendMsgError={sendMsgError}\n      >\n        <div className={styles.wrapper}>\n          {this.getTextElement()}\n          <div\n            className={completionClasses}\n            style={{\n              top: this.state.caretCoordinates.top - this.getScroll(),\n              left: this.state.caretCoordinates.left\n            }}\n            data-spec=\"completion-options\"\n          >\n            <div className={styles.options_wrapper}>\n              <ul className={styles.option_list} data-spec=\"completion-list\">\n                {options}\n              </ul>\n              <div className={styles.help} data-spec=\"completion-help\">\n                {COMPLETION_HELP}\n              </div>\n            </div>\n\n            {showFn ? (\n              <div className={fnClasses}>{this.getOption(this.state.fn, true, 3)}</div>\n            ) : null}\n          </div>\n        </div>\n        {charCount}\n      </FormElement>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: { assetStore },\n  editorState: { completionSchema, functions },\n  nodeEditor: { typeConfig }\n}: AppState) => ({\n  typeConfig,\n  assetStore,\n  completionSchema,\n  functions\n});\n\nconst ConnectedTextInputElement = connect(\n  mapStateToProps,\n  null,\n  null,\n  { forwardRef: true }\n)(TextInputElement);\n\nexport default ConnectedTextInputElement;\n","const STATE_BODY = 0; // not in a expression\nconst STATE_PREFIX = 1; // '@' prefix that denotes the start of an expression\nconst STATE_IDENTIFIER = 2; // the identifier part, e.g. 'contact.age' in '@contact.age'\nconst STATE_BALANCED = 3; // the balanced parentheses delimited part, e.g. '(1 + 2)' in '@(1 + 2)'\nconst STATE_STRING_LITERAL = 4; // a string literal which could contain )\nconst STATE_ESCAPED_PREFIX = 5; // a '@' prefix preceded by another '@'\nconst STATE_IGNORE = 6;\n\ninterface Expression {\n  start: number;\n  end: number;\n  text: string;\n  closed: boolean;\n}\n\n/**\n * Determines whether the given string starts with the given text\n */\nconst startsWith = (str: string, start: string): boolean => {\n  return str.indexOf(start, 0) === 0;\n};\n\n/**\n * Checks the parsed (possibly partial) expression to determine if it's valid based on how it starts\n */\nconst isValidStart = (\n  partialExpression: string,\n  allowedTopLevels: string[],\n  allowIncomplete: boolean\n): boolean => {\n  const body = partialExpression.substring(1); // strip prefix\n\n  if (body[0] === '(') {\n    return true;\n  } else {\n    // if expression doesn't start with ( then check it's an allowed top level context reference\n    const topLevel = body.split('.')[0].toLowerCase();\n\n    if (allowIncomplete) {\n      for (const allowed of allowedTopLevels) {\n        if (startsWith(allowed, topLevel)) {\n          return true;\n        }\n      }\n    } else {\n      return allowedTopLevels.indexOf(topLevel) >= 0;\n    }\n    return false;\n  }\n};\n\n/**\n * Determines whether the given character is a word character, i.e. \\w in a regex\n */\nexport const isWordChar = (ch: string | 0): boolean => {\n  return (\n    (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z') || (ch >= '0' && ch <= '9') || ch === '_'\n  );\n};\n\n/**\n * Determines whether we are in a string literal\n */\nconst isInStringLiteral = (partialExpression: string): boolean => {\n  // count number quotation marks\n  let numQuotes = 0;\n  for (const pos of partialExpression) {\n    if (pos === '\"') {\n      numQuotes++;\n    }\n  }\n  return numQuotes % 2 !== 0; // odd means last string literal is open\n};\n\nexport default class ExcellentParser {\n  private expressionPrefix: string;\n  private allowedTopLevels: string[];\n\n  /**\n   * Creates a new parser\n   * @param expressionPrefix the prefix for expressions, e.g. '@'\n   * @param allowedTopLevels the context names that are allowed without parentheses, e.g. [\"contact\", \"flow\", ...]\n   */\n  constructor(expressionPrefix: string, allowedTopLevels: string[]) {\n    this.expressionPrefix = expressionPrefix;\n    this.allowedTopLevels = allowedTopLevels;\n  }\n\n  /**\n   * Given the text up to the caret position, returns the expression currently being edited, without its prefix\n   */\n  public expressionContext(textToCaret: string): string {\n    const expressions = this.findExpressions(textToCaret);\n    if (expressions.length === 0) {\n      // no expressions found\n      return null;\n    }\n\n    const lastExpression = expressions[expressions.length - 1];\n\n    // has last expression already ended or is it closed (i.e. has balanced parentheses)\n    if (lastExpression.end < textToCaret.length || lastExpression.closed) {\n      return null;\n    }\n\n    return lastExpression.text.substring(1); // return without prefix\n  }\n\n  /**\n   * Given the partial expression currently being edited, returns the current auto-completable identifier\n   * which may be a function name or a context reference.\n   */\n  public autoCompleteContext(partialExpression: string): string {\n    if (isInStringLiteral(partialExpression)) {\n      return null;\n    }\n\n    const neededParentheses = [];\n    let fragment = '';\n    let skipChar = false;\n    let inQuotes = false;\n    let prependFlag = '';\n\n    for (let pos = partialExpression.length - 1; pos >= 0; pos--) {\n      const ch = partialExpression[pos];\n\n      if (ch === ' ') {\n        skipChar = true;\n      }\n\n      if (ch === ',') {\n        skipChar = true;\n        if (neededParentheses[neededParentheses.length - 1] !== '(') {\n          neededParentheses.push('(');\n        }\n      }\n\n      if (ch === ')' && !inQuotes) {\n        skipChar = true;\n        neededParentheses.push('(');\n        neededParentheses.push('(');\n      }\n\n      if (ch === '\"') {\n        inQuotes = !inQuotes;\n      }\n\n      if (skipChar) {\n        if (ch === '(' && !inQuotes) {\n          if (neededParentheses[neededParentheses.length - 1] === '(') {\n            neededParentheses.pop();\n          }\n\n          if (neededParentheses.length === 0) {\n            skipChar = false;\n          }\n        }\n      }\n\n      if (ch === '(' && fragment === '') {\n        prependFlag = '#';\n      }\n\n      if (skipChar || inQuotes || (ch === '(' && fragment === '')) {\n        continue;\n      }\n\n      if (isWordChar(ch) || ch === '.') {\n        fragment = ch + fragment;\n      } else {\n        break;\n      }\n    }\n\n    if (fragment.match(/[A-Za-z][\\w]*(\\.[\\w]+)*/)) {\n      return prependFlag + fragment;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * TODO find the function context\n   */\n  public functionContext(partialExpression: string): string {\n    const inString = isInStringLiteral(partialExpression);\n\n    // initial state is string literal if number of quotes is odd\n    let state = inString ? STATE_STRING_LITERAL : STATE_IGNORE;\n    let identifier = '';\n    let parenthesesLevel = partialExpression[-1] === '(' ? 0 : 1;\n\n    for (let pos = partialExpression.length - 1; pos >= 0; pos--) {\n      const ch = partialExpression[pos];\n\n      if (ch === '@') {\n        return '';\n      }\n\n      if (state === STATE_IGNORE) {\n        if (parenthesesLevel === 0 && (isWordChar(ch) || ch === '.')) {\n          state = STATE_IDENTIFIER;\n          identifier = ch + identifier;\n        } else if (ch === '\"') {\n          state = STATE_STRING_LITERAL;\n        } else if (ch === '(') {\n          parenthesesLevel--;\n        } else if (ch === ')') {\n          parenthesesLevel++;\n        }\n      } else if (state === STATE_IDENTIFIER) {\n        if (isWordChar(ch) || ch === '.') {\n          identifier = ch + identifier;\n        } else {\n          return identifier;\n        }\n      } else if (state === STATE_STRING_LITERAL) {\n        if (ch === '\"') {\n          state = STATE_IGNORE;\n        }\n      }\n    }\n    return '';\n  }\n\n  public getContactFields(text: string): string[] {\n    const fields = {};\n    const re = /((parent|child\\.)*contact\\.)*fields\\.([a-z0-9_]+)/g;\n    const expressions = this.findExpressions(text);\n    for (const expression of expressions) {\n      if (expression.text.indexOf('webhook') > -1) {\n        continue;\n      }\n\n      let match;\n      // tslint:disable-next-line:no-conditional-assignment\n\n      while ((match = re.exec(expression.text))) {\n        (fields as any)[match[3]] = true;\n      }\n    }\n    return Object.keys(fields);\n  }\n\n  /**\n   * Finds all expressions in the given text, including any partially complete expression at the end of the input\n   */\n  public findExpressions(text: string): Expression[] {\n    const expressions: Expression[] = [];\n    let state = STATE_BODY;\n    let currentExpression: Expression = null;\n    let parenthesesLevel = 0;\n\n    for (let pos = 0; pos < text.length; pos++) {\n      const ch = text[pos];\n\n      // in order to determine if the b in a.b terminates an identifier, we have to peek two characters ahead as\n      // it could be a.b. (b terminates) or a.b.c (b doesn't terminate)\n      const nextCh = pos < text.length - 1 ? text[pos + 1] : 0;\n      const nextNextCh = pos < text.length - 2 ? text[pos + 2] : 0;\n\n      if (state === STATE_BODY) {\n        if (ch === this.expressionPrefix && (isWordChar(nextCh) || nextCh === '(')) {\n          state = STATE_PREFIX;\n          currentExpression = {\n            start: pos,\n            end: null,\n            text: ch,\n            closed: false\n          };\n        } else if (ch === this.expressionPrefix && nextCh === this.expressionPrefix) {\n          state = STATE_ESCAPED_PREFIX;\n        }\n      } else if (state === STATE_PREFIX) {\n        if (isWordChar(ch)) {\n          state = STATE_IDENTIFIER; // we're parsing an expression like @XXX\n        } else if (ch === '(') {\n          // we're parsing an expression like @(1 + 2)\n          state = STATE_BALANCED;\n          parenthesesLevel += 1;\n        }\n        currentExpression.text += ch;\n      } else if (state === STATE_IDENTIFIER) {\n        currentExpression.text += ch;\n      } else if (state === STATE_BALANCED) {\n        if (ch === '(') {\n          parenthesesLevel += 1;\n        } else if (ch === ')') {\n          parenthesesLevel -= 1;\n        } else if (ch === '\"') {\n          state = STATE_STRING_LITERAL;\n        }\n\n        currentExpression.text += ch;\n\n        // expression terminates if parentheses balance\n        if (parenthesesLevel === 0) {\n          currentExpression.end = pos + 1;\n        }\n      } else if (state === STATE_STRING_LITERAL) {\n        if (ch === '\"') {\n          state = STATE_BALANCED;\n        }\n        currentExpression.text += ch;\n      } else if (state === STATE_ESCAPED_PREFIX) {\n        state = STATE_BODY;\n      }\n\n      // identifier can terminate expression in 3 ways:\n      //  1. next char is null (i.e. end of the input)\n      //  2. next char is not a word character or period\n      //  3. next char is a period, but it's not followed by a word character\n      if (state === STATE_IDENTIFIER) {\n        if (\n          (!isWordChar(nextCh) && nextCh !== '.') ||\n          (nextCh === '.' && !isWordChar(nextNextCh))\n        ) {\n          currentExpression.end = pos + 1;\n        }\n      }\n\n      if (currentExpression != null && (currentExpression.end != null || nextCh === 0)) {\n        const allowIncomplete = nextCh === 0; // if we're at the end of the input, allow incomplete expressions\n        if (isValidStart(currentExpression.text, this.allowedTopLevels, allowIncomplete)) {\n          currentExpression.closed = currentExpression.text[1] === '(' && parenthesesLevel === 0;\n          currentExpression.end = pos + 1;\n          expressions.push(currentExpression);\n        }\n\n        currentExpression = null;\n        state = STATE_BODY;\n      }\n    }\n\n    return expressions;\n  }\n}\n","import { GSM } from 'components/form/textinput/constants';\nimport { split } from 'split-sms';\n\nexport interface UnicodeCharMap {\n  [char: string]: boolean;\n}\n\ninterface MsgStats {\n  value: string;\n  parts: string[];\n  characterCount: number;\n  unicodeChars: UnicodeCharMap;\n}\n\nexport const isUnicode = (char: string): boolean => {\n  if (GSM.hasOwnProperty(char)) {\n    return false;\n  }\n  return true;\n};\n\nexport const getUnicodeChars = (msg: string): UnicodeCharMap => {\n  const chars = {};\n\n  for (const char of msg) {\n    if (isUnicode(char)) {\n      (chars as any)[char] = true;\n    }\n  }\n\n  return chars;\n};\n\n/**\n * Replaces unicode characters commonly inserted by text editors like MSWord with their GSM equivalents\n * @param {string} msg - msg to be cleaned\n * @returns {string} Cleaned msg\n */\nexport const cleanMsg = (msg: string): string =>\n  msg\n    .replace(/[\\u2018\\u2019]/g, \"'\") // Smart single quotes\n    .replace(/[\\u201C\\u201D]/g, '\"') // Smart double quotes\n    .replace(/[\\u2013\\u2014]/g, '-') // En/em dash\n    .replace(/\\u2026/g, '...') // Horizontal ellipsis\n    .replace(/\\u2002/g, ' '); // En space\n\n/**\n * First pass at providing the user with an accurate character count for their SMS messages.\n * Determines encoding, segments, max character limit per message and calculates character count.\n * Optionally replaces common unicode 'gotcha characters' with their GSM counterparts.\n * @param value\n * @param replace\n */\nexport const getMsgStats = (value: string | string[], replace?: boolean): MsgStats => {\n  let newVal = value as string;\n\n  // Localized values are stored as string arrays\n  if (newVal.constructor === Array) {\n    newVal = newVal[0];\n  }\n\n  if (replace) {\n    newVal = cleanMsg(newVal);\n  }\n\n  const stats = split(newVal);\n\n  return {\n    value: newVal,\n    parts: stats.parts,\n    characterCount: stats.length,\n    unicodeChars: getUnicodeChars(newVal)\n  };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, mergeForm, SelectOptionEntry, StringEntry } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport styles from './AddURNForm.module.scss';\nimport { getSchemeOptions, initializeForm, stateToAction } from './helpers';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { renderIssues } from '../helpers';\n\nexport interface AddURNFormState extends FormState {\n  scheme: SelectOptionEntry;\n  path: StringEntry;\n}\n\nexport const controlLabelSpecId = 'label';\n\nexport default class AddURNForm extends React.PureComponent<ActionFormProps, AddURNFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleSave(): void {\n    const valid = this.handlePathChanged(this.state.path.value, null, true);\n    if (valid) {\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\n      this.props.updateAction(newAction);\n      this.props.onClose(false);\n    }\n  }\n\n  public handleSchemeChanged(selected: SelectOption): boolean {\n    const updates: Partial<AddURNFormState> = {\n      scheme: { value: selected }\n    };\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handlePathChanged(value: string, name: string, submitting: boolean = false): boolean {\n    const updates: Partial<AddURNFormState> = {\n      path: validate(i18n.t('forms.urn', 'URN'), value, [shouldRequireIf(submitting)])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p data-spec={controlLabelSpecId}>\n          <Trans i18nKey=\"forms.add_urn_summary\">\n            Add a new URN to reach the contact such as a phone number.\n          </Trans>\n        </p>\n        <div className={styles.scheme_selection}>\n          <SelectElement\n            key={'urn_type_select'}\n            name={i18n.t('forms.urn_type', 'URN Type')}\n            entry={this.state.scheme}\n            onChange={this.handleSchemeChanged}\n            options={getSchemeOptions()}\n          />\n        </div>\n        <div className={styles.path}>\n          <TextInputElement\n            name={i18n.t('forms.urn', 'URN')}\n            placeholder=\"Enter the URN value\"\n            entry={this.state.path}\n            onChange={this.handlePathChanged}\n            autocomplete={true}\n          />\n        </div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import * as React from 'react';\nimport { CallResthook } from 'flowTypes';\n\nconst CallResthookComp: React.SFC<CallResthook> = ({ resthook }): JSX.Element => (\n  <div>{resthook}</div>\n);\n\nexport default CallResthookComp;\n","import * as React from 'react';\nimport { CallWebhook } from 'flowTypes';\n\nconst CallWebhookComp: React.SFC<CallWebhook> = ({ url }): JSX.Element => <div>{url}</div>;\n\nexport default CallWebhookComp;\n","import { Group } from 'flowTypes';\nimport { Asset, AssetType } from 'store/flowContext';\nimport { AssetArrayEntry, FormState } from 'store/nodeEditor';\n\nexport const labelSpecId = 'label';\n\nexport interface ChangeGroupsFormState extends FormState {\n  groups: AssetArrayEntry;\n  removeAll?: boolean;\n}\n\nexport const excludeDynamicGroups = (asset: Asset): boolean => {\n  return asset.content && asset.content.query;\n};\n\nexport const mapGroupsToAssets = (groups: Group[]): Asset[] =>\n  groups.map(({ name, uuid }) => ({ name, id: uuid, type: AssetType.Group }));\n\nexport const mapAssetsToGroups = (searchResults: Asset[] | null): Group[] => {\n  if (!searchResults) {\n    return [];\n  }\n\n  return searchResults.map(result => ({\n    uuid: result.id,\n    name: result.name\n  }));\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { ChangeGroups } from 'flowTypes';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { mergeForm } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport { ChangeGroupsFormState, excludeDynamicGroups, labelSpecId } from '../helpers';\nimport { initializeForm, stateToAction } from './helpers';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { renderIssues } from '../../helpers';\n\nexport default class AddGroupsForm extends React.Component<ActionFormProps, ChangeGroupsFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings) as ChangeGroupsFormState;\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleSave(): void {\n    const valid = this.handleGroupsChanged(this.state.groups.value!, true);\n    if (valid) {\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\n      this.props.updateAction(newAction as ChangeGroups);\n      this.props.onClose(false);\n    }\n  }\n\n  public handleGroupsChanged(groups: Asset[], submitting: boolean = false): boolean {\n    const updates: Partial<ChangeGroupsFormState> = {\n      groups: validate(i18n.t('forms.groups', 'Groups'), groups, [shouldRequireIf(submitting)])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleGroupAdded(group: Asset): void {\n    // update our store with our new group\n    this.props.addAsset('groups', group);\n\n    // try to add the group\n    this.handleGroupsChanged((this.state.groups.value || []).concat(group), false);\n  }\n\n  public handleCreateAssetFromInput(input: string): any {\n    return { name: input };\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p data-spec={labelSpecId}>\n          <Trans i18nKey=\"forms.add_groups_summary\">Select the groups to add the contact to.</Trans>\n        </p>\n\n        <AssetSelector\n          name={i18n.t('forms.groups', 'Groups')}\n          multi={true}\n          noOptionsMessage={i18n.t('enter_to_create_group', 'Enter a name to create a new group')}\n          assets={this.props.assetStore.groups}\n          entry={this.state.groups}\n          onChange={this.handleGroupsChanged}\n          searchable={true}\n          shouldExclude={excludeDynamicGroups}\n          // Groups can be created on the fly\n          createPrefix={i18n.t('create_group', 'Create Group') + ': '}\n          createAssetFromInput={this.handleCreateAssetFromInput}\n          onAssetCreated={this.handleGroupAdded}\n        />\n\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import {\n  ChangeGroupsFormState,\n  mapAssetsToGroups,\n  mapGroupsToAssets\n} from 'components/flow/actions/changegroups/helpers';\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { Types } from 'config/interfaces';\nimport { ChangeGroups } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): ChangeGroupsFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.add_contact_groups) {\n    const action = settings.originalAction as ChangeGroups;\n    return {\n      groups: { value: mapGroupsToAssets(action.groups) },\n      valid: true\n    };\n  }\n\n  return {\n    groups: { value: null },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  nodeSettings: NodeEditorSettings,\n  state: ChangeGroupsFormState\n): ChangeGroups => {\n  return {\n    type: Types.add_contact_groups,\n    groups: mapAssetsToGroups(state.groups.value),\n    uuid: getActionUUID(nodeSettings, Types.add_contact_groups)\n  };\n};\n","import { renderAssetList } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Types } from 'config/interfaces';\nimport { ChangeGroups, Endpoints } from 'flowTypes';\nimport * as React from 'react';\nimport { AssetType } from 'store/flowContext';\n\nexport const removeAllSpecId = 'remove_from_all';\nexport const contentSpecId = 'content';\nexport const removeAllText = 'Remove from all groups';\n\nexport const MAX_TO_SHOW = 5;\nexport const getRemoveAllMarkup = (\n  key = removeAllSpecId,\n  specId = removeAllSpecId,\n  text = removeAllText\n) => (\n  <div key={key} data-spec={specId}>\n    {text}\n  </div>\n);\n\nexport const getContentMarkup = (\n  { type, groups }: ChangeGroups,\n  endpoints?: Endpoints\n): JSX.Element[] => {\n  const content = [];\n\n  if (type === Types.remove_contact_groups && (!groups || !groups.length)) {\n    content.push(getRemoveAllMarkup());\n  } else {\n    return renderAssetList(\n      groups.map(group => {\n        return {\n          id: group.uuid,\n          name: group.name,\n          type: AssetType.Group\n        };\n      }),\n      MAX_TO_SHOW,\n      endpoints!\n    );\n  }\n\n  return content;\n};\n\nexport const getChangeGroupsMarkup = (\n  action: ChangeGroups,\n  endpoints?: Endpoints,\n  specId = contentSpecId\n) => <div data-spec={specId}>{getContentMarkup(action, endpoints)}</div>;\n\nconst ChangeGroupsComp: React.SFC<ChangeGroups> = (props: any, context: any): JSX.Element => {\n  return getChangeGroupsMarkup(props, context.config.endpoints);\n};\n\nChangeGroupsComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default ChangeGroupsComp;\n","import classNames from 'classnames/bind';\nimport { FormElementProps } from 'components/form/FormElement';\nimport * as React from 'react';\nimport { isRealValue, renderIf } from 'utils';\n\nimport styles from './CheckboxElement.module.scss';\n\nexport interface CheckboxElementProps extends FormElementProps {\n  checked: boolean;\n  title?: string;\n  description?: string;\n  labelClassName?: string;\n  checkboxClassName?: string;\n  onChange?(checked: boolean): void;\n}\n\ninterface CheckboxState {\n  checked: boolean;\n}\n\nexport const boxIco = 'fe-square';\nexport const checkedBoxIco = 'fe-check-square';\n\nexport const checkboxSpecId = 'checkbox';\nexport const titleSpecId = 'title';\nexport const descSpecId = 'description';\n\nconst cx: any = classNames.bind(styles);\n\nexport default class CheckboxElement extends React.Component<CheckboxElementProps, CheckboxState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      checked: this.props.checked\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  private handleChange(event: React.MouseEvent): void {\n    // this null check only for testing, remove after switching to RTL\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    this.setState({ checked: !this.state.checked }, () => {\n      if (this.props.onChange) {\n        this.props.onChange(this.state.checked);\n      }\n    });\n  }\n\n  /* istanbul ignore next */\n  public validate(): boolean {\n    return true;\n  }\n\n  public render(): JSX.Element {\n    const checkboxIcon = this.state.checked ? checkedBoxIco : boxIco;\n    return (\n      <label className={cx(styles.label, this.props.labelClassName)} onClick={this.handleChange}>\n        <span\n          data-spec={checkboxSpecId}\n          className={cx(checkboxIcon, this.props.checkboxClassName)}\n        />\n        {renderIf(isRealValue(this.props.title))(\n          <div data-spec={titleSpecId} className={styles.title}>\n            {this.props.title}\n          </div>\n        )}\n        {renderIf(isRealValue(this.props.description))(\n          <div\n            data-spec={descSpecId}\n            className={this.props.title ? styles.description : styles.description_solo}\n          >\n            {this.props.description}\n          </div>\n        )}\n      </label>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport {\n  ChangeGroupsFormState,\n  excludeDynamicGroups\n} from 'components/flow/actions/changegroups/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { ChangeGroups } from 'flowTypes';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { mergeForm } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\nimport { renderIf } from 'utils';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport styles from './RemoveGroupsForm.module.scss';\nimport i18n from 'config/i18n';\nimport { renderIssues } from '../../helpers';\n\nexport const LABEL = i18n.t(\n  'forms.remove_groups_summary',\n  'Select the groups to remove the contact from.'\n);\nexport const NOT_FOUND = i18n.t('errors.group_not_found', 'Enter the name of an existing group');\nexport const PLACEHOLDER = i18n.t(\n  'forms.remove_groups_placeholder',\n  'Enter the name of an existing group'\n);\nexport const REMOVE_FROM_ALL = i18n.t('forms.remove_from_all_label', 'Remove from all');\nexport const REMOVE_FROM_ALL_DESC = i18n.t(\n  'forms.remove_from_all_summary',\n  \"Remove the active contact from all groups they're a member of.\"\n);\n\nexport const labelSpecId = 'label';\nexport const fieldContainerSpecId = 'field-container';\n\nexport default class RemoveGroupsForm extends React.Component<\n  ActionFormProps,\n  ChangeGroupsFormState\n> {\n  public static contextTypes = {\n    assetService: fakePropType\n  };\n\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings) as ChangeGroupsFormState;\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleSave(): void {\n    const valid = this.handleGroupsChanged(this.state.groups.value!, true);\n    if (valid) {\n      const newAction = stateToAction(this.props.nodeSettings, this.state);\n      this.props.updateAction(newAction as ChangeGroups);\n      this.props.onClose(false);\n    }\n  }\n\n  private handleUpdate(\n    keys: { groups?: Asset[]; removeAll?: boolean },\n    submitting: boolean = false\n  ): boolean {\n    const updates: Partial<ChangeGroupsFormState> = {};\n\n    // we only require groups if removeAll isn't checked\n    let groupValidators = this.state.removeAll ? [] : [shouldRequireIf(submitting)];\n\n    if (keys.hasOwnProperty('removeAll')) {\n      updates.removeAll = keys.removeAll;\n      if (keys.removeAll) {\n        groupValidators = [];\n      }\n    }\n\n    if (keys.hasOwnProperty('groups')) {\n      updates.groups = validate(i18n.t('forms.groups', 'Groups'), keys.groups!, groupValidators);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleGroupsChanged(groups: Asset[], submitting: boolean = false): boolean {\n    return this.handleUpdate({ groups }, submitting);\n  }\n\n  public handleRemoveAllUpdate(removeAll: boolean): boolean {\n    return this.handleUpdate({ removeAll });\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n\n        {renderIf(!this.state.removeAll)(\n          <div>\n            <p data-spec={labelSpecId}>{LABEL}</p>\n            <AssetSelector\n              name={i18n.t('forms.groups', 'Groups')}\n              assets={this.props.assetStore.groups}\n              entry={this.state.groups}\n              shouldExclude={excludeDynamicGroups}\n              searchable={true}\n              onChange={this.handleGroupsChanged}\n              multi={true}\n            />\n          </div>\n        )}\n\n        <CheckboxElement\n          name={REMOVE_FROM_ALL}\n          title={REMOVE_FROM_ALL}\n          labelClassName={this.state.removeAll ? '' : styles.checkbox}\n          checked={this.state.removeAll!}\n          description={REMOVE_FROM_ALL_DESC}\n          onChange={this.handleRemoveAllUpdate}\n        />\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import {\n  ChangeGroupsFormState,\n  mapAssetsToGroups,\n  mapGroupsToAssets\n} from 'components/flow/actions/changegroups/helpers';\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { Types } from 'config/interfaces';\nimport { RemoveFromGroups } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): ChangeGroupsFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.remove_contact_groups) {\n    const action = settings.originalAction as RemoveFromGroups;\n\n    const groups = action.groups || [];\n    return {\n      groups: { value: mapGroupsToAssets(groups) },\n      removeAll: groups.length === 0 || action.all_groups,\n      valid: true\n    };\n  }\n\n  return {\n    groups: { value: null },\n    removeAll: false,\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: ChangeGroupsFormState\n): RemoveFromGroups => {\n  return {\n    type: Types.remove_contact_groups,\n    groups: state.removeAll ? [] : mapAssetsToGroups(state.groups.value),\n    all_groups: !!state.removeAll,\n    uuid: getActionUUID(settings, Types.remove_contact_groups)\n  };\n};\n","import { Type, Types } from 'config/interfaces';\nimport { getType, getTypeConfig } from 'config/typeConfigs';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { Asset } from 'store/flowContext';\nimport { FlowIssue } from 'flowTypes';\n\nexport const determineTypeConfig = (nodeSettings: NodeEditorSettings): Type => {\n  const renderNode = nodeSettings.originalNode;\n  const node = renderNode && renderNode.node;\n\n  if (nodeSettings.originalAction && nodeSettings.originalAction.type) {\n    return getTypeConfig(nodeSettings.originalAction.type);\n  } else if (node && node.actions && node.actions.length > 0) {\n    return getTypeConfig(node.actions[node.actions.length - 1].type);\n  } else {\n    try {\n      const type = getType(renderNode);\n      const config = getTypeConfig(type);\n      if (config.type !== Types.missing) {\n        return config;\n      }\n      // tslint:disable-next-line:no-empty\n    } catch (Error) {}\n  }\n\n  // Account for ghost nodes\n  if (node && node.router) {\n    return getTypeConfig(node.router.type);\n  }\n\n  throw new Error(`Couldn't determine type config for: ${node.uuid}`);\n};\n\nexport const hasIssues = (issues: FlowIssue[], translating: boolean, language: Asset): boolean => {\n  if (!issues || issues.length === 0) {\n    return false;\n  }\n\n  if (!translating) {\n    return !!issues.find((issue: FlowIssue) => !issue.language);\n  } else {\n    return !!issues.find((issue: FlowIssue) => issue.language === language.id);\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport styles from 'components/flow/actions/action/Action.module.scss';\nimport { initializeLocalizedKeyForm } from 'components/flow/actions/localization/helpers';\nimport { determineTypeConfig } from 'components/flow/helpers';\nimport { LocalizationFormProps } from 'components/flow/props';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport i18n from 'config/i18n';\nimport { renderIssues } from '../helpers';\n\nexport interface KeyLocalizationFormState extends FormState {\n  keyValues: { [key: string]: StringEntry };\n}\n\nexport default class KeyLocalizationForm extends React.Component<\n  LocalizationFormProps,\n  KeyLocalizationFormState\n> {\n  constructor(props: LocalizationFormProps) {\n    super(props);\n    this.state = initializeLocalizedKeyForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/, /^on/]\n    });\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  public handleKeyUpdate(text: string, name: string): boolean {\n    const keyValues = { ...this.state.keyValues };\n    keyValues[name.toLowerCase()] = { value: text };\n    this.setState({ keyValues });\n    return true;\n  }\n\n  private handleSave(): void {\n    const translations: { [key: string]: string } = {};\n\n    Object.keys(this.state.keyValues).forEach((key: string) => {\n      const value = this.state.keyValues[key].value;\n      if (value) {\n        translations[key] = value;\n      } else {\n        delete translations[key];\n      }\n    });\n\n    this.props.updateLocalizations(this.props.language.id, [\n      {\n        uuid: this.props.nodeSettings.originalAction!.uuid,\n        translations\n      }\n    ]);\n\n    // notify our modal we are done\n    this.props.onClose(false);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\n    const tabs: Tab[] = [];\n\n    let base: JSX.Element;\n\n    const translation = i18n.t('forms.translation', 'Translation');\n\n    typeConfig.localizeableKeys.forEach((key: string) => {\n      const name = key[0].toUpperCase() + key.slice(1);\n\n      const form = (\n        <div key={`localize_form_${key}`}>\n          <div data-spec=\"translation-container\">\n            <div data-spec=\"text-to-translate\" className={styles.translate_from}>\n              {(this.props.nodeSettings.originalAction as any)[key]}\n            </div>\n          </div>\n          <TextInputElement\n            name={name}\n            showLabel={false}\n            onChange={this.handleKeyUpdate}\n            entry={this.state.keyValues[key]}\n            placeholder={`${this.props.language.name} ${translation}`}\n            autocomplete={true}\n            focus={true}\n            textarea={true}\n          />\n        </div>\n      );\n\n      if (!base) {\n        base = form;\n      } else {\n        const translation = i18n.t('forms.translation', 'Translation');\n        tabs.push({\n          name: name + ' ' + translation,\n          body: form,\n          checked: !!this.state.keyValues[key].value\n        });\n      }\n    });\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        {base}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { KeyLocalizationFormState } from 'components/flow/actions/localization/KeyLocalizationForm';\nimport { MsgLocalizationFormState } from 'components/flow/actions/localization/MsgLocalizationForm';\nimport { Types } from 'config/interfaces';\nimport { getTypeConfig } from 'config/typeConfigs';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { SendMsg, MsgTemplating, SayMsg } from 'flowTypes';\n\nexport const initializeLocalizedKeyForm = (\n  settings: NodeEditorSettings\n): KeyLocalizationFormState => {\n  const keyValues: { [key: string]: StringEntry } = {};\n  const localized = settings.localizations[0];\n  const action = localized.getObject() as any;\n\n  const keys = settings.originalAction\n    ? getTypeConfig(settings.originalAction.type).localizeableKeys || []\n    : [];\n  keys.forEach((key: string) => {\n    keyValues[key] = { value: key in localized.localizedKeys ? action[key] : '' };\n  });\n\n  return {\n    keyValues,\n    valid: true\n  };\n};\n\nexport const initializeLocalizedForm = (settings: NodeEditorSettings): MsgLocalizationFormState => {\n  const state: MsgLocalizationFormState = {\n    message: { value: '' },\n    quickReplies: { value: [] },\n    templateVariables: [],\n    templating: null,\n    audio: { value: null },\n    valid: true\n  };\n\n  // check if our form should use a localized action\n  if (\n    settings.originalAction &&\n    (settings.originalAction.type === Types.send_msg ||\n      settings.originalAction.type === Types.say_msg) &&\n    settings.localizations &&\n    settings.localizations.length > 0\n  ) {\n    if (settings.originalAction && (settings.originalAction as any).templating) {\n      state.templating = (settings.originalAction as any).templating;\n      state.templateVariables = state.templating.variables.map((value: string) => {\n        return {\n          value: ''\n        };\n      });\n    }\n\n    for (const localized of settings.localizations) {\n      if (localized.isLocalized()) {\n        const localizedObject = localized.getObject() as any;\n\n        if (localizedObject.text) {\n          const action = localizedObject as (SendMsg & SayMsg);\n          state.message.value = 'text' in localized.localizedKeys ? action.text : '';\n          state.audio.value = 'audio_url' in localized.localizedKeys ? action.audio_url : null;\n          state.quickReplies.value =\n            'quick_replies' in localized.localizedKeys ? action.quick_replies || [] : [];\n          state.valid = true;\n        }\n\n        if (localizedObject.variables) {\n          const templating = localizedObject as MsgTemplating;\n          state.templateVariables = templating.variables.map((value: string) => {\n            return {\n              value: 'variables' in localized.localizedKeys ? value : ''\n            };\n          });\n          state.valid = true;\n        }\n      }\n    }\n  }\n  return state;\n};\n","import * as React from 'react';\n\nimport styles from './Pill.module.scss';\n\nexport interface PillProps {\n  advanced?: boolean;\n  onClick?(event: React.MouseEvent<HTMLDivElement>): void;\n  text: string;\n  maxLength?: number;\n  icon?: string;\n  large?: boolean;\n  style?: React.CSSProperties;\n}\n\nconst Pill: React.SFC<PillProps> = (props: PillProps): JSX.Element => {\n  let text = props.text;\n\n  if (props.text.startsWith('@')) {\n    text = '@(exp)';\n  } else if (props.maxLength && text.length > props.maxLength) {\n    text = props.text.substring(0, props.maxLength) + '...';\n  }\n\n  const pillStyles = [styles.pill];\n\n  if (props.large) {\n    pillStyles.push(styles.large);\n  }\n\n  if (props.onClick) {\n    pillStyles.push(styles.clickable);\n  }\n\n  return (\n    <div\n      style={props.style}\n      data-advanced={props.advanced}\n      onClick={props.onClick}\n      className={pillStyles.join(' ')}\n    >\n      {text}\n      {props.icon ? (\n        <span data-advanced={props.advanced} className={styles.icon + ' ' + props.icon} />\n      ) : null}\n    </div>\n  );\n};\n\nexport default Pill;\n","import { react as bindCallbacks } from 'auto-bind';\nimport TextInputElement, { HTMLTextElement } from 'components/form/textinput/TextInputElement';\nimport Pill from 'components/pill/Pill';\nimport * as React from 'react';\nimport { StringArrayEntry, StringEntry } from 'store/nodeEditor';\nimport { Empty, validate } from 'store/validators';\n\nimport styles from './MultiChoice.module.scss';\n\nexport interface MultiChoiceInputProps {\n  name: string;\n  items: StringArrayEntry;\n  entry?: StringEntry;\n  onRemoved: (item: string) => void;\n  onItemAdded: (item: string) => boolean;\n  onEntryChanged?: (entry: StringEntry) => void;\n  helpText?: JSX.Element;\n}\n\ninterface MultiChoiceInputState {\n  currentInput: StringEntry;\n}\n\nexport default class MultiChoiceInput extends React.Component<\n  MultiChoiceInputProps,\n  MultiChoiceInputState\n> {\n  constructor(props: MultiChoiceInputProps) {\n    super(props);\n\n    if (this.props.entry) {\n      this.state = {\n        currentInput: this.props.entry\n      };\n    } else {\n      this.state = {\n        currentInput: { value: '' }\n      };\n    }\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleInputChanged(value: string): void {\n    this.setState({ currentInput: { value } });\n    if (this.props.onEntryChanged) {\n      this.props.onEntryChanged({ value });\n    }\n  }\n\n  public handleAddItem(event: React.KeyboardEvent<HTMLTextElement>): boolean {\n    // hack: we want to evaluate after the state is updated for validation errors\n    window.setTimeout(() => {\n      if (this.state.currentInput.value.trim().length > 0) {\n        const newItem = this.state.currentInput.value.trim();\n\n        if (this.props.onItemAdded(newItem)) {\n          this.setState({ currentInput: { value: '' } });\n        }\n\n        if (this.props.onEntryChanged) {\n          this.props.onEntryChanged({ value: '' });\n        }\n      }\n    }, 0);\n    return true;\n  }\n\n  private handleValidateEmpty(): void {\n    const currentInput = validate(this.props.name, this.state.currentInput.value, [Empty]);\n    this.setState({ currentInput }, () => {\n      if (this.props.onEntryChanged) {\n        this.props.onEntryChanged(currentInput);\n      }\n    });\n  }\n\n  private getChosenItems(): JSX.Element {\n    if (this.props.items.value.length > 0) {\n      return (\n        <div className={styles.chosen}>\n          {this.props.items.value.map((item: string) => (\n            <div key={`item_${item}`} className={styles.item}>\n              <Pill\n                icon=\"fe-x\"\n                text={' ' + item}\n                large={true}\n                onClick={() => {\n                  this.props.onRemoved(item);\n                }}\n              />\n            </div>\n          ))}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  public render(): JSX.Element {\n    return (\n      <>\n        {this.getChosenItems()}\n        {this.props.helpText ? <p>{this.props.helpText}</p> : <p />}\n        <TextInputElement\n          name={this.props.name}\n          placeholder={this.props.name}\n          showLabel={false}\n          onChange={this.handleInputChanged}\n          entry={this.state.currentInput}\n          autocomplete={true}\n          focus={true}\n          onBlur={this.handleValidateEmpty}\n          onEnter={this.handleAddItem}\n        />\n      </>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport axios from 'axios';\nimport * as React from 'react';\nimport Button, { ButtonTypes } from 'components/button/Button';\nimport { getCookie } from 'external';\n\nexport interface UploadButtonState {}\n\nexport interface UploadButtonProps {\n  icon: string;\n  uploadText: string;\n  removeText: string;\n  url: string;\n  endpoint: string;\n  onUploadChanged: (url: string) => void;\n}\n\nexport default class UploadButton extends React.Component<UploadButtonProps, UploadButtonState> {\n  private filePicker: any;\n\n  constructor(props: UploadButtonProps) {\n    super(props);\n    this.state = {};\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleRemoveUpload(): void {\n    this.props.onUploadChanged(null);\n  }\n\n  private handleUploadFile(files: FileList): void {\n    const data = new FormData();\n    data.append('file', files[0]);\n\n    // if we have a csrf in our cookie, pass it along as a header\n    const csrf = getCookie('csrftoken');\n    const headers = csrf ? { 'X-CSRFToken': csrf } : {};\n\n    axios\n      .post(this.props.endpoint, data, { headers })\n      .then(response => {\n        this.props.onUploadChanged(response.data.url);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  public render(): JSX.Element {\n    return (\n      <>\n        <input\n          style={{\n            display: 'none'\n          }}\n          ref={ele => {\n            this.filePicker = ele;\n          }}\n          type=\"file\"\n          onChange={e => this.handleUploadFile(e.target.files)}\n        />\n        {this.props.url ? (\n          <Button\n            iconName=\"fe-trash\"\n            name={this.props.removeText}\n            topSpacing={true}\n            onClick={this.handleRemoveUpload}\n            type={ButtonTypes.tertiary}\n          />\n        ) : (\n          <Button\n            iconName={this.props.icon}\n            name={this.props.uploadText}\n            topSpacing={true}\n            onClick={() => {\n              this.filePicker.click();\n            }}\n            type={ButtonTypes.tertiary}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport styles from 'components/flow/actions/action/Action.module.scss';\nimport { determineTypeConfig } from 'components/flow/helpers';\nimport { LocalizationFormProps } from 'components/flow/props';\nimport MultiChoiceInput from 'components/form/multichoice/MultiChoice';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport UploadButton from 'components/uploadbutton/UploadButton';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { SendMsg, MsgTemplating } from 'flowTypes';\nimport * as React from 'react';\nimport mutate from 'immutability-helper';\nimport { FormState, mergeForm, StringArrayEntry, StringEntry } from 'store/nodeEditor';\nimport { MaxOfTenItems, validate } from 'store/validators';\n\nimport { initializeLocalizedForm } from './helpers';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { range } from 'utils';\nimport { renderIssues } from '../helpers';\n\nexport interface MsgLocalizationFormState extends FormState {\n  message: StringEntry;\n  quickReplies: StringArrayEntry;\n  audio: StringEntry;\n  templateVariables: StringEntry[];\n  templating: MsgTemplating;\n}\n\nexport default class MsgLocalizationForm extends React.Component<\n  LocalizationFormProps,\n  MsgLocalizationFormState\n> {\n  constructor(props: LocalizationFormProps) {\n    super(props);\n    this.state = initializeLocalizedForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/, /^on/]\n    });\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  public handleMessageUpdate(text: string): boolean {\n    return this.handleUpdate({ text });\n  }\n\n  public handleQuickRepliesUpdate(quickReplies: string[]): boolean {\n    return this.handleUpdate({ quickReplies });\n  }\n\n  private handleAudioChanged(url: string): void {\n    this.handleUpdate({ audio: url });\n  }\n\n  private handleUpdate(keys: {\n    text?: string;\n    sendAll?: boolean;\n    quickReplies?: string[];\n    audio?: string;\n  }): boolean {\n    const updates: Partial<MsgLocalizationFormState> = {};\n\n    if (keys.hasOwnProperty('text')) {\n      updates.message = validate(i18n.t('forms.message', 'Message'), keys.text!, []);\n    }\n\n    if (keys.hasOwnProperty('quickReplies')) {\n      updates.quickReplies = validate(\n        i18n.t('forms.quick_replies', 'Quick Replies'),\n        keys.quickReplies!,\n        [MaxOfTenItems]\n      );\n    }\n\n    if (keys.hasOwnProperty('audio')) {\n      updates.audio! = { value: keys.audio! };\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    const { message: text, quickReplies, audio, templateVariables } = this.state;\n\n    // make sure we are valid for saving, only quick replies can be invalid\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\n    const valid =\n      typeConfig.localizeableKeys!.indexOf('quick_replies') > -1\n        ? this.handleQuickRepliesUpdate(this.state.quickReplies.value)\n        : true;\n\n    if (valid) {\n      const translations: any = {};\n      if (text.value) {\n        translations.text = text.value;\n      }\n\n      if (quickReplies.value && quickReplies.value.length > 0) {\n        translations.quick_replies = quickReplies.value;\n      }\n\n      if (audio.value) {\n        translations.audio_url = audio.value;\n      }\n\n      const localizations = [\n        {\n          uuid: this.props.nodeSettings.originalAction!.uuid,\n          translations\n        }\n      ];\n\n      // if we have template variables, they show up on their own key\n      const hasTemplateVariables = templateVariables.find(\n        (entry: StringEntry) => entry.value.length > 0\n      );\n      if (hasTemplateVariables) {\n        localizations.push({\n          uuid: this.state.templating.uuid,\n          translations: { variables: templateVariables.map((entry: StringEntry) => entry.value) }\n        });\n      }\n\n      this.props.updateLocalizations(this.props.language.id, localizations);\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleAddQuickReply(newQuickReply: string): boolean {\n    const newReplies = [...this.state.quickReplies.value];\n    if (newReplies.length >= 10) {\n      return false;\n    }\n\n    // we don't allow two quick replies with the same name\n    const isNew = !newReplies.find(\n      (reply: string) => reply.toLowerCase() === newQuickReply.toLowerCase()\n    );\n\n    if (isNew) {\n      newReplies.push(newQuickReply);\n      this.setState({\n        quickReplies: { value: newReplies }\n      });\n      return true;\n    }\n\n    return false;\n  }\n\n  private handleRemoveQuickReply(toRemove: string): void {\n    this.setState({\n      quickReplies: {\n        value: this.state.quickReplies.value.filter((reply: string) => reply !== toRemove)\n      }\n    });\n  }\n\n  private handleTemplateVariableChanged(updatedText: string, num: number): void {\n    const entry = validate(`Variable ${num + 1}`, updatedText, []);\n\n    const templateVariables = mutate(this.state.templateVariables, {\n      $merge: { [num]: entry }\n    }) as StringEntry[];\n\n    this.setState({ templateVariables });\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\n    const tabs: Tab[] = [];\n\n    if (\n      this.state.templating &&\n      typeConfig.localizeableKeys!.indexOf('templating.variables') > -1\n    ) {\n      const hasLocalizedValue = !!this.state.templateVariables.find(\n        (entry: StringEntry) => entry.value.length > 0\n      );\n\n      const variable = i18n.t('forms.variable', 'Variable');\n\n      tabs.push({\n        name: 'WhatsApp',\n        body: (\n          <>\n            <p>\n              {i18n.t(\n                'forms.whatsapp_warning',\n                'Sending messages over a WhatsApp channel requires that a template be used if you have not received a message from a contact in the last 24 hours. Setting a template to use over WhatsApp is especially important for the first message in your flow.'\n              )}\n            </p>\n            {this.state.templating && this.state.templating.variables.length > 0 ? (\n              <>\n                {range(0, this.state.templating.variables.length).map((num: number) => {\n                  const entry = this.state.templateVariables[num] || { value: '' };\n                  return (\n                    <div className={styles.variable} key={'tr_arg_' + num}>\n                      <TextInputElement\n                        name={`${i18n.t('forms.variable', 'Variable')} ${num + 1}`}\n                        showLabel={false}\n                        placeholder={`${this.props.language.name} ${variable} ${num + 1}`}\n                        onChange={(updatedText: string) => {\n                          this.handleTemplateVariableChanged(updatedText, num);\n                        }}\n                        entry={entry}\n                        autocomplete={true}\n                      />\n                    </div>\n                  );\n                })}\n              </>\n            ) : null}\n          </>\n        ),\n        checked: hasLocalizedValue\n      });\n    }\n\n    if (typeConfig.localizeableKeys!.indexOf('quick_replies') > -1) {\n      tabs.push({\n        name: 'Quick Replies',\n        body: (\n          <>\n            <MultiChoiceInput\n              name={i18n.t('forms.quick_reply', 'Quick Reply')}\n              helpText={\n                <Trans\n                  i18nKey=\"forms.localized_quick_replies\"\n                  values={{ language: this.props.language.name }}\n                >\n                  Add a new [[language]] Quick Reply and press enter.\n                </Trans>\n              }\n              items={this.state.quickReplies}\n              onRemoved={this.handleRemoveQuickReply}\n              onItemAdded={this.handleAddQuickReply}\n            />\n          </>\n        ),\n        checked: this.state.quickReplies.value.length > 0\n      });\n    }\n\n    let audioButton: JSX.Element | null = null;\n    if (typeConfig.localizeableKeys!.indexOf('audio_url') > 0) {\n      audioButton = (\n        <UploadButton\n          icon=\"fe-mic\"\n          uploadText=\"Upload Recording\"\n          removeText=\"Remove Recording\"\n          url={this.state.audio.value}\n          endpoint={this.context.config.endpoints.attachments}\n          onUploadChanged={this.handleAudioChanged}\n        />\n      );\n    }\n\n    const translation = i18n.t('forms.translation', 'Translation');\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        <div data-spec=\"translation-container\">\n          <div data-spec=\"text-to-translate\" className={styles.translate_from}>\n            {(this.props.nodeSettings.originalAction as SendMsg).text}\n          </div>\n        </div>\n\n        <TextInputElement\n          name={i18n.t('forms.message', 'Message')}\n          showLabel={false}\n          onChange={this.handleMessageUpdate}\n          entry={this.state.message}\n          placeholder={`${this.props.language.name} ${translation}`}\n          autocomplete={true}\n          focus={true}\n          textarea={true}\n        />\n\n        {audioButton}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Action } from 'flowTypes';\n\n/* istanbul ignore next */\nconst MissingComp: React.SFC<Action> = ({ type }): JSX.Element => {\n  return <div className=\"placeholder\">No implementation yet for {type}</div>;\n};\n\nexport default MissingComp;\n","import * as React from 'react';\nimport { PlayAudio } from 'flowTypes';\n\nconst PlayAudioComp: React.SFC<PlayAudio> = (action: PlayAudio): JSX.Element => {\n  return <div>{action.audio_url}</div>;\n};\n\nexport default PlayAudioComp;\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { validate, Required } from 'store/validators';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { renderIssues } from '../helpers';\n\nexport interface PlayAudioFormState extends FormState {\n  audio: StringEntry;\n}\n\nexport default class PlayAudioForm extends React.Component<ActionFormProps, PlayAudioFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleAudioUpdate(text: string): boolean {\n    const updates: Partial<PlayAudioFormState> = {};\n    updates.audio = validate(i18n.t('forms.recording', 'Recording'), text, [Required]);\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // make sure we validate untouched text fields\n    const valid = this.handleAudioUpdate(this.state.audio.value);\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>{i18n.t('forms.recording_label', 'Previous Recording')}</p>\n        <TextInputElement\n          name={i18n.t('forms.message', 'Message')}\n          showLabel={false}\n          onChange={this.handleAudioUpdate}\n          entry={this.state.audio}\n          autocomplete={true}\n          focus={true}\n          helpText={\n            <Trans i18nKey=\"forms.play_audio_help_text\">\n              Enter a variable that contains a recording the contact has previously recorded. For\n              example, @results.voicemail or @fields.short_bio.\n            </Trans>\n          }\n        />\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { PlayAudioFormState } from 'components/flow/actions/playaudio/PlayAudioForm';\nimport { Types } from 'config/interfaces';\nimport { PlayAudio } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): PlayAudioFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.play_audio) {\n    const action = settings.originalAction as PlayAudio;\n    return {\n      audio: { value: action.audio_url },\n      valid: true\n    };\n  }\n\n  return {\n    audio: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: PlayAudioFormState\n): PlayAudio => ({\n  audio_url: state.audio.value,\n  type: Types.play_audio,\n  uuid: getActionUUID(settings, Types.say_msg)\n});\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\n\nimport styles from './MediaPlayer.module.scss';\n\nexport interface MediaPlayerProps {\n  url: string;\n  triggered?: boolean;\n}\n\ninterface MediaPlayerState {\n  durationSeconds: number;\n  currentSeconds: number;\n  progress: number;\n  playing: boolean;\n}\n\nexport class MediaPlayer extends React.Component<MediaPlayerProps, MediaPlayerState> {\n  private ele: HTMLAudioElement;\n\n  private stroke = 1;\n  private radius = 9;\n\n  private radiusNormalized = this.radius - this.stroke * 2;\n  private circumference = this.radiusNormalized * 2 * Math.PI;\n\n  constructor(props: MediaPlayerProps) {\n    super(props);\n\n    this.state = {\n      durationSeconds: 0,\n      currentSeconds: 0,\n      playing: false,\n      progress: 0\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleTimeUpdate(e: React.SyntheticEvent<HTMLAudioElement>): void {\n    const currentTime = this.ele.currentTime || 0;\n    const duration = this.ele.duration || 0;\n\n    this.setState((prevState: MediaPlayerState) => {\n      if ((this.ele.ended || currentTime === 0) && prevState.playing) {\n        setTimeout(() => {\n          this.setState({ progress: 0, playing: false });\n        }, 500);\n      }\n\n      return {\n        currentSeconds: this.ele.ended ? 0 : currentTime,\n        durationSeconds: duration,\n        playing: currentTime > 0,\n        progress: duration > 0 ? Math.floor((currentTime / duration) * 100) : 0\n      };\n    });\n  }\n\n  public componentDidMount(): void {\n    if (this.props.triggered) {\n      this.handleTogglePlay(null);\n    }\n  }\n\n  private handleTogglePlay(e: React.MouseEvent<HTMLDivElement>): void {\n    if (this.state.playing) {\n      this.ele.pause();\n      this.ele.currentTime = 0;\n    } else {\n      this.ele.play();\n    }\n\n    if (e !== null) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  private handleRef(ref: HTMLAudioElement): any {\n    return (this.ele = ref);\n  }\n\n  public componentDidUpdate(prevProps: MediaPlayerProps): void {\n    if (this.props.url !== prevProps.url) {\n      this.setState({\n        durationSeconds: 0,\n        currentSeconds: 0,\n        playing: false,\n        progress: 0\n      });\n    }\n  }\n\n  public render(): JSX.Element {\n    const progress = this.state.progress || 0;\n    const strokeDashoffset = this.circumference - (progress / 100) * this.circumference;\n\n    return (\n      <div\n        className={styles.player + ' ' + (this.state.playing ? styles.playing : '')}\n        style={{ height: this.radius * 2, width: this.radius * 2 }}\n        onMouseDown={this.handleTogglePlay}\n      >\n        <audio ref={this.handleRef} onTimeUpdate={this.handleTimeUpdate} src={this.props.url} />\n\n        <div className={styles.circles}>\n          <svg height={this.radius * 2} width={this.radius * 2}>\n            <circle\n              className={styles.circle_background}\n              stroke=\"#fff\"\n              fill=\"#fff\"\n              strokeWidth={this.stroke}\n              r={this.radiusNormalized}\n              cx={this.radius}\n              cy={this.radius}\n            />\n            <circle\n              className={styles.circle_background}\n              stroke=\"#ddd\"\n              fill=\"transparent\"\n              strokeWidth={this.stroke}\n              r={this.radiusNormalized}\n              cx={this.radius}\n              cy={this.radius}\n            />\n            <circle\n              className={styles.circle_foreground}\n              stroke=\"cornflowerblue\"\n              fill=\"transparent\"\n              strokeWidth={this.stroke}\n              strokeDasharray={this.circumference + ' ' + this.circumference}\n              style={{ strokeDashoffset }}\n              r={this.radiusNormalized}\n              cx={this.radius}\n              cy={this.radius}\n            />\n          </svg>\n        </div>\n        <div className={styles.button + ' ' + (this.state.playing ? 'fe-stop' : 'fe-play_arrow')} />\n      </div>\n    );\n  }\n}\n","import { MediaPlayer } from 'components/mediaplayer/MediaPlayer';\nimport { SayMsg } from 'flowTypes';\nimport * as React from 'react';\n\nimport styles from './SayMsg.module.scss';\nimport i18n from 'config/i18n';\n\nexport const PLACEHOLDER = i18n.t('actions.say_msg.placeholder', 'Send a message to the contact');\n\nconst SayMsgComp: React.SFC<SayMsg> = (action: SayMsg): JSX.Element => {\n  if (action.text) {\n    return (\n      <>\n        <div className={styles.text}>{action.text}</div>\n\n        {action.audio_url ? (\n          <div className={styles.recording}>\n            <MediaPlayer url={action.audio_url} />\n          </div>\n        ) : null}\n      </>\n    );\n  }\n  return <div className=\"placeholder\">{PLACEHOLDER}</div>;\n};\n\nexport default SayMsgComp;\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport UploadButton from 'components/uploadbutton/UploadButton';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport i18n from 'config/i18n';\nimport { renderIssues } from '../helpers';\n\nexport interface SayMsgFormState extends FormState {\n  message: StringEntry;\n  audio: StringEntry;\n}\n\nexport default class SayMsgForm extends React.Component<ActionFormProps, SayMsgFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  private handleUpdate(keys: { text?: string }, submitting = false): boolean {\n    const updates: Partial<SayMsgFormState> = {};\n\n    if (keys.hasOwnProperty('text')) {\n      updates.message = validate(i18n.t('forms.message', 'Message'), keys.text!, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleMessageUpdate(text: string, name: string, submitting = false): boolean {\n    return this.handleUpdate({ text }, submitting);\n  }\n\n  private handleSave(): void {\n    // make sure we validate untouched text fields\n    const valid = this.handleUpdate({ text: this.state.message.value }, true);\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleUploadChanged(url: string): void {\n    this.setState({ audio: { value: url } });\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <TextInputElement\n          name={i18n.t('forms.message', 'Message')}\n          showLabel={false}\n          onChange={this.handleMessageUpdate}\n          entry={this.state.message}\n          autocomplete={true}\n          focus={true}\n          textarea={true}\n        />\n\n        <UploadButton\n          icon=\"fe-mic\"\n          uploadText=\"Upload Recording\"\n          removeText=\"Remove Recording\"\n          url={this.state.audio.value}\n          endpoint={this.context.config.endpoints.attachments}\n          onUploadChanged={this.handleUploadChanged}\n        />\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { SayMsgFormState } from 'components/flow/actions/saymsg/SayMsgForm';\nimport { Types } from 'config/interfaces';\nimport { SayMsg } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): SayMsgFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.say_msg) {\n    const action = settings.originalAction as SayMsg;\n    return {\n      message: { value: action.text },\n      audio: { value: action.audio_url },\n      valid: true\n    };\n  }\n\n  return {\n    message: { value: '' },\n    audio: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (settings: NodeEditorSettings, state: SayMsgFormState): SayMsg => ({\n  text: state.message.value,\n  audio_url: state.audio.value,\n  type: Types.say_msg,\n  uuid: getActionUUID(settings, Types.say_msg)\n});\n","import { getRecipients, renderAssetList } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { BroadcastMsg } from 'flowTypes';\nimport * as React from 'react';\n\nimport styles from './SendBroadcast.module.scss';\nimport i18n from 'config/i18n';\n\nexport const PLACEHOLDER = i18n.t(\n  'actions.send_broadcast.placeholder',\n  'Send a message to the contact'\n);\n\nconst MAX_TO_SHOW = 5;\n\nconst SendBroadcastComp: React.SFC<BroadcastMsg> = (\n  action: BroadcastMsg,\n  context: any\n): JSX.Element => {\n  const assets = getRecipients(action);\n  if (action.text) {\n    return (\n      <div className={styles.node}>\n        <div className={styles.to}>\n          {renderAssetList(assets, MAX_TO_SHOW, context.config.endpoints)}\n        </div>\n        <div className={styles.message}>\n          {action.text.split(/\\r?\\n/).map((line: string, idx: number) => (\n            <div key={action.uuid + idx} className={styles.line}>\n              {line}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n  return <div className=\"placeholder\">{PLACEHOLDER}</div>;\n};\n\nSendBroadcastComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default SendBroadcastComp;\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { initializeForm, stateToAction } from 'components/flow/actions/sendbroadcast/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TextInputElement, { Count } from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { AssetArrayEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\nimport i18n from 'config/i18n';\nimport { renderIssues } from '../helpers';\n\nexport interface SendBroadcastFormState extends FormState {\n  message: StringEntry;\n  recipients: AssetArrayEntry;\n}\n\n// Note: action prop is only used for its uuid (see onValid)\nexport default class SendBroadcastForm extends React.Component<\n  ActionFormProps,\n  SendBroadcastFormState\n> {\n  public static contextTypes = {\n    endpoints: fakePropType,\n    assetService: fakePropType\n  };\n\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = initializeForm(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleRecipientsChanged(recipients: Asset[]): boolean {\n    return this.handleUpdate({ recipients });\n  }\n\n  public handleMessageUpdate(text: string): boolean {\n    return this.handleUpdate({ text });\n  }\n\n  private handleUpdate(keys: { text?: string; recipients?: Asset[] }, submitting = false): boolean {\n    const updates: Partial<SendBroadcastFormState> = {};\n\n    if (keys.hasOwnProperty('recipients')) {\n      updates.recipients = validate(i18n.t('forms.recipients', 'Recipients'), keys.recipients!, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('text')) {\n      updates.message = validate(i18n.t('forms.message', 'Message'), keys.text!, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // validate in case they never updated an empty field\n    const valid = this.handleUpdate(\n      {\n        text: this.state.message.value,\n        recipients: this.state.recipients.value!\n      },\n      true\n    );\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <AssetSelector\n          name={i18n.t('forms.recipients', 'Recipients')}\n          assets={this.props.assetStore.recipients}\n          entry={this.state.recipients}\n          completion={{ assetStore: this.props.assetStore, schema: this.props.completionSchema }}\n          searchable={true}\n          multi={true}\n          onChange={this.handleRecipientsChanged}\n        />\n        <p />\n        <TextInputElement\n          name={i18n.t('forms.message', 'Message')}\n          showLabel={false}\n          count={Count.SMS}\n          onChange={this.handleMessageUpdate}\n          entry={this.state.message}\n          autocomplete={true}\n          focus={true}\n          textarea={true}\n        />\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import {\n  getActionUUID,\n  getExpressions,\n  getRecipients,\n  getRecipientsByAsset\n} from 'components/flow/actions/helpers';\nimport { SendBroadcastFormState } from 'components/flow/actions/sendbroadcast/SendBroadcastForm';\nimport { Types } from 'config/interfaces';\nimport { BroadcastMsg } from 'flowTypes';\nimport { AssetType } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): SendBroadcastFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.send_broadcast) {\n    let action = settings.originalAction as BroadcastMsg;\n\n    // check if our form should use a localized action\n    if (settings.localizations && settings.localizations.length > 0) {\n      const localized = settings.localizations[0];\n      if (localized.isLocalized()) {\n        action = settings.localizations[0].getObject() as BroadcastMsg;\n      } else {\n        return {\n          message: { value: '' },\n          recipients: { value: [] },\n          valid: true\n        };\n      }\n    }\n\n    return {\n      message: { value: action.text },\n      recipients: { value: getRecipients(action) },\n      valid: true\n    };\n  }\n\n  return {\n    message: { value: '' },\n    recipients: { value: [] },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  formState: SendBroadcastFormState\n): BroadcastMsg => {\n  return {\n    legacy_vars: getExpressions(formState.recipients.value),\n    contacts: getRecipientsByAsset(formState.recipients.value, AssetType.Contact),\n    groups: getRecipientsByAsset(formState.recipients.value, AssetType.Group),\n    text: formState.message.value,\n    type: Types.send_broadcast,\n    uuid: getActionUUID(settings, Types.send_broadcast)\n  };\n};\n","import * as React from 'react';\nimport { SendEmail } from 'flowTypes';\n\nconst SendEmailComp: React.SFC<SendEmail> = ({ subject }): JSX.Element => <div>{subject}</div>;\n\nexport default SendEmailComp;\n","import { react as bindCallbacks } from 'auto-bind';\nimport FormElement, { FormElementProps } from 'components/form/FormElement';\nimport React from 'react';\nimport { StringArrayEntry } from 'store/nodeEditor';\nimport { getSelectClass } from 'utils';\nimport { tagging } from 'utils/reactselect';\nimport CreatableSelect from 'react-select/creatable';\n\nexport type TagList = Array<{ label: string; value: string }>;\n\nexport interface TaggingElementProps extends FormElementProps {\n  placeholder?: string;\n  prompt: string;\n  createPrompt?: string;\n  onChange?: (values: string[]) => void;\n  onCheckValid: (value: string) => boolean;\n}\n\nexport const tagsToOptions = (tags: StringArrayEntry): TagList => {\n  return tags.value.map(tag => ({ label: tag, value: tag }));\n};\n\nexport const optionsToTags = (tags: TagList): string[] =>\n  tags.map(tag => {\n    return tag.label;\n  });\n\nexport default class TaggingElement extends React.Component<TaggingElementProps> {\n  constructor(props: any) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleUpdateTags(tags: TagList): void {\n    if (this.props.onChange) {\n      this.props.onChange(optionsToTags(tags));\n    }\n  }\n\n  public handleCheckValid(label: string): boolean {\n    if (!label || label.trim().length === 0) {\n      return false;\n    }\n    return this.props.onCheckValid(label);\n  }\n\n  private arrowRenderer(): JSX.Element {\n    return <div />;\n  }\n\n  public render(): JSX.Element {\n    const className: string = getSelectClass((this.props.entry.validationFailures || []).length);\n\n    const tags = tagsToOptions(this.props.entry);\n    return (\n      <FormElement name={this.props.name} entry={this.props.entry}>\n        <CreatableSelect\n          styles={tagging as any}\n          className={className}\n          name={this.props.name}\n          placeholder={this.props.placeholder}\n          value={tags}\n          onChange={this.handleUpdateTags as any}\n          isMulti={true}\n          isSearchable={true}\n          isValidNewOption={this.handleCheckValid}\n          noOptionsMessage={() => this.props.prompt}\n          formatCreateLabel={(input: string) => {\n            return this.props.createPrompt !== undefined\n              ? this.props.createPrompt + input\n              : 'Create new ' + input;\n          }}\n          options={[]}\n        />\n      </FormElement>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport TaggingElement from 'components/form/select/tags/TaggingElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, mergeForm, StringArrayEntry, StringEntry } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport styles from './SendEmailForm.module.scss';\nimport i18n from 'config/i18n';\nimport { renderIssues } from '../helpers';\n\nconst EMAIL_PATTERN = /\\S+@\\S+\\.\\S+/;\n\nexport interface SendEmailFormState extends FormState {\n  recipients: StringArrayEntry;\n  subject: StringEntry;\n  body: StringEntry;\n}\n\nexport default class SendEmailForm extends React.Component<ActionFormProps, SendEmailFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleRecipientsChanged(recipients: string[]): boolean {\n    return this.handleUpdate({ recipients });\n  }\n\n  public handleSubjectChanged(subject: string): boolean {\n    return this.handleUpdate({ subject });\n  }\n\n  public handleBodyChanged(body: string): boolean {\n    return this.handleUpdate({ body });\n  }\n\n  private handleUpdate(\n    keys: { recipients?: string[]; subject?: string; body?: string },\n    submitting = false\n  ): boolean {\n    const updates: Partial<SendEmailFormState> = {};\n\n    if (keys.hasOwnProperty('recipients')) {\n      updates.recipients = validate(i18n.t('forms.recipients', 'Recipients'), keys.recipients!, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('subject')) {\n      updates.subject = validate(i18n.t('forms.subject', 'Subject'), keys.subject!, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('body')) {\n      updates.body = validate(i18n.t('forms.body', 'Body'), keys.body!, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleSave(): void {\n    // validate in case they never updated an empty field\n    const valid = this.handleUpdate(\n      {\n        recipients: this.state.recipients.value,\n        subject: this.state.subject.value,\n        body: this.state.body.value\n      },\n      true\n    );\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public handleCheckValid(value: string): boolean {\n    return EMAIL_PATTERN.test(value) || value.startsWith('@');\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.ele}>\n          <TaggingElement\n            name={i18n.t('forms.email_recipient_name', 'Recipient')}\n            placeholder={i18n.t('forms.email_recipient_placeholder', 'To')}\n            prompt={i18n.t('forms.email_recipient_prompt', 'Enter email address')}\n            onCheckValid={this.handleCheckValid}\n            entry={this.state.recipients}\n            onChange={this.handleRecipientsChanged}\n            createPrompt={''}\n          />\n          <TextInputElement\n            __className={styles.subject}\n            name={i18n.t('forms.subject', 'Subject')}\n            placeholder={i18n.t('forms.subject', 'Subject')}\n            onChange={this.handleSubjectChanged}\n            entry={this.state.subject}\n            autocomplete={true}\n          />\n          <TextInputElement\n            __className={styles.message}\n            name={i18n.t('forms.message', 'Message')}\n            showLabel={false}\n            onChange={this.handleBodyChanged}\n            entry={this.state.body}\n            autocomplete={true}\n            textarea={true}\n          />\n        </div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { SendEmailFormState } from 'components/flow/actions/sendemail/SendEmailForm';\nimport { Types } from 'config/interfaces';\nimport { SendEmail } from 'flowTypes';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): SendEmailFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.send_email) {\n    const action = settings.originalAction as SendEmail;\n    return {\n      body: { value: action.body },\n      subject: { value: action.subject },\n      recipients: { value: action.addresses },\n      valid: true\n    };\n  }\n\n  return {\n    body: { value: '' },\n    subject: { value: '' },\n    recipients: { value: [] },\n    valid: true\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  formState: SendEmailFormState\n): SendEmail => {\n  return {\n    addresses: formState.recipients.value,\n    subject: formState.subject.value,\n    body: formState.body.value,\n    type: Types.send_email,\n    uuid: getActionUUID(settings, Types.send_email)\n  };\n};\n","import Pill from 'components/pill/Pill';\nimport { SendMsg } from 'flowTypes';\nimport * as React from 'react';\n\nimport styles from './SendMsg.module.scss';\nimport i18n from 'config/i18n';\n\nexport const PLACEHOLDER = i18n.t('actions.send_msg.placeholder', 'Send a message to the contact');\n\nconst SendMsgComp: React.SFC<SendMsg> = (action: SendMsg): JSX.Element => {\n  if (action.text) {\n    let replies = null;\n\n    let quickReplies = action.quick_replies || [];\n    if (quickReplies.length > 0) {\n      replies = (\n        <div className={styles.quick_replies}>\n          {quickReplies.map(reply => (\n            <Pill\n              style={{ marginLeft: 4, marginTop: 4 }}\n              maxLength={20}\n              advanced={true}\n              key={action.uuid + reply}\n              text={reply}\n            />\n          ))}\n        </div>\n      );\n    }\n\n    return (\n      <>\n        <div>\n          {action.text.split(/\\r?\\n/).map((line: string, idx: number) => (\n            <div key={action.uuid + idx} className={styles.line}>\n              {line}\n            </div>\n          ))}\n          {action.attachments && action.attachments.length > 0 ? (\n            <div className={`${styles.attachment} fe-paperclip`} />\n          ) : null}\n          {action.templating && action.templating.template ? (\n            <div className={`${styles.whatsapp} fe-whatsapp`} />\n          ) : null}\n          {action.topic ? <div className={`${styles.facebook} fe-facebook`} /> : null}\n        </div>\n        <div className={styles.summary}>{replies}</div>\n      </>\n    );\n  }\n  return <div className=\"placeholder\">{PLACEHOLDER}</div>;\n};\n\nexport default SendMsgComp;\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { getActionUUID } from 'components/flow/actions/helpers';\nimport { Attachment, SendMsgFormState } from 'components/flow/actions/sendmsg/SendMsgForm';\nimport { Types } from 'config/interfaces';\nimport { MsgTemplating, SendMsg } from 'flowTypes';\nimport { AssetStore, AssetType } from 'store/flowContext';\nimport { AssetEntry, NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { createUUID } from 'utils';\n\nexport const TOPIC_OPTIONS: SelectOption[] = [\n  { value: 'event', label: 'Event' },\n  { value: 'account', label: 'Account' },\n  { value: 'purchase', label: 'Purchase' },\n  { value: 'agent', label: 'Agent' }\n];\n\nexport const initializeForm = (\n  settings: NodeEditorSettings,\n  assetStore: AssetStore\n): SendMsgFormState => {\n  let template: AssetEntry = { value: null };\n  let templateVariables: StringEntry[] = [];\n\n  if (settings.originalAction && settings.originalAction.type === Types.send_msg) {\n    const action = settings.originalAction as SendMsg;\n    const attachments: Attachment[] = [];\n    (action.attachments || []).forEach((attachmentString: string) => {\n      const splitPoint = attachmentString.indexOf(':');\n\n      const type = attachmentString.substring(0, splitPoint);\n      const attachment = {\n        type,\n        url: attachmentString.substring(splitPoint + 1),\n        uploaded: type.indexOf('/') > -1\n      };\n\n      attachments.push(attachment);\n    });\n\n    if (action.templating) {\n      const msgTemplate = action.templating.template;\n      template = {\n        value: {\n          id: msgTemplate.uuid,\n          name: msgTemplate.name,\n          type: AssetType.Template\n        }\n      };\n      templateVariables = action.templating.variables.map((value: string) => {\n        return {\n          value\n        };\n      });\n    }\n\n    return {\n      topic: { value: TOPIC_OPTIONS.find(option => option.value === action.topic) },\n      template,\n      templateVariables,\n      attachments,\n      message: { value: action.text },\n      quickReplies: { value: action.quick_replies || [] },\n      quickReplyEntry: { value: '' },\n      sendAll: action.all_urns,\n      valid: true\n    };\n  }\n\n  return {\n    topic: { value: null },\n    template,\n    templateVariables: [],\n    attachments: [],\n    message: { value: '' },\n    quickReplies: { value: [] },\n    quickReplyEntry: { value: '' },\n    sendAll: false,\n    valid: false\n  };\n};\n\nexport const stateToAction = (settings: NodeEditorSettings, state: SendMsgFormState): SendMsg => {\n  const attachments = state.attachments\n    .filter((attachment: Attachment) => attachment.url.trim().length > 0)\n    .map((attachment: Attachment) => `${attachment.type}:${attachment.url}`);\n\n  let templating: MsgTemplating = null;\n\n  if (state.template && state.template.value) {\n    let templatingUUID = createUUID();\n    if (settings.originalAction && settings.originalAction.type === Types.send_msg) {\n      const action = settings.originalAction as SendMsg;\n      if (\n        action.templating &&\n        action.templating.template &&\n        action.templating.template.uuid === state.template.value.id\n      ) {\n        templatingUUID = action.templating.uuid;\n      }\n    }\n\n    templating = {\n      uuid: templatingUUID,\n      template: {\n        uuid: state.template.value.id,\n        name: state.template.value.name\n      },\n      variables: state.templateVariables.map((variable: StringEntry) => variable.value)\n    };\n  }\n\n  const result: SendMsg = {\n    attachments,\n    text: state.message.value,\n    type: Types.send_msg,\n    all_urns: state.sendAll,\n    quick_replies: state.quickReplies.value,\n    uuid: getActionUUID(settings, Types.send_msg)\n  };\n\n  if (templating) {\n    result.templating = templating;\n  }\n\n  if (state.topic.value) {\n    result.topic = state.topic.value.value;\n  }\n\n  return result;\n};\n","/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { react as bindCallbacks } from 'auto-bind';\nimport axios from 'axios';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport {\n  initializeForm as stateToForm,\n  stateToAction,\n  TOPIC_OPTIONS\n} from 'components/flow/actions/sendmsg/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport { hasUseableTranslation } from 'components/form/assetselector/helpers';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport MultiChoiceInput from 'components/form/multichoice/MultiChoice';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport TextInputElement, { Count } from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport Pill from 'components/pill/Pill';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { fetchAsset, getCookie } from 'external';\nimport { Template, TemplateOptions, TemplateTranslation } from 'flowTypes';\nimport mutate from 'immutability-helper';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport {\n  AssetEntry,\n  FormState,\n  mergeForm,\n  StringArrayEntry,\n  StringEntry,\n  SelectOptionEntry\n} from 'store/nodeEditor';\nimport { MaxOfTenItems, Required, shouldRequireIf, validate } from 'store/validators';\nimport { createUUID, range } from 'utils';\n\nimport styles from './SendMsgForm.module.scss';\nimport { hasFeature } from 'config/typeConfigs';\nimport { FeatureFilter } from 'config/interfaces';\n\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { TembaSelectStyle } from 'temba/TembaSelect';\n\nconst MAX_ATTACHMENTS = 3;\n\nconst TYPE_OPTIONS: SelectOption[] = [\n  { value: 'image', label: i18n.t('forms.image_url', 'Image URL') },\n  { value: 'audio', label: i18n.t('forms.audio_url', 'Audio URL') },\n  { value: 'video', label: i18n.t('forms.video_url', 'Video URL') }\n];\n\nconst NEW_TYPE_OPTIONS = TYPE_OPTIONS.concat([{ value: 'upload', label: 'Upload Attachment' }]);\n\nconst getAttachmentTypeOption = (type: string): SelectOption => {\n  return TYPE_OPTIONS.find((option: SelectOption) => option.value === type);\n};\n\nexport interface Attachment {\n  type: string;\n  url: string;\n  uploaded?: boolean;\n}\n\nexport interface SendMsgFormState extends FormState {\n  message: StringEntry;\n  quickReplies: StringArrayEntry;\n  quickReplyEntry: StringEntry;\n  sendAll: boolean;\n  attachments: Attachment[];\n  template: AssetEntry;\n  topic: SelectOptionEntry;\n  templateVariables: StringEntry[];\n  templateTranslation?: TemplateTranslation;\n}\n\nexport default class SendMsgForm extends React.Component<ActionFormProps, SendMsgFormState> {\n  private filePicker: any;\n\n  constructor(props: ActionFormProps) {\n    super(props);\n    this.state = stateToForm(this.props.nodeSettings, this.props.assetStore);\n    bindCallbacks(this, {\n      include: [/^handle/, /^on/]\n    });\n\n    // intialize our templates if we have them\n    if (this.state.template.value !== null) {\n      fetchAsset(this.props.assetStore.templates, this.state.template.value.id).then(\n        (asset: Asset) => {\n          if (asset !== null) {\n            this.handleTemplateChanged([asset]);\n          }\n        }\n      );\n    }\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  private handleUpdate(\n    keys: {\n      text?: string;\n      sendAll?: boolean;\n      quickReplies?: string[];\n    },\n    submitting = false\n  ): boolean {\n    const updates: Partial<SendMsgFormState> = {};\n    if (keys.hasOwnProperty('text')) {\n      updates.message = validate(i18n.t('forms.message', 'Message'), keys.text, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('sendAll')) {\n      updates.sendAll = keys.sendAll;\n    }\n\n    if (keys.hasOwnProperty('quickReplies')) {\n      updates.quickReplies = validate(\n        i18n.t('forms.quick_replies', 'Quick Replies'),\n        keys.quickReplies,\n        [MaxOfTenItems]\n      );\n    }\n\n    const updated = mergeForm(this.state, updates) as SendMsgFormState;\n\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  public handleMessageUpdate(message: string, name: string, submitting = false): boolean {\n    return this.handleUpdate({ text: message }, submitting);\n  }\n\n  public handleQuickRepliesUpdate(quickReplies: string[]): boolean {\n    return this.handleUpdate({ quickReplies });\n  }\n\n  public handleSendAllUpdate(sendAll: boolean): boolean {\n    return this.handleUpdate({ sendAll });\n  }\n\n  private handleSave(): void {\n    // don't continue if our message already has errors\n    if (hasErrors(this.state.message)) {\n      return;\n    }\n\n    // make sure we validate untouched text fields and contact fields\n    let valid = this.handleMessageUpdate(this.state.message.value, null, true);\n\n    let templateVariables = this.state.templateVariables;\n    // make sure we don't have untouched template variables\n    this.state.templateVariables.forEach((variable: StringEntry, num: number) => {\n      const updated = validate(`Variable ${num + 1}`, variable.value, [Required]);\n      templateVariables = mutate(templateVariables, {\n        [num]: { $merge: updated }\n      }) as StringEntry[];\n      valid = valid && !hasErrors(updated);\n    });\n\n    valid = valid && !hasErrors(this.state.quickReplyEntry);\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n      // notify our modal we are done\n      this.props.onClose(false);\n    } else {\n      this.setState({ templateVariables, valid });\n    }\n  }\n\n  public handleAttachmentRemoved(index: number): void {\n    // we found a match, merge us in\n    const updated: any = mutate(this.state.attachments, {\n      $splice: [[index, 1]]\n    });\n    this.setState({ attachments: updated });\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private renderUpload(index: number, attachment: Attachment): JSX.Element {\n    return (\n      <div\n        className={styles.url_attachment}\n        key={index > -1 ? 'url_attachment_' + index : createUUID()}\n      >\n        <div className={styles.type_choice}>\n          <SelectElement\n            key={'attachment_type_' + index}\n            name={i18n.t('forms.type', 'Type')}\n            style={TembaSelectStyle.small}\n            entry={{\n              value: { label: attachment.type }\n            }}\n            options={TYPE_OPTIONS}\n          />\n        </div>\n        <div className={styles.url}>\n          <span className={styles.upload}>\n            <Pill\n              icon=\"fe-download\"\n              text=\"Download\"\n              large={true}\n              onClick={() => {\n                window.open(attachment.url, '_blank');\n              }}\n            />\n            <div className={styles.remove_upload}>\n              <Pill\n                icon=\"fe-x\"\n                text=\"Remove\"\n                large={true}\n                onClick={() => {\n                  this.handleAttachmentRemoved(index);\n                }}\n              />\n            </div>\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  private handleUploadFile(files: FileList): void {\n    let attachments: any = this.state.attachments;\n\n    // if we have a csrf in our cookie, pass it along as a header\n    const csrf = getCookie('csrftoken');\n    const headers = csrf ? { 'X-CSRFToken': csrf } : {};\n\n    const data = new FormData();\n    data.append('file', files[0]);\n    axios\n      .post(this.context.config.endpoints.attachments, data, { headers })\n      .then(response => {\n        attachments = mutate(attachments, {\n          $push: [{ type: response.data.type, url: response.data.url, uploaded: true }]\n        });\n        this.setState({ attachments });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  private renderAttachment(index: number, attachment: Attachment): JSX.Element {\n    let attachments: any = this.state.attachments;\n    return (\n      <div\n        className={styles.url_attachment}\n        key={index > -1 ? 'url_attachment_' + index : createUUID()}\n      >\n        <div className={styles.type_choice}>\n          <SelectElement\n            key={'attachment_type_' + index}\n            style={TembaSelectStyle.small}\n            name={i18n.t('forms.type_options', 'Type Options')}\n            placeholder=\"Add Attachment\"\n            entry={{\n              value: index > -1 ? getAttachmentTypeOption(attachment.type) : null\n            }}\n            onChange={(option: any) => {\n              if (option.value === 'upload') {\n                window.setTimeout(() => {\n                  this.filePicker.click();\n                }, 200);\n              } else {\n                if (index === -1) {\n                  attachments = mutate(attachments, {\n                    $push: [{ type: option.value, url: '' }]\n                  });\n                } else {\n                  attachments = mutate(attachments, {\n                    [index]: {\n                      $set: { type: option.value, url: attachment.url }\n                    }\n                  });\n                }\n                this.setState({ attachments });\n              }\n            }}\n            options={index > -1 ? TYPE_OPTIONS : NEW_TYPE_OPTIONS}\n          />\n        </div>\n        {index > -1 ? (\n          <>\n            <div className={styles.url}>\n              <TextInputElement\n                placeholder=\"URL\"\n                name={i18n.t('forms.url', 'URL')}\n                onChange={(value: string) => {\n                  attachments = mutate(attachments, {\n                    [index]: { $set: { type: attachment.type, url: value } }\n                  });\n                  this.setState({ attachments });\n                }}\n                entry={{ value: attachment.url }}\n                autocomplete={true}\n              />\n            </div>\n            <div className={styles.remove}>\n              <Pill\n                icon=\"fe-x\"\n                text=\" Remove\"\n                large={true}\n                onClick={() => {\n                  this.handleAttachmentRemoved(index);\n                }}\n              />\n            </div>\n          </>\n        ) : null}\n      </div>\n    );\n  }\n\n  private renderAttachments(): JSX.Element {\n    const attachments = this.state.attachments.map((attachment, index: number) =>\n      attachment.uploaded\n        ? this.renderUpload(index, attachment)\n        : this.renderAttachment(index, attachment)\n    );\n\n    const emptyOption =\n      this.state.attachments.length < MAX_ATTACHMENTS\n        ? this.renderAttachment(-1, { url: '', type: '' })\n        : null;\n    return (\n      <>\n        <p>\n          {i18n.t(\n            'forms.send_msg_summary',\n            'Add an attachment to each message. The attachment can be a file you upload or a dynamic URL using expressions and variables from your Flow.',\n            { count: MAX_ATTACHMENTS }\n          )}\n        </p>\n        {attachments}\n        {emptyOption}\n        <input\n          style={{\n            display: 'none'\n          }}\n          ref={ele => {\n            this.filePicker = ele;\n          }}\n          type=\"file\"\n          onChange={e => this.handleUploadFile(e.target.files)}\n        />\n      </>\n    );\n  }\n\n  private handleTemplateChanged(selected: Asset[]): void {\n    const template = selected ? selected[0] : null;\n\n    if (!template) {\n      this.setState({\n        template: { value: null },\n        templateTranslation: null,\n        templateVariables: []\n      });\n    } else {\n      const templateOptions = template.content as TemplateOptions;\n      const templateTranslation = templateOptions.translations[0];\n\n      const templateVariables =\n        this.state.templateVariables.length === 0 ||\n        (this.state.template.value && this.state.template.value.id !== template.id)\n          ? range(0, templateTranslation.variable_count).map(() => {\n              return {\n                value: ''\n              };\n            })\n          : this.state.templateVariables;\n\n      this.setState({\n        template: { value: template },\n        templateTranslation,\n        templateVariables\n      });\n    }\n  }\n\n  private handleTemplateVariableChanged(updatedText: string, num: number): void {\n    const entry = validate(`Variable ${num + 1}`, updatedText, [Required]);\n    const templateVariables = mutate(this.state.templateVariables, {\n      $merge: { [num]: entry }\n    }) as StringEntry[];\n    this.setState({ templateVariables });\n  }\n\n  private handleShouldExcludeTemplate(asset: Asset): boolean {\n    return !hasUseableTranslation(asset.content as Template);\n  }\n\n  private renderTopicConfig(): JSX.Element {\n    return (\n      <>\n        <p>\n          {i18n.t(\n            'forms.send_msg_facebook_warning',\n            'Sending bulk messages over a Facebook channel requires that a topic be specified if the user has not sent a message in the last 24 hours. Setting a topic to use over Facebook is especially important for the first message in your flow.'\n          )}\n        </p>\n        <SelectElement\n          key={'fb_method_select'}\n          name={i18n.t('forms.method', 'Method')}\n          entry={this.state.topic}\n          onChange={this.handleTopicUpdate}\n          options={TOPIC_OPTIONS}\n          placeholder={i18n.t(\n            'forms.send_msg_facebook_topic_placeholder',\n            'Select a topic to use over Facebook'\n          )}\n          clearable={true}\n        />\n      </>\n    );\n  }\n\n  private handleTopicUpdate(topic: SelectOption) {\n    this.setState({ topic: { value: topic } });\n  }\n\n  private renderTemplateConfig(): JSX.Element {\n    return (\n      <>\n        <p>\n          {i18n.t(\n            'forms.whatsapp_warning',\n            'Sending messages over a WhatsApp channel requires that a template be used if you have not received a message from a contact in the last 24 hours. Setting a template to use over WhatsApp is especially important for the first message in your flow.'\n          )}\n        </p>\n        <AssetSelector\n          name={i18n.t('forms.template', 'template')}\n          noOptionsMessage=\"No templates found\"\n          assets={this.props.assetStore.templates}\n          entry={this.state.template}\n          onChange={this.handleTemplateChanged}\n          shouldExclude={this.handleShouldExcludeTemplate}\n          searchable={true}\n          formClearable={true}\n        />\n        {this.state.templateTranslation ? (\n          <>\n            <div className={styles.template_text}>{this.state.templateTranslation.content}</div>\n            {range(0, this.state.templateTranslation.variable_count).map((num: number) => {\n              return (\n                <div className={styles.variable} key={'tr_arg_' + num}>\n                  <TextInputElement\n                    name={`${i18n.t('forms.variable', 'Variable')} ${num + 1}`}\n                    showLabel={false}\n                    placeholder={`${i18n.t('forms.variable', 'Variable')} ${num + 1}`}\n                    onChange={(updatedText: string) => {\n                      this.handleTemplateVariableChanged(updatedText, num);\n                    }}\n                    entry={this.state.templateVariables[num]}\n                    autocomplete={true}\n                  />\n                </div>\n              );\n            })}\n          </>\n        ) : null}\n      </>\n    );\n  }\n\n  private handleAddQuickReply(newQuickReply: string): boolean {\n    const newReplies = [...this.state.quickReplies.value];\n    if (newReplies.length >= 10) {\n      return false;\n    }\n\n    // we don't allow two quick replies with the same name\n    const isNew = !newReplies.find(\n      (reply: string) => reply.toLowerCase() === newQuickReply.toLowerCase()\n    );\n\n    if (isNew) {\n      newReplies.push(newQuickReply);\n      this.setState({\n        quickReplies: { value: newReplies }\n      });\n      return true;\n    }\n\n    return false;\n  }\n\n  private handleRemoveQuickReply(toRemove: string): void {\n    this.setState({\n      quickReplies: {\n        value: this.state.quickReplies.value.filter((reply: string) => reply !== toRemove)\n      }\n    });\n  }\n\n  private handleQuickReplyEntry(quickReplyEntry: StringEntry): void {\n    this.setState({ quickReplyEntry });\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const quickReplies: Tab = {\n      name: 'Quick Replies',\n      body: (\n        <>\n          <p>\n            {i18n.t(\n              'forms.quick_replies_summary',\n              'Quick Replies are made into buttons for supported channels. For example, when asking a question, you might add a Quick Reply for \"Yes\" and one for \"No\".'\n            )}\n          </p>\n\n          <MultiChoiceInput\n            name={i18n.t('forms.quick_reply', 'quick_reply')}\n            helpText={\n              <Trans i18nKey=\"forms.add_quick_reply\">Add a new Quick Reply and press enter.</Trans>\n            }\n            items={this.state.quickReplies}\n            entry={this.state.quickReplyEntry}\n            onRemoved={this.handleRemoveQuickReply}\n            onItemAdded={this.handleAddQuickReply}\n            onEntryChanged={this.handleQuickReplyEntry}\n          />\n        </>\n      ),\n      checked: this.state.quickReplies.value.length > 0,\n      hasErrors: hasErrors(this.state.quickReplyEntry)\n    };\n\n    const attachments: Tab = {\n      name: 'Attachments',\n      body: this.renderAttachments(),\n      checked: this.state.attachments.length > 0\n    };\n\n    const advanced: Tab = {\n      name: 'Advanced',\n      body: (\n        <CheckboxElement\n          name={i18n.t('forms.all_destinations', 'All Destinations')}\n          title=\"All Destinations\"\n          labelClassName={styles.checkbox}\n          checked={this.state.sendAll}\n          description={i18n.t(\n            'forms.all_destinations',\n            \"Send a message to all destinations known for this contact. If you aren't sure what this means, leave it unchecked.\"\n          )}\n          onChange={this.handleSendAllUpdate}\n        />\n      ),\n      checked: this.state.sendAll\n    };\n\n    const tabs = [quickReplies, attachments, advanced];\n\n    if (hasFeature(this.context.config, FeatureFilter.HAS_WHATSAPP)) {\n      const templates: Tab = {\n        name: 'WhatsApp',\n        body: this.renderTemplateConfig(),\n        checked: this.state.template.value != null,\n        hasErrors: !!this.state.templateVariables.find((entry: StringEntry) => hasErrors(entry))\n      };\n      tabs.splice(0, 0, templates);\n    }\n\n    if (hasFeature(this.context.config, FeatureFilter.HAS_FACEBOOK)) {\n      const templates: Tab = {\n        name: 'Facebook',\n        body: this.renderTopicConfig(),\n        checked: this.state.topic.value != null\n      };\n      tabs.splice(0, 0, templates);\n    }\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <TextInputElement\n          name={i18n.t('forms.message', 'Message')}\n          showLabel={false}\n          count={Count.SMS}\n          onChange={this.handleMessageUpdate}\n          entry={this.state.message}\n          autocomplete={true}\n          focus={true}\n          textarea={true}\n        />\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import * as React from 'react';\nimport { SetRunResult } from 'flowTypes';\nimport { emphasize } from 'utils';\n\nexport const getSavePlaceholder = (value: string, name: string): JSX.Element => (\n  <div>\n    Save {emphasize(value)} as {emphasize(name)}\n  </div>\n);\n\nexport const getClearPlaceholder = (name: string) => <div>Clear value for {emphasize(name)}</div>;\n\nconst SetRunResultComp: React.SFC<SetRunResult> = ({ value, name }): JSX.Element => {\n  if (value) {\n    return getSavePlaceholder(value, name);\n  }\n  return getClearPlaceholder(name);\n};\n\nexport default SetRunResultComp;\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { Asset, AssetType } from 'store/flowContext';\nimport { AssetEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, shouldRequireIf, StartIsNonNumeric, validate } from 'store/validators';\nimport { snakify } from 'utils';\n\nimport { initializeForm, stateToAction } from './helpers';\nimport styles from './SetRunResultForm.module.scss';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\n\nexport interface SetRunResultFormState extends FormState {\n  name: AssetEntry;\n  value: StringEntry;\n  category: StringEntry;\n}\n\nexport default class SetRunResultForm extends React.PureComponent<\n  ActionFormProps,\n  SetRunResultFormState\n> {\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^on/]\n    });\n  }\n\n  private handleNameUpdate(selected: Asset[]): void {\n    if (selected) {\n      this.handleUpdate({ name: selected[0] });\n    } else {\n      this.handleUpdate({ name: null });\n    }\n  }\n\n  public handleValueUpdate(value: string): boolean {\n    return this.handleUpdate({ value });\n  }\n\n  public handleCategoryUpdate(category: string): boolean {\n    return this.handleUpdate({ category });\n  }\n\n  private handleUpdate(\n    keys: { name?: Asset; value?: string; category?: string },\n    submitting: boolean = false\n  ): boolean {\n    const updates: Partial<SetRunResultFormState> = {};\n\n    if (keys.hasOwnProperty('name')) {\n      updates.name = validate(i18n.t('forms.name', 'Name'), keys.name, [\n        shouldRequireIf(submitting),\n        Alphanumeric,\n        StartIsNonNumeric\n      ]);\n    }\n\n    if (keys.hasOwnProperty('value')) {\n      updates.value = validate(i18n.t('forms.value', 'Value'), keys.value, []);\n    }\n\n    if (keys.hasOwnProperty('category')) {\n      updates.category = validate(i18n.t('forms.category', 'Category'), keys.category, []);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // make sure we validate untouched text fields\n    const valid = this.handleUpdate({ name: this.state.name.value }, true);\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleCreateAssetFromInput(input: string): Asset {\n    return {\n      id: snakify(input),\n      name: input,\n      type: AssetType.Result\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    const snaked =\n      !hasErrors(this.state.name) && this.state.name.value\n        ? '.' + snakify(this.state.name.value.name)\n        : '';\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.form}>\n          <AssetSelector\n            name={i18n.t('forms.result', 'Result')}\n            assets={this.props.assetStore.results}\n            entry={this.state.name}\n            searchable={true}\n            createPrefix={i18n.t('forms.create_prefix', 'New: ')}\n            onChange={this.handleNameUpdate}\n            createAssetFromInput={this.handleCreateAssetFromInput}\n            formClearable={true}\n            showLabel={true}\n            helpText={\n              <Trans\n                i18nKey=\"forms.result_name_help\"\n                values={{ resultFormat: `@results${snaked}` }}\n              >\n                By naming the result, you can reference it later using [[resultFormat]]\n              </Trans>\n            }\n          />\n\n          <TextInputElement\n            __className={styles.value}\n            name={i18n.t('forms.value', 'Value')}\n            showLabel={true}\n            onChange={this.handleValueUpdate}\n            entry={this.state.value}\n            autocomplete={true}\n            helpText=\"The value to save for this result or empty to clears it. You can use expressions, for example: @(title(input))\"\n          />\n          <TextInputElement\n            __className={styles.category}\n            name={i18n.t('forms.category', 'Category')}\n            placeholder=\"Optional\"\n            showLabel={true}\n            onChange={this.handleCategoryUpdate}\n            entry={this.state.category}\n            autocomplete={false}\n            helpText=\"An optional category for your result. For age, the value might be 17, but the category might be 'Young Adult'\"\n          />\n        </div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { SetRunResultFormState } from 'components/flow/actions/setrunresult/SetRunResultForm';\nimport { Types } from 'config/interfaces';\nimport { SetRunResult } from 'flowTypes';\nimport { AssetType } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { snakify } from 'utils';\n\nexport const initializeForm = (settings: NodeEditorSettings): SetRunResultFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.set_run_result) {\n    const action = settings.originalAction as SetRunResult;\n\n    return {\n      name: {\n        value: {\n          id: snakify(action.name),\n          name: action.name,\n          type: AssetType.Result\n        }\n      },\n      value: { value: action.value },\n      category: { value: action.category },\n      valid: true\n    };\n  }\n\n  return {\n    name: { value: null },\n    value: { value: '' },\n    category: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: SetRunResultFormState\n): SetRunResult => {\n  return {\n    type: Types.set_run_result,\n    name: state.name.value.name,\n    value: state.value.value,\n    category: state.category.value,\n    uuid: getActionUUID(settings, Types.set_run_result)\n  };\n};\n","import * as React from 'react';\nimport { renderAssetList } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { StartFlow } from 'flowTypes';\nimport { AssetType } from 'store/flowContext';\n\nconst StartFlowComp: React.SFC<StartFlow> = (\n  { flow: { name, uuid } },\n  context: any\n): JSX.Element => (\n  <>{renderAssetList([{ name, id: uuid, type: AssetType.Flow }], 3, context.config.endpoints)}</>\n);\n\nStartFlowComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default StartFlowComp;\n","import { getRecipients, renderAssetList, renderAsset } from 'components/flow/actions/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { StartSession } from 'flowTypes';\nimport * as React from 'react';\nimport { AssetType } from 'store/flowContext';\n\nimport styles from './StartSession.module.scss';\n\nconst MAX_TO_SHOW = 5;\n\nexport const StartSessionComp: React.SFC<StartSession> = (\n  action: StartSession,\n  context: any\n): JSX.Element => {\n  const recipients = getRecipients(action);\n  return (\n    <div className={styles.node}>\n      <div className={styles.to}>\n        {action.create_contact\n          ? 'Create a new contact'\n          : action.contact_query\n          ? action.contact_query\n          : renderAssetList(recipients, MAX_TO_SHOW, context.config.endpoints)}\n      </div>\n      <div className={styles.flow}>\n        {renderAsset(\n          {\n            name: action.flow.name,\n            id: action.flow.uuid,\n            type: AssetType.Flow\n          },\n          context.config.endpoints\n        )}\n      </div>\n    </div>\n  );\n};\n\nStartSessionComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default StartSessionComp;\n","import i18n from 'config/i18n';\n\nexport const WAIT_LABEL = i18n.t('forms.message_label', 'If the message response...');\nexport const EXPRESSION_LABEL = i18n.t('forms.expression_label', 'If the expression...');\nexport const GROUP_LABEL = i18n.t(\n  'forms.split_by_groups',\n  \"Select the groups you'd like to split by below\"\n);\n\nexport const OPERAND_LOCALIZATION_DESC = i18n.t(\n  'forms.localize_rules',\n  'Sometimes languages need special rules to route things properly. If a translation is not provided, the original rule will be used.'\n);\n\n// We intentionally don't localize these names\nexport enum DefaultExitNames {\n  All_Responses = 'All Responses',\n  No_Response = 'No Response',\n  Any_Value = 'Any Value',\n  Other = 'Other'\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport {\n  AssetArrayEntry,\n  AssetEntry,\n  FormState,\n  mergeForm,\n  StringEntry,\n  SelectOptionEntry\n} from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\nimport { renderIf } from 'utils';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport { initializeForm, stateToAction } from './helpers';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport i18n from 'config/i18n';\nimport { renderIssues } from '../helpers';\n\nexport const START_TYPE_ASSETS = { label: 'Select recipients manually', value: 'assets' };\nexport const START_TYPE_CREATE = { label: 'Create a new contact', value: 'create_contact' };\nexport const START_TYPE_QUERY = { label: 'Select recipients from a query', value: 'contact_query' };\n\nconst START_TYPE_OPTIONS = [START_TYPE_ASSETS, START_TYPE_QUERY, START_TYPE_CREATE];\n\nexport interface StartSessionFormState extends FormState {\n  recipients: AssetArrayEntry;\n  flow: AssetEntry;\n  startType: SelectOptionEntry;\n  contactQuery: StringEntry;\n}\n\nexport class StartSessionForm extends React.Component<ActionFormProps, StartSessionFormState> {\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleRecipientsChanged(recipients: Asset[]): boolean {\n    return this.handleUpdate({ recipients });\n  }\n\n  public handleFlowChanged(flows: Asset[]): boolean {\n    let flow = null;\n    if (flows && flows.length > 0) {\n      flow = flows[0];\n    }\n    return this.handleUpdate({ flow });\n  }\n\n  public handleStartTypeChanged(startType: SelectOption): boolean {\n    return this.handleUpdate({ startType });\n  }\n\n  public handleContactQueryChanged(contactQuery: string): boolean {\n    return this.handleUpdate({ contactQuery });\n  }\n\n  private handleUpdate(\n    keys: { flow?: Asset; recipients?: Asset[]; startType?: SelectOption; contactQuery?: string },\n    submitting = false\n  ): boolean {\n    const updates: Partial<StartSessionFormState> = {};\n\n    if (keys.hasOwnProperty('startType')) {\n      updates.startType = { value: keys.startType };\n      if (keys.startType !== START_TYPE_ASSETS) {\n        updates.recipients = { value: [] };\n      }\n\n      if (keys.startType !== START_TYPE_QUERY) {\n        updates.contactQuery = { value: '' };\n      }\n    }\n\n    if (keys.hasOwnProperty('contactQuery')) {\n      updates.contactQuery = validate(\n        i18n.t('forms.contact_query', 'Contact Query'),\n        keys.contactQuery,\n        [shouldRequireIf(submitting && this.state.startType.value === START_TYPE_QUERY)]\n      );\n    }\n\n    if (keys.hasOwnProperty('recipients')) {\n      updates.recipients = validate(i18n.t('forms.recipients', 'Recipients'), keys.recipients, [\n        shouldRequireIf(submitting && this.state.startType.value === START_TYPE_ASSETS)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('flow')) {\n      updates.flow = validate(i18n.t('forms.flow', 'Flow'), keys.flow, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // validate in case they never updated an empty field\n    const valid = this.handleUpdate(\n      {\n        recipients: this.state.recipients.value,\n        flow: this.state.flow.value,\n        contactQuery: this.state.contactQuery.value\n      },\n      true\n    );\n\n    if (valid) {\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state));\n\n      // notify our modal we are done\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div>\n          <SelectElement\n            key=\"start_type_select\"\n            name={i18n.t('forms.start_type', 'Start Type')}\n            entry={this.state.startType}\n            onChange={this.handleStartTypeChanged}\n            options={START_TYPE_OPTIONS}\n          />\n        </div>\n        <p />\n        <div>\n          {renderIf(this.state.startType.value === START_TYPE_ASSETS)(\n            <div data-testid=\"recipients\">\n              <AssetSelector\n                name={i18n.t('forms.recipients', 'Recipients')}\n                placeholder=\"Choose who should be started in the flow\"\n                assets={this.props.assetStore.recipients}\n                completion={{\n                  assetStore: this.props.assetStore,\n                  schema: this.props.completionSchema\n                }}\n                entry={this.state.recipients}\n                searchable={true}\n                multi={true}\n                onChange={this.handleRecipientsChanged}\n              />\n              <p />\n            </div>\n          )}\n\n          {renderIf(this.state.startType.value === START_TYPE_QUERY)(\n            <div data-testid=\"contact_query\">\n              <TextInputElement\n                name={i18n.t('forms.contact_query', 'Contact Query')}\n                placeholder={'household_id = @fields.household_id'}\n                onChange={this.handleContactQueryChanged}\n                entry={this.state.contactQuery}\n                autocomplete={true}\n                focus={true}\n              />\n              <p />\n            </div>\n          )}\n\n          <AssetSelector\n            name={i18n.t('forms.flow', 'Flow')}\n            placeholder=\"Choose which flow to start\"\n            assets={this.props.assetStore.flows}\n            entry={this.state.flow}\n            searchable={true}\n            onChange={this.handleFlowChanged}\n          />\n        </div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n\nexport default StartSessionForm;\n","import {\n  getActionUUID,\n  getExpressions,\n  getRecipients,\n  getRecipientsByAsset\n} from 'components/flow/actions/helpers';\nimport {\n  StartSessionFormState,\n  START_TYPE_CREATE,\n  START_TYPE_ASSETS,\n  START_TYPE_QUERY\n} from 'components/flow/actions/startsession/StartSessionForm';\nimport { Types } from 'config/interfaces';\nimport { StartSession } from 'flowTypes';\nimport { Asset, AssetType } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport const initializeForm = (settings: NodeEditorSettings): StartSessionFormState => {\n  if (settings.originalAction && settings.originalAction.type === Types.start_session) {\n    const action = settings.originalAction as StartSession;\n\n    const init = {\n      recipients: {\n        value: getRecipients(action)\n      },\n      flow: {\n        value: {\n          id: action.flow.uuid,\n          name: action.flow.name,\n          type: AssetType.Flow\n        }\n      },\n      startType: {\n        value: action.create_contact\n          ? START_TYPE_CREATE\n          : action.contact_query\n          ? START_TYPE_QUERY\n          : START_TYPE_ASSETS\n      },\n      contactQuery: { value: action.contact_query || '' },\n      valid: true\n    };\n\n    return init;\n  }\n\n  return {\n    recipients: { value: [] },\n    flow: { value: null },\n    startType: { value: START_TYPE_ASSETS },\n    contactQuery: { value: '' },\n    valid: false\n  };\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: StartSessionFormState\n): StartSession => {\n  const flow: Asset = state.flow.value;\n\n  const action: StartSession = {\n    legacy_vars: getExpressions(state.recipients.value),\n    contacts: getRecipientsByAsset(state.recipients.value, AssetType.Contact),\n    groups: getRecipientsByAsset(state.recipients.value, AssetType.Group),\n    create_contact: state.startType.value === START_TYPE_CREATE,\n    flow: { name: flow.name, uuid: flow.id },\n    type: Types.start_session,\n    uuid: getActionUUID(settings, Types.start_session)\n  };\n\n  // only include contact query if it is set\n  if (state.contactQuery.value) {\n    action['contact_query'] = state.contactQuery.value;\n  }\n\n  return action;\n};\n","import { TransferAirtime } from 'flowTypes';\nimport * as React from 'react';\n\nimport styles from './TransferAirtime.module.scss';\n\nconst TransferAirtimeComp: React.SFC<TransferAirtime> = (transfer): JSX.Element => {\n  const details = Object.keys(transfer.amounts).map((key: string) => {\n    return (\n      <div key={'transfer_' + key}>\n        <div className={styles.amount}>{transfer.amounts[key]}</div>\n        <div className={styles.code}>{key}</div>\n      </div>\n    );\n  });\n\n  return <div>{details}</div>;\n};\n\nexport default TransferAirtimeComp;\n","import { getLanguageForCode } from 'components/flow/actions/updatecontact/helpers';\nimport { Types } from 'config/interfaces';\nimport {\n  SetContactAttribute,\n  SetContactChannel,\n  SetContactLanguage,\n  SetContactName\n} from 'flowTypes';\nimport * as React from 'react';\nimport { emphasize } from 'utils';\nconst styles = require('components/shared.module.scss');\n\nconst withEmph = (text: string, emph: boolean) => (emph ? emphasize(text) : text);\n\nexport const renderSetText = (\n  name: string,\n  value: string,\n  emphasizeName: boolean = false\n): JSX.Element => {\n  if (value) {\n    return (\n      <div className={`${styles.node_asset}`}>\n        Set {withEmph(name, emphasizeName)} to {emphasize(value)}.\n      </div>\n    );\n  } else {\n    return <div>Clear {withEmph(name, emphasizeName)}.</div>;\n  }\n};\n\nconst UpdateContactComp: React.SFC<SetContactAttribute> = (\n  action: SetContactAttribute\n): JSX.Element => {\n  if (action.type === Types.set_contact_field) {\n    return renderSetText(action.field.name, action.value, true);\n  }\n\n  if (action.type === Types.set_contact_channel) {\n    const setContactAction = action as SetContactChannel;\n    return renderSetText('channel', setContactAction.channel.name, false);\n  }\n\n  if (action.type === Types.set_contact_language) {\n    const setLanguageAction = action as SetContactLanguage;\n    return renderSetText(\n      'language',\n      getLanguageForCode(setLanguageAction.language, (action as any).languages),\n      false\n    );\n  }\n\n  if (action.type === Types.set_contact_name) {\n    return renderSetText('name', (action as SetContactName).name, false);\n  }\n\n  return null;\n};\n\nexport default UpdateContactComp;\n","import { CHANNEL_PROPERTY, LANGUAGE_PROPERTY, NAME_PROPERTY } from 'components/flow/props';\nimport { isOnlineFlowType } from 'config/helpers';\nimport { FlowTypes } from 'config/interfaces';\nimport { Asset, RenderNode } from 'store/flowContext';\n\nexport interface DragPoint {\n  exitUUID: string;\n  nodeUUID: string;\n}\n\nexport const getDraggedFrom = (ghostNode: RenderNode): DragPoint => {\n  if (ghostNode.ghost) {\n    const exitUUIDs = Object.keys(ghostNode.inboundConnections);\n    if (exitUUIDs.length > 0) {\n      const exitUUID = exitUUIDs[0];\n      const nodeUUID = ghostNode.inboundConnections[exitUUID];\n      return { exitUUID, nodeUUID };\n    }\n  }\n};\n\nconst ONLINE_PROPERTIES: Asset[] = [NAME_PROPERTY, LANGUAGE_PROPERTY, CHANNEL_PROPERTY];\nconst OFFLINE_PROPERTIES: Asset[] = [NAME_PROPERTY, LANGUAGE_PROPERTY];\n\nexport const getContactProperties = (flowType: FlowTypes = null): Asset[] => {\n  return !flowType || isOnlineFlowType(flowType) ? ONLINE_PROPERTIES : OFFLINE_PROPERTIES;\n};\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { DefaultExitNames } from 'components/flow/routers/constants';\nimport { Operators, Types } from 'config/interfaces';\nimport {\n  Action,\n  CallResthook,\n  CallWebhook,\n  Case,\n  Category,\n  Exit,\n  FlowNode,\n  Router,\n  RouterTypes,\n  SwitchRouter,\n  TransferAirtime,\n  UIConfig,\n  WebhookExitNames,\n  CallClassifier,\n  OpenTicket\n} from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { createUUID, snakify } from 'utils';\n\nexport interface CategorizedCases {\n  cases: Case[];\n  categories: Category[];\n  exits: Exit[];\n  caseConfig: { [uuid: string]: any };\n}\nexport interface ResolvedRoutes extends CategorizedCases {\n  defaultCategory: string;\n  timeoutCategory?: string;\n}\n\nexport const createRenderNode = (\n  uuid: string,\n  router: Router,\n  exits: Exit[],\n  type: Types,\n  actions: Action[] = [],\n  uiConfig: { [key: string]: any } = {}\n): RenderNode => {\n  const renderNode: RenderNode = {\n    node: {\n      uuid,\n      actions,\n      router,\n      exits\n    },\n    ui: {\n      type,\n      position: null,\n      config: uiConfig\n    },\n    inboundConnections: {}\n  };\n  return renderNode;\n};\n\nexport const hasCases = (node: FlowNode): boolean => {\n  if (\n    node.router &&\n    (node.router as SwitchRouter).cases &&\n    (node.router as SwitchRouter).cases.length\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const getCategories = (renderNode: RenderNode): Category[] => {\n  if (renderNode.node.router) {\n    return renderNode.node.router.categories;\n  }\n  return [];\n};\n\nexport const createCaseProps = (cases: Case[], renderNode: RenderNode): CaseProps[] => {\n  const categories: Category[] = getCategories(renderNode);\n\n  // make sure we don't mutate the in memory version of our cases\n  const newCases = JSON.parse(JSON.stringify(cases));\n  return newCases.map((kase: Case) => {\n    const matchingCategory = categories.find(\n      (category: Category) => category.uuid === kase.category_uuid\n    );\n\n    if (isRelativeDate(kase.type)) {\n      if (renderNode.ui.config && renderNode.ui.config.cases) {\n        const caseConfig = renderNode.ui.config.cases[kase.uuid];\n        if (caseConfig && caseConfig.arguments) {\n          kase.arguments = caseConfig.arguments;\n        }\n      }\n    }\n\n    return {\n      uuid: kase.uuid,\n      kase,\n      categoryName: matchingCategory ? matchingCategory.name : null,\n      valid: true\n    };\n  });\n};\n\nexport const isRelativeDate = (operatorType: Operators): boolean => {\n  return !![Operators.has_date_eq, Operators.has_date_gt, Operators.has_date_lt].find(\n    (type: string) => operatorType === type\n  );\n};\n\nconst isCategoryMatch = (cat: Category, kase: CaseProps) => {\n  // see if we have the same name\n  return cat.name.toLowerCase().trim() === kase.categoryName.trim().toLowerCase();\n};\n\n/**\n * Given a set of cases and previous categories, determines correct merging of cases\n * and the union of categories\n */\nexport const categorizeCases = (\n  newCases: CaseProps[],\n  originalNode: FlowNode\n): CategorizedCases => {\n  const categories: Category[] = [];\n  const cases: Case[] = [];\n  const exits: Exit[] = [];\n  const caseConfig: UIConfig = {};\n\n  const originalRouter = originalNode && originalNode.router;\n  const previousCategories = (originalRouter && originalRouter.categories) || [];\n\n  // look over the new cases and match up categories and exits\n  for (const newCase of newCases) {\n    // ignore empty cases\n    if (!newCase.categoryName || newCase.categoryName.trim().length === 0) {\n      continue;\n    }\n\n    // convert relative dates to expressions with configs\n    if (isRelativeDate(newCase.kase.type)) {\n      caseConfig[newCase.uuid] = { arguments: newCase.kase.arguments };\n      newCase.kase.arguments = [`@(datetime_add(today(), ${newCase.kase.arguments[0]}, \"D\"))`];\n    }\n\n    //  see if it exists on a previous case\n    let category = categories.find((cat: Category) => isCategoryMatch(cat, newCase));\n\n    // if not, see if that category exists on our old node\n    if (!category) {\n      category = previousCategories.find((cat: Category) => isCategoryMatch(cat, newCase));\n\n      // still no category, lets see if we can find a case uuid match\n      if (!category) {\n        const router = getSwitchRouter(originalNode);\n        if (router) {\n          const previousCase = router.cases.find((kase: Case) => kase.uuid === newCase.uuid);\n          if (previousCase) {\n            const previousCategory = previousCategories.find(\n              (cat: Category) => cat.uuid === previousCase.category_uuid\n            );\n\n            if (previousCategory) {\n              category = { ...previousCategory, name: newCase.categoryName };\n            }\n          }\n        }\n      }\n\n      // don't pull over an old category more than once\n      if (category && categories.find((cat: Category) => cat.uuid === category.uuid)) {\n        category = null;\n      }\n\n      // we found an old category, bring it and its exit over\n      if (category) {\n        categories.push(category);\n        const previousExit = originalNode.exits.find(\n          (exit: Exit) => category.exit_uuid === exit.uuid\n        );\n        exits.push(previousExit);\n      }\n    }\n\n    // if still no category, finally lets just create a new one\n    if (!category) {\n      const exit: Exit = {\n        uuid: createUUID()\n      };\n\n      exits.push(exit);\n\n      category = {\n        uuid: createUUID(),\n        name: newCase.categoryName,\n        exit_uuid: exit.uuid\n      };\n\n      categories.push(category);\n    }\n\n    // lastly, add our case\n    cases.push({\n      ...newCase.kase,\n      category_uuid: category.uuid\n    });\n  }\n\n  return { cases, categories, exits, caseConfig };\n};\n\nexport const getSwitchRouter = (node: FlowNode): SwitchRouter => {\n  if (node && node.router && node.router.type === RouterTypes.switch) {\n    return node.router as SwitchRouter;\n  }\n  return null;\n};\n\n/**\n * Adds a default route, reusing the previous one if possible\n * @param originalNode\n */\nexport const getDefaultRoute = (\n  defaultCategoryName: string,\n  originalNode: FlowNode\n): { defaultCategory: Category; defaultExit: Exit } => {\n  const originalRouter = getSwitchRouter(originalNode);\n\n  // use the previous default if it had one\n  if (originalRouter) {\n    const defaultCategory = originalRouter.categories.find(\n      (cat: Category) => cat.uuid === originalRouter.default_category_uuid\n    );\n\n    const defaultExit = originalNode.exits.find((e: Exit) => e.uuid === defaultCategory.exit_uuid);\n\n    defaultCategory.name = defaultCategoryName;\n\n    return { defaultCategory, defaultExit };\n  }\n  // otherwise, create a new exit and category\n  else {\n    const defaultExit: Exit = {\n      uuid: createUUID()\n    };\n\n    const defaultCategory = {\n      uuid: createUUID(),\n      name: defaultCategoryName,\n      exit_uuid: defaultExit.uuid\n    };\n\n    return { defaultCategory, defaultExit };\n  }\n};\n\nconst getTimeoutRoute = (\n  originalNode: FlowNode\n): { timeoutCategory: Category; timeoutExit: Exit } => {\n  let timeoutCategory: Category = null;\n  let timeoutExit: Exit = null;\n\n  const originalRouter = getSwitchRouter(originalNode);\n\n  // see if our previous node had a timeout case\n  if (originalRouter) {\n    if (originalRouter.wait && originalRouter.wait.timeout) {\n      const previousCategory = originalRouter.wait.timeout.category_uuid;\n      timeoutCategory = originalRouter.categories.find(\n        (cat: Category) => cat.uuid === previousCategory\n      );\n      timeoutExit = originalNode.exits.find(\n        (exit: Exit) => exit.uuid === timeoutCategory.exit_uuid\n      );\n    }\n  }\n\n  if (!timeoutCategory) {\n    // create a new route\n    timeoutExit = {\n      uuid: createUUID()\n    };\n\n    timeoutCategory = {\n      uuid: createUUID(),\n      name: DefaultExitNames.No_Response,\n      exit_uuid: timeoutExit.uuid\n    };\n  }\n\n  return { timeoutCategory, timeoutExit };\n};\n\n/**\n * Given a set of cases and previous categories, determines correct merging of cases\n * and the union of categories\n */\nexport const resolveRoutes = (\n  newCases: CaseProps[],\n  hasTimeout: boolean,\n  originalNode: FlowNode,\n  defaultCategoryName: string = null\n): ResolvedRoutes => {\n  const resolved = categorizeCases(newCases, originalNode);\n\n  let resolvedDefaultCategory = defaultCategoryName;\n  if (!resolvedDefaultCategory) {\n    resolvedDefaultCategory =\n      resolved.categories.length > 0 ? DefaultExitNames.Other : DefaultExitNames.All_Responses;\n  }\n\n  // tack on our other category\n  const { defaultCategory, defaultExit } = getDefaultRoute(resolvedDefaultCategory, originalNode);\n  resolved.categories.push(defaultCategory);\n  resolved.exits.push(defaultExit);\n\n  const results: ResolvedRoutes = {\n    ...resolved,\n    defaultCategory: defaultCategory.uuid\n  };\n\n  // add in a timeout route if we need one\n  if (hasTimeout) {\n    const { timeoutCategory, timeoutExit } = getTimeoutRoute(originalNode);\n    resolved.categories.push(timeoutCategory);\n    resolved.exits.push(timeoutExit);\n    results.timeoutCategory = timeoutCategory.uuid;\n  }\n\n  return results;\n};\n\nexport const createWebhookBasedNode = (\n  action: CallWebhook | CallResthook | OpenTicket | TransferAirtime,\n  originalNode: RenderNode,\n  useCategoryTest: boolean\n): RenderNode => {\n  const exits: Exit[] = [];\n  let cases: Case[] = [];\n  let categories: Category[] = [];\n\n  // see if we are editing an existing router so we reuse exits\n  if (\n    originalNode &&\n    originalNode.node.actions.length === 1 &&\n    originalNode.node.actions[0].type === action.type\n  ) {\n    const previousRouter = getSwitchRouter(originalNode.node);\n    originalNode.node.exits.forEach((exit: any) => exits.push(exit));\n    previousRouter.cases.forEach(kase => cases.push(kase));\n    originalNode.node.router.categories.forEach(category => categories.push(category));\n  } else {\n    // Otherwise, let's create some new ones\n    exits.push(\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      },\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      }\n    );\n\n    categories = [\n      {\n        uuid: createUUID(),\n        name: WebhookExitNames.Success,\n        exit_uuid: exits[0].uuid\n      },\n      {\n        uuid: createUUID(),\n        name: WebhookExitNames.Failure,\n        exit_uuid: exits[1].uuid\n      }\n    ];\n\n    cases = [\n      {\n        uuid: createUUID(),\n        type: useCategoryTest ? Operators.has_category : Operators.has_only_text,\n        arguments: [WebhookExitNames.Success],\n        category_uuid: categories[0].uuid\n      }\n    ];\n  }\n\n  let operand = '@results.' + snakify(action.result_name);\n  if (!useCategoryTest) {\n    operand += '.category';\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    operand: operand,\n    cases,\n    categories,\n    default_category_uuid: categories[categories.length - 1].uuid\n  };\n\n  let splitType = Types.split_by_webhook;\n  if (action.type === Types.call_resthook) {\n    splitType = Types.split_by_resthook;\n  } else if (action.type === Types.open_ticket) {\n    splitType = Types.split_by_ticket;\n  } else if (action.type === Types.transfer_airtime) {\n    splitType = Types.split_by_airtime;\n  }\n\n  return createRenderNode(originalNode.node.uuid, router, exits, splitType, [action]);\n};\n\nexport const createSplitOnActionResultNode = (\n  action: CallClassifier,\n  originalNode: RenderNode\n): RenderNode => {\n  const splitType = Types.split_by_intent;\n  const exits: Exit[] = [];\n  const router: SwitchRouter = {\n    cases: [],\n    operand: '',\n    categories: [],\n    type: RouterTypes.switch,\n    default_category_uuid: null\n  };\n\n  return createRenderNode(originalNode.node.uuid, router, exits, splitType, [action]);\n};\n","import { getSwitchRouter } from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport {\n  CallResthook,\n  CallWebhook,\n  Category,\n  Exit,\n  FlowNode,\n  RouterTypes,\n  TransferAirtime,\n  Action,\n  AnyAction,\n  FlowIssue\n} from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { getType } from 'config/typeConfigs';\n\nexport const getCategoriesForExit = (renderNode: RenderNode, exit: Exit): Category[] => {\n  // if we are\n  const isGroupSplit = getType(renderNode) === Types.split_by_groups;\n\n  if (!renderNode.node.router) {\n    return [];\n  }\n  return renderNode.node.router.categories\n    .filter((cat: Category) => cat.exit_uuid === exit.uuid)\n    .map((cat: Category) => {\n      if (isGroupSplit) {\n        return {\n          ...cat\n        };\n      } else {\n        return { ...cat, missing: false };\n      }\n    });\n};\n\nexport const getResultName = (node: FlowNode) => {\n  const switchRouter = getSwitchRouter(node);\n  if (switchRouter && switchRouter.result_name) {\n    return switchRouter.result_name;\n  }\n\n  if (node.router && node.router.type === RouterTypes.random) {\n    return node.router.result_name;\n  }\n\n  if (node.actions.length === 1) {\n    const action = node.actions[0];\n    if (\n      action.type === Types.call_webhook ||\n      action.type === Types.call_resthook ||\n      action.type === Types.open_ticket ||\n      action.type === Types.transfer_airtime\n    ) {\n      const resultAction = action as CallWebhook | CallResthook | TransferAirtime;\n      return resultAction.result_name;\n    }\n  }\n};\n\nexport const getVisibleActions = (renderNode: RenderNode): Action[] => {\n  // subflow nodes hide their set run results\n  if (getType(renderNode) === Types.split_by_subflow) {\n    return renderNode.node.actions.filter((action: Action) => action.type !== Types.set_run_result);\n  }\n\n  return renderNode.node.actions;\n};\n\nexport const filterIssuesForAction = (\n  nodeUUID: string,\n  action: AnyAction,\n  issues: FlowIssue[]\n): FlowIssue[] => {\n  return issues.filter(issue => issue.node_uuid === nodeUUID && issue.action_uuid === action.uuid);\n};\n","import { getResultName } from 'components/flow/node/helpers';\nimport { Revision } from 'components/revisions/RevisionExplorer';\nimport { Types } from 'config/interfaces';\nimport {\n  AnyAction,\n  Dimensions,\n  FlowDefinition,\n  FlowNode,\n  FlowPosition,\n  RouterTypes,\n  StickyNote,\n  SwitchRouter\n} from 'flowTypes';\nimport {\n  Asset,\n  AssetMap,\n  AssetStore,\n  AssetType,\n  Reference,\n  RenderNode,\n  RenderNodeMap\n} from 'store/flowContext';\nimport { assetListToMap, detectLoops, getActionIndex, getExitIndex, getNode } from 'store/helpers';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { LocalizationUpdates } from 'store/thunks';\nimport { createUUID, merge, push, set, snakify, snapToGrid, splice, unset } from 'utils';\n\nconst mutate = require('immutability-helper');\n\nexport const uniquifyNode = (newNode: FlowNode): FlowNode => {\n  // Give our node a unique uuid\n  return mutate(newNode, merge({ uuid: createUUID() }));\n};\n\nexport const getDefaultExit = (node: FlowNode) => {\n  if (node.router.type === RouterTypes.switch) {\n    const switchRouter = node.router as SwitchRouter;\n    return node.exits.find(exit => exit.uuid === switchRouter.default_category_uuid);\n  }\n};\n\nexport const addAssets = (type: string, store: AssetStore, assets: Asset[]): AssetStore => {\n  const assetMap = assetListToMap(assets);\n  const updated = mutate(store, {\n    [type]: {\n      items: {\n        $merge: assetMap\n      }\n    }\n  });\n  return updated;\n};\n\nexport const removeResultReference = (\n  resultName: string,\n  items: AssetMap,\n  reference: Reference\n): AssetMap => {\n  const key = snakify(resultName);\n\n  if (key in items) {\n    const item = items[key];\n    const filteredRefs = item.references.filter(\n      (ref: Reference) =>\n        ref.nodeUUID !== reference.nodeUUID || ref.actionUUID !== reference.actionUUID\n    );\n\n    if (filteredRefs.length === 0) {\n      return mutate(items, { $unset: [key] });\n    }\n\n    return mutate(items, { [key]: { references: { $set: filteredRefs } } });\n  }\n  return items;\n};\n\nexport const removeResultFromStore = (\n  resultName: string,\n  assets: AssetStore,\n  reference: Reference\n): AssetStore => {\n  if (resultName && assets.results) {\n    const items = removeResultReference(resultName, assets.results.items, reference);\n    return mutate(assets, { results: { items: { $set: items } } });\n  }\n  return assets;\n};\n\nexport const addResultToStore = (\n  resultName: string,\n  assets: AssetStore,\n  reference: Reference\n): AssetStore => {\n  if (resultName) {\n    const items = addResult(resultName, assets.results.items, reference);\n    return mutate(assets, { results: { items: { $set: items } } });\n  }\n};\n\nexport const addResult = (resultName: string, items: AssetMap, reference: Reference): AssetMap => {\n  const key = snakify(resultName);\n  const result =\n    key in items\n      ? items[key]\n      : {\n          name: resultName,\n          id: key,\n          type: AssetType.Result,\n          references: []\n        };\n\n  if (\n    !result.references.find(\n      (ref: Reference) =>\n        ref.nodeUUID === reference.nodeUUID && ref.actionUUID === reference.actionUUID\n    )\n  ) {\n    result.references.push(reference);\n  }\n\n  return mutate(items, { $merge: { [key]: result } });\n};\n\nexport const addRevision = (assets: AssetStore, revision: Revision): AssetStore => {\n  return mutate(assets, {\n    revisions: { items: { $merge: { [revision.id]: revision } } }\n  });\n};\n\nexport const addFlowResult = (assets: AssetStore, node: FlowNode): AssetStore => {\n  let updated = assets;\n\n  // TODO: initialize these to empties further up to avoid this\n  if (!updated) {\n    updated = { results: { items: {}, type: AssetType.Result } };\n  }\n\n  if (!updated.results) {\n    updated.results = { items: {}, type: AssetType.Result };\n  }\n\n  const resultName = getResultName(node);\n  if (resultName) {\n    const items = addResult(resultName, assets.results.items, {\n      nodeUUID: node.uuid\n    });\n    return mutate(assets, { results: { items: { $set: items } } });\n  }\n\n  return assets;\n};\n\n/**\n * Update the destination for a specific exit. Updates destination_uuid and\n * the inboundConnections for the given node\n * @param nodes\n * @param fromNodeUUID\n * @param fromExitUUID\n * @param destination\n */\nexport const updateConnection = (\n  nodes: RenderNodeMap,\n  fromNodeUUID: string,\n  fromExitUUID: string,\n  destinationNodeUUID: string\n): RenderNodeMap => {\n  let updatedNodes = nodes;\n  const fromNode = getNode(nodes, fromNodeUUID);\n\n  // make sure our destination exits if they provided one\n  if (destinationNodeUUID) {\n    getNode(nodes, destinationNodeUUID);\n  }\n\n  const exitIdx = getExitIndex(fromNode.node, fromExitUUID);\n  const previousDestination = fromNode.node.exits[exitIdx].destination_uuid;\n\n  updatedNodes = mutate(updatedNodes, {\n    [fromNodeUUID]: {\n      node: {\n        exits: {\n          [exitIdx]: {\n            destination_uuid: set(destinationNodeUUID)\n          }\n        }\n      }\n    }\n  });\n\n  // update our pointers\n  if (destinationNodeUUID) {\n    updatedNodes = mutate(updatedNodes, {\n      [destinationNodeUUID]: {\n        inboundConnections: merge({ [fromExitUUID]: fromNodeUUID })\n      }\n    });\n  }\n\n  if (previousDestination != null) {\n    updatedNodes = mutate(updatedNodes, {\n      [previousDestination]: { inboundConnections: unset([[fromExitUUID]]) }\n    });\n  }\n\n  return updatedNodes;\n};\n\nexport const addLanguage = (languages: Asset[], language: Asset): Asset[] => {\n  return mutate(languages, push([language]));\n};\n\n/**\n * Removes a spcific destination for an exit and the associated inboundConnection.\n * @param nodes\n * @param fromNodeUUID\n * @param fromExitUUID\n */\nexport const removeConnection = (\n  nodes: RenderNodeMap,\n  fromNodeUUID: string,\n  fromExitUUID: string\n): RenderNodeMap => {\n  return updateConnection(nodes, fromNodeUUID, fromExitUUID, null);\n};\n\n/**\n * Adds a given RenderNode to our node map or updates an existing one.\n * Updates destinations for any inboundConnections provided and updates\n * inboundConnections for any destination_uuid our exits point to.\n * @param nodes\n * @param node the node to add, if unique uuid, it will be added\n */\nexport const mergeNode = (nodes: RenderNodeMap, node: RenderNode): RenderNodeMap => {\n  let updatedNodes = nodes;\n\n  // if the node is already there, remove it first\n  if (updatedNodes[node.node.uuid]) {\n    updatedNodes = removeNode(nodes, node.node.uuid);\n  }\n\n  // add our node upadted node\n  updatedNodes = mutate(nodes, merge({ [node.node.uuid]: node }));\n\n  // if we have inbound connections, update our nodes accordingly\n  for (const fromExitUUID of Object.keys(node.inboundConnections)) {\n    const fromNodeUUID = node.inboundConnections[fromExitUUID];\n\n    const fromNode = getNode(nodes, fromNodeUUID);\n    const exitIdx = getExitIndex(fromNode.node, fromExitUUID);\n\n    updatedNodes = mutate(updatedNodes, {\n      [fromNodeUUID]: {\n        node: {\n          exits: {\n            [exitIdx]: merge({ destination_uuid: node.node.uuid })\n          }\n        }\n      }\n    });\n  }\n\n  return updatedNodes;\n};\n\n/**\n * Adds a given action to the provided node\n * @param nodes\n * @param nodeUUID\n * @param action\n */\nexport const addAction = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  action: AnyAction\n): RenderNodeMap => {\n  // check that our node exists\n  getNode(nodes, nodeUUID);\n  return mutate(nodes, { [nodeUUID]: { node: { actions: push([action]) } } });\n};\n\n/**\n * Updates the given action in place by it's uuid\n * @param nodes\n * @param nodeUUID\n * @param action\n */\nexport const updateAction = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  newAction: AnyAction,\n  originalAction?: AnyAction\n) => {\n  const originalNode = getNode(nodes, nodeUUID);\n  // If we have existing actions, find our action and update it\n  const actionIdx = originalAction ? getActionIndex(originalNode.node, originalAction.uuid) : 0;\n  return mutate(nodes, {\n    [nodeUUID]: {\n      node: {\n        actions: { [actionIdx]: set(newAction) }\n      }\n    }\n  });\n};\n\nexport const spliceInAction = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  action: AnyAction\n): RenderNodeMap => {\n  const { [nodeUUID]: previousNode } = nodes;\n\n  const otherExit = getDefaultExit(previousNode.node);\n  const destination = otherExit ? otherExit.destination_uuid : null;\n\n  // remove our previous node\n  let updatedNodes = removeNode(nodes, previousNode.node.uuid, false);\n\n  const newNode: RenderNode = {\n    node: {\n      uuid: createUUID(),\n      actions: [action],\n      exits: [{ uuid: createUUID(), destination_uuid: destination }]\n    },\n    ui: { position: previousNode.ui.position, type: Types.execute_actions },\n    inboundConnections: previousNode.inboundConnections\n  };\n\n  // add our new node\n  updatedNodes = mergeNode(updatedNodes, newNode);\n\n  return updatedNodes;\n};\n\n/** Removes a specific action from a node */\nexport const removeAction = (nodes: RenderNodeMap, nodeUUID: string, actionUUID: string) => {\n  const renderNode = getNode(nodes, nodeUUID);\n  const actionIdx = getActionIndex(renderNode.node, actionUUID);\n  return mutate(nodes, {\n    [nodeUUID]: { node: { actions: splice([[actionIdx, 1]]) } }\n  });\n};\n\n/**\n * Moves a single action up in the list for the given node\n * @param nodes\n * @param nodeUUID\n * @param action\n */\nexport const moveActionUp = (nodes: RenderNodeMap, nodeUUID: string, actionUUID: string) => {\n  const renderNode = getNode(nodes, nodeUUID);\n\n  const actions = renderNode.node.actions;\n  const actionIdx = getActionIndex(renderNode.node, actionUUID);\n\n  if (actionIdx === 0) {\n    throw new Error('Cannot move an action at the top upwards');\n  }\n\n  const action = actions[actionIdx];\n  const actionAbove = actions[actionIdx - 1];\n\n  return mutate(nodes, {\n    [nodeUUID]: {\n      node: { actions: splice([[actionIdx - 1, 2, action, actionAbove]]) }\n    }\n  });\n};\n\n/**\n * Removes a given node from our node map. Updates destinations for any exits that point to us\n * and removes any inboundConnections that reference our exits. Also will reroute connections\n * that route through us.\n * @param nodes\n * @param nodeToRemove\n */\nexport const removeNode = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  remap: boolean = true\n): RenderNodeMap => {\n  const nodeToRemove = getNode(nodes, nodeUUID);\n  let updatedNodes = nodes;\n\n  // remove us from any inbound connections\n  for (const exit of nodeToRemove.node.exits) {\n    if (exit.destination_uuid) {\n      updatedNodes = mutate(updatedNodes, {\n        [exit.destination_uuid]: {\n          inboundConnections: unset([exit.uuid])\n        }\n      });\n    }\n  }\n\n  // clear any destinations that point to us\n  for (const fromExitUUID of Object.keys(nodeToRemove.inboundConnections)) {\n    // if we have a single destination, reroute those pointing to us\n    let destination = null;\n    if (remap && nodeToRemove.node.exits.length === 1) {\n      ({ destination_uuid: destination } = nodeToRemove.node.exits[0]);\n    }\n\n    const fromNodeUUID = nodeToRemove.inboundConnections[fromExitUUID];\n    const fromNode = getNode(nodes, fromNodeUUID);\n\n    // make sure we aren't creating a loop\n    if (destination) {\n      try {\n        detectLoops(updatedNodes, fromNodeUUID, destination);\n      } catch {\n        destination = null;\n      }\n    }\n\n    const exitIdx = getExitIndex(fromNode.node, fromExitUUID);\n    updatedNodes = mutate(updatedNodes, {\n      [fromNodeUUID]: {\n        node: {\n          exits: {\n            [exitIdx]: { destination_uuid: set(destination) }\n          }\n        }\n      }\n    });\n\n    // if we are setting a new destination, update the inboundConnections\n    if (destination) {\n      // make sure our destination exists\n      getNode(nodes, destination);\n      updatedNodes = mutate(updatedNodes, {\n        [destination]: {\n          inboundConnections: merge({ [fromExitUUID]: fromNodeUUID })\n        }\n      });\n    }\n  }\n\n  // remove the actual node\n  return mutate(updatedNodes, unset([nodeUUID]));\n};\n\n/**\n * Update the position for a given node\n * @param nodes\n * @param nodeUUID\n * @param x\n * @param y\n */\nexport const updatePosition = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  position: FlowPosition,\n  snap: boolean = true\n): RenderNodeMap => {\n  const { left, top } = position;\n\n  // make sure we are on the grid\n  let adjusted = { left, top };\n\n  if (snap) {\n    adjusted = snapToGrid(left, top);\n  }\n\n  return mutate(nodes, {\n    [nodeUUID]: {\n      ui: {\n        position: set({\n          left: adjusted.left,\n          top: adjusted.top\n        })\n      }\n    }\n  });\n};\n\nexport const updateStickyNotePosition = (\n  definition: FlowDefinition,\n  stickyUUID: string,\n  position: FlowPosition,\n  snap: boolean = true\n): FlowDefinition => {\n  if (!definition._ui.stickies) {\n    definition._ui.stickies = {};\n  }\n\n  const lastPos = definition._ui.stickies[stickyUUID].position;\n  const width = lastPos.right - lastPos.left;\n  const height = lastPos.bottom - lastPos.top;\n\n  const { left, top } = position;\n\n  // make sure we are on the grid\n  let adjusted = { left, top };\n\n  if (snap) {\n    adjusted = snapToGrid(left, top);\n  }\n\n  return mutate(definition, {\n    _ui: {\n      stickies: {\n        [stickyUUID]: {\n          position: set({\n            left: adjusted.left,\n            top: adjusted.top,\n            right: adjusted.left + width,\n            bottom: adjusted.top + height\n          })\n        }\n      }\n    }\n  });\n};\n\n/**\n * Update the dimensions for a specific node\n * @param nodes\n * @param nodeUUID\n * @param dimensions\n */\nexport const updateNodeDimensions = (\n  nodes: RenderNodeMap,\n  nodeUUID: string,\n  dimensions: Dimensions\n): RenderNodeMap => {\n  const node = getNode(nodes, nodeUUID);\n  return mutate(nodes, {\n    [nodeUUID]: {\n      ui: {\n        position: merge({\n          bottom: node.ui.position.top + dimensions.height,\n          right: node.ui.position.left + dimensions.width\n        })\n      }\n    }\n  });\n};\n\n/**\n * Update the dimensions for a specific sticky\n * @param definition\n * @param uuuid\n * @param dimensions\n */\nexport const updateStickyDimensions = (\n  definition: FlowDefinition,\n  uuid: string,\n  dimensions: Dimensions\n): FlowDefinition => {\n  const position = definition._ui.stickies[uuid].position;\n  return mutate(definition, {\n    _ui: {\n      stickies: {\n        [uuid]: {\n          position: merge({\n            bottom: position.top + dimensions.height,\n            right: position.left + dimensions.width\n          })\n        }\n      }\n    }\n  });\n};\n\nexport const updateStickyNote = (\n  definition: FlowDefinition,\n  stickyUUID: string,\n  sticky: StickyNote\n): FlowDefinition => {\n  if (!definition._ui.stickies) {\n    definition._ui.stickies = {};\n  }\n  if (sticky) {\n    return mutate(definition, {\n      _ui: { stickies: merge({ [stickyUUID]: sticky }) }\n    });\n  } else {\n    return mutate(definition, { _ui: { stickies: unset([stickyUUID]) } });\n  }\n};\n\nexport const mergeNodeEditorSettings = (\n  current: NodeEditorSettings,\n  newSettings: NodeEditorSettings\n) => {\n  if (!newSettings) {\n    return current;\n  }\n\n  if (!current) {\n    return newSettings;\n  }\n\n  return mutate(current, { $merge: newSettings });\n};\n\n/**\n * Prunes the definition for editing, removing node references\n * @param definition our full definition\n */\nexport const pruneDefinition = (definition: FlowDefinition): FlowDefinition =>\n  mutate(definition, { nodes: [], _ui: { $merge: { nodes: {} } } });\n\n/**\n * Update the localization in the definition with the provided changes for a language\n * @param definition\n * @param language\n * @param changes\n */\nexport const updateLocalization = (\n  definition: FlowDefinition,\n  language: string,\n  changes: LocalizationUpdates\n) => {\n  let newDef = definition;\n\n  // Add language to localization map if not present\n  if (!newDef.localization[language]) {\n    newDef = mutate(newDef, {\n      localization: {\n        [language]: set({})\n      }\n    });\n  }\n\n  // Apply changes\n  changes.forEach(({ translations, uuid }) => {\n    if (translations) {\n      // normalize our translations so all are treated as arrays\n      const normalizedTranslations: { [uuid: string]: string[] } = {};\n      for (const key of Object.keys(translations)) {\n        const prev = translations[key];\n        if (Array.isArray(prev)) {\n          normalizedTranslations[key] = prev;\n        } else {\n          normalizedTranslations[key] = [prev];\n        }\n      }\n\n      // adding localization\n      newDef = mutate(newDef, {\n        localization: { [language]: { [uuid]: set(normalizedTranslations) } }\n      });\n    } else {\n      // removing localization\n      newDef = mutate(newDef, {\n        localization: { [language]: unset([uuid]) }\n      });\n    }\n  });\n\n  return newDef;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport {\n  initializeForm,\n  sortFieldsAndProperties,\n  stateToAction,\n  UpdateContactFormState\n} from 'components/flow/actions/updatecontact/helpers';\nimport { ActionFormProps } from 'components/flow/props';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { getContactProperties } from 'components/helpers';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Types } from 'config/interfaces';\nimport { ContactProperties } from 'flowTypes';\nimport * as React from 'react';\nimport { Asset, AssetType, updateAssets } from 'store/flowContext';\nimport * as mutators from 'store/mutators';\nimport { mergeForm } from 'store/nodeEditor';\nimport { DispatchWithState, GetState } from 'store/thunks';\nimport { shouldRequireIf, validate } from 'store/validators';\n\nimport styles from './UpdateContactForm.module.scss';\nimport i18n from 'config/i18n';\nimport { renderIssues } from '../helpers';\n\nexport default class UpdateContactForm extends React.Component<\n  ActionFormProps,\n  UpdateContactFormState\n> {\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: ActionFormProps) {\n    super(props);\n\n    this.state = initializeForm(this.props.nodeSettings, this.props.assetStore);\n\n    bindCallbacks(this, {\n      include: [/^get/, /^on/, /^handle/]\n    });\n  }\n\n  private handleUpdate(\n    keys: {\n      type?: Types;\n      name?: string;\n      channel?: Asset;\n      language?: Asset;\n      field?: Asset;\n      fieldValue?: string;\n    },\n    submitting = false\n  ): boolean {\n    const updates: Partial<UpdateContactFormState> = {};\n\n    if (keys.hasOwnProperty('type')) {\n      updates.type = keys.type;\n    }\n\n    if (keys.hasOwnProperty('name')) {\n      updates.name = { value: keys.name };\n    }\n\n    if (keys.hasOwnProperty('channel')) {\n      updates.channel = validate(i18n.t('forms.channel', 'Channel'), keys.channel, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('language')) {\n      updates.language = validate(i18n.t('forms.language', 'Language'), keys.language, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('field')) {\n      updates.field = { value: keys.field };\n    }\n\n    if (keys.hasOwnProperty('fieldValue')) {\n      updates.fieldValue = { value: keys.fieldValue, validationFailures: [] };\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handlePropertyChange(selected: Asset[]): boolean {\n    const selection = selected[0];\n    if (selection.type === AssetType.ContactProperty) {\n      switch (selection.id) {\n        case ContactProperties.Name:\n          return this.handleUpdate({\n            field: selection,\n            type: Types.set_contact_name,\n            name: ''\n          });\n        case ContactProperties.Language:\n          return this.handleUpdate({\n            field: selection,\n            type: Types.set_contact_language\n          });\n        case ContactProperties.Channel:\n          return this.handleUpdate({\n            field: selection,\n            type: Types.set_contact_channel\n          });\n      }\n    }\n    return this.handleUpdate({\n      type: Types.set_contact_field,\n      field: selection,\n      fieldValue: ''\n    });\n  }\n\n  private handleChannelUpdate(selection: Asset[], submitting = false): boolean {\n    return this.handleUpdate({ channel: selection[0] }, submitting);\n  }\n\n  private handleLanguageUpdate(selection: Asset[], submitting = false): boolean {\n    return this.handleUpdate({ language: selection[0] }, submitting);\n  }\n\n  private handleFieldValueUpdate(fieldValue: string): boolean {\n    return this.handleUpdate({ fieldValue, name: '' });\n  }\n\n  private handleNameUpdate(name: string): boolean {\n    return this.handleUpdate({ name, fieldValue: '' });\n  }\n\n  private onUpdated(dispatch: DispatchWithState, getState: GetState): void {\n    const {\n      flowContext: { assetStore }\n    } = getState();\n\n    if (this.state.field.value.type === AssetType.Field) {\n      dispatch(updateAssets(mutators.addAssets('fields', assetStore, [this.state.field.value])));\n    }\n  }\n\n  public handleFieldAdded(field: Asset): void {\n    // update our store with our new group\n    this.props.addAsset('fields', field);\n    this.handlePropertyChange([field]);\n  }\n\n  private handleSave(): void {\n    let valid = this.state.valid;\n\n    // check if language required\n    if (this.state.type === Types.set_contact_language) {\n      valid = this.handleLanguageUpdate([this.state.language.value], true) && valid;\n    }\n\n    // check if channel required\n    if (this.state.type === Types.set_contact_channel) {\n      valid = this.handleChannelUpdate([this.state.channel.value], true) && valid;\n    }\n\n    if (valid) {\n      // do the saving!\n      this.props.updateAction(stateToAction(this.props.nodeSettings, this.state), this.onUpdated);\n      this.props.onClose(true);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  /**\n   * The value widget varies for the action type\n   */\n  private getValueWidget(): JSX.Element {\n    if (this.state.type === Types.set_contact_channel) {\n      return (\n        <AssetSelector\n          key=\"select_channel\"\n          name={i18n.t('forms.channel', 'Channel')}\n          placeholder=\"Select the channel to use for this contact\"\n          assets={this.props.assetStore.channels}\n          entry={this.state.channel}\n          searchable={true}\n          valueClearable={true}\n          onChange={this.handleChannelUpdate}\n        />\n      );\n    }\n\n    if (this.state.type === Types.set_contact_language) {\n      return (\n        <AssetSelector\n          key=\"select_language\"\n          name={i18n.t('forms.language', 'Language')}\n          placeholder=\"Select the language to use for this contact\"\n          assets={this.props.assetStore.languages}\n          entry={this.state.language}\n          searchable={true}\n          valueClearable={true}\n          onChange={this.handleLanguageUpdate}\n          shouldExclude={(asset: Asset) => asset.id === 'base'}\n        />\n      );\n    } else if (this.state.type === Types.set_contact_name) {\n      return (\n        <TextInputElement\n          name={i18n.t('forms.name', 'Name')}\n          placeholder=\"Enter a new name for the contact\"\n          onChange={this.handleNameUpdate}\n          entry={this.state.name}\n          autocomplete={true}\n          focus={true}\n        />\n      );\n    } else {\n      return (\n        <TextInputElement\n          name={i18n.t('forms.field_value', 'Field Value')}\n          placeholder={`Enter a new value for ${this.state.field.value.name}`}\n          onChange={this.handleFieldValueUpdate}\n          entry={this.state.fieldValue}\n          autocomplete={true}\n          focus={true}\n        />\n      );\n    }\n  }\n\n  public handleCreateAssetFromInput(input: string): any {\n    return { label: input, value_type: 'text' };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n\n        <p>Select what to update</p>\n        <AssetSelector\n          name={i18n.t('forms.contact_field', 'Contact Field')}\n          assets={this.props.assetStore.fields}\n          additionalOptions={getContactProperties(this.context.config.flowType)}\n          entry={this.state.field}\n          searchable={true}\n          sortFunction={sortFieldsAndProperties}\n          onChange={this.handlePropertyChange}\n          // Fields can be created on the fly\n          createPrefix=\"Create Contact Field: \"\n          createAssetFromInput={this.handleCreateAssetFromInput}\n          onAssetCreated={this.handleFieldAdded}\n        />\n\n        <div className={styles.value}>{this.getValueWidget()}</div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport { AirtimeTransferEntry } from 'components/flow/routers/airtime/AirtimeRouterForm';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport FormElement from 'components/form/FormElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport * as React from 'react';\nimport { Asset, Assets } from 'store/flowContext';\nimport { ValidationFailure } from 'store/nodeEditor';\nimport { small } from 'utils/reactselect';\n\nimport styles from './CurrencyElement.module.scss';\nimport i18n from 'config/i18n';\n\nexport interface AirtimeTransfer {\n  amount: string;\n  code: string;\n}\n\nexport interface CurrencyElementProps {\n  currencies: Assets;\n  transfer: AirtimeTransferEntry;\n  index: number;\n  exclude: AirtimeTransferEntry[];\n  onChange(index: number, transfer: AirtimeTransferEntry): void;\n  onRemove(index: number): void;\n}\n\nexport default class CurrencyElement extends React.Component<CurrencyElementProps> {\n  constructor(props: CurrencyElementProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleCurrencyChanged(selected: Asset[]): void {\n    this.props.onChange(this.props.index, {\n      value: { amount: this.props.transfer.value.amount, code: selected[0].id },\n      validationFailures: this.props.transfer.validationFailures\n    });\n  }\n\n  private handleAmountChanged(value: string): void {\n    const validationFailures: ValidationFailure[] = [];\n    if (isNaN(Number(value))) {\n      validationFailures.push({\n        message: 'Invalid amount, please enter a number'\n      });\n    }\n    this.props.onChange(this.props.index, {\n      value: { amount: value, code: this.props.transfer.value.code },\n      validationFailures\n    });\n  }\n\n  public render(): JSX.Element {\n    let placeholder = 'Transfer Amount';\n\n    let amount = '';\n    let currency: any = null;\n\n    if (this.props.transfer.value) {\n      const transfer = this.props.transfer.value;\n      if (transfer.code) {\n        placeholder = `${transfer.code} ${placeholder}`;\n        currency = { id: transfer.code };\n      }\n\n      amount = '' + transfer.amount;\n    }\n\n    const amountInput =\n      this.props.index > -1 ? (\n        <div className={styles.amount}>\n          <TextInputElement\n            placeholder={placeholder}\n            name={i18n.t('forms.value', 'value')}\n            onChange={this.handleAmountChanged}\n            entry={{ value: amount }}\n          />\n        </div>\n      ) : null;\n\n    const removeIco =\n      this.props.index > -1 ? (\n        <div\n          className={styles.remove}\n          onClick={() => {\n            this.props.onRemove(this.props.index);\n          }}\n        >\n          <span className=\"fe-x\" />\n        </div>\n      ) : null;\n\n    const shouldExclude = (asset: Asset): boolean => {\n      return (\n        this.props.exclude.filter(\n          (airtime: AirtimeTransferEntry) => airtime.value.code === asset.id\n        ).length > 1\n      );\n    };\n\n    return (\n      <FormElement\n        name={i18n.t('forms.currency', 'Currency')}\n        entry={this.props.transfer}\n        __className={styles.form_element}\n      >\n        <div className={styles.transfer}>\n          <div className={styles.currency}>\n            <AssetSelector\n              styles={small as any}\n              name={i18n.t('forms.currency', 'Currency')}\n              shouldExclude={shouldExclude}\n              assets={this.props.currencies}\n              entry={{ value: currency }}\n              searchable={true}\n              onChange={this.handleCurrencyChanged}\n              placeholder={i18n.t('forms.currency', 'Select a Currency')}\n            />\n          </div>\n          {amountInput} {removeIco}\n        </div>\n      </FormElement>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\n\nimport styles from './OptionalTextInput.module.scss';\n\nexport interface OptionalTextInputProps {\n  name: string;\n  value: StringEntry;\n  toggleText: string;\n  onChange(value: string): void;\n  helpText?: string | JSX.Element;\n  maxLength?: number;\n}\n\nexport interface OptionalTextInputState extends FormState {\n  editing: boolean;\n}\n\n/**\n * OptionalText is a hideable text box\n */\nexport default class OptionalTextInput extends React.Component<\n  OptionalTextInputProps,\n  OptionalTextInputState\n> {\n  constructor(props: OptionalTextInputProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n\n    this.state = {\n      editing: this.props.value.value.trim().length > 0,\n      valid: true\n    };\n  }\n\n  private handleTextChanged(text: string): void {\n    this.props.onChange(text);\n  }\n\n  private handleEditingChanged(): void {\n    this.setState({ editing: true });\n  }\n\n  public render(): JSX.Element {\n    let ele: JSX.Element;\n\n    if (this.state.editing) {\n      ele = (\n        <TextInputElement\n          data-spec=\"optional-field\"\n          name={this.props.name}\n          showLabel={true}\n          entry={this.props.value}\n          onChange={this.handleTextChanged}\n          helpText={this.props.helpText}\n          maxLength={this.props.maxLength}\n        />\n      );\n    } else {\n      ele = (\n        <span\n          data-spec=\"toggle-link\"\n          className={styles.toggle_link}\n          onClick={this.handleEditingChanged}\n        >\n          {this.props.toggleText}\n        </span>\n      );\n    }\n\n    return <div className={styles.optional_text_input}>{ele}</div>;\n  }\n}\n","import * as React from 'react';\nimport { hasErrors } from 'components/flow/actions/helpers';\nimport OptionalTextInput from 'components/form/optionaltext/OptionalTextInput';\nimport { StringEntry } from 'store/nodeEditor';\nimport { snakify } from 'utils';\nimport { Trans } from 'react-i18next';\nimport i18n from 'config/i18n';\n\nexport const createResultNameInput = (\n  value: StringEntry,\n  onChange: (value: string) => void\n): JSX.Element => {\n  const snaked = !hasErrors(value) && value.value ? '.' + snakify(value.value) : '';\n\n  return (\n    <OptionalTextInput\n      name={i18n.t('forms.save_result_name', 'Result Name')}\n      maxLength={64}\n      value={value}\n      onChange={onChange}\n      toggleText={i18n.t('forms.save_as_title', 'Save as..')}\n      helpText={\n        <Trans i18nKey=\"forms.result_name_help\" values={{ resultFormat: `@results${snaked}` }}>\n          By naming the result, you can reference it later using [[resultFormat]]\n        </Trans>\n      }\n    />\n  );\n};\n","import * as React from 'react';\nimport { ValidationFailure } from 'store/nodeEditor';\n\nimport styles from './ValidationFailures.module.scss';\n\nexport interface Validation {\n  validationFailures: ValidationFailure[];\n}\n\nconst ValidationFailures: React.SFC<Validation> = (validation): JSX.Element => {\n  const errors = validation.validationFailures.map((failure: ValidationFailure, idx: number) => {\n    return (\n      <div key={'validation_' + idx} className={styles.error}>\n        {failure.message}\n      </div>\n    );\n  });\n  return <div className={styles.errors}>{errors}</div>;\n};\n\nexport default ValidationFailures;\n","import {\n  AirtimeRouterFormState,\n  AirtimeTransferEntry\n} from 'components/flow/routers/airtime/AirtimeRouterForm';\nimport { createWebhookBasedNode } from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport { TransferAirtime } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nexport const nodeToState = (settings: NodeEditorSettings): AirtimeRouterFormState => {\n  const originalAction = getOriginalAction(settings);\n  let resultName = { value: 'Result' };\n  let valid = false;\n\n  const amounts: AirtimeTransferEntry[] = [];\n  if (originalAction && originalAction.type === Types.transfer_airtime) {\n    Object.keys(originalAction.amounts).forEach((key: string) => {\n      amounts.push({\n        value: { code: key, amount: '' + originalAction.amounts[key] }\n      });\n    });\n    resultName = { value: originalAction.result_name };\n    valid = true;\n  }\n\n  return {\n    valid,\n    amounts,\n    resultName\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: AirtimeRouterFormState\n): RenderNode => {\n  let uuid = createUUID();\n  const originalAction = getOriginalAction(settings);\n  if (originalAction) {\n    uuid = originalAction.uuid;\n  }\n\n  const amounts = {};\n  state.amounts.forEach((entry: AirtimeTransferEntry) => {\n    if (entry.value.amount.trim().length > 0) {\n      (amounts as any)[entry.value.code] = Number(entry.value.amount);\n    }\n  });\n\n  const newAction: TransferAirtime = {\n    uuid,\n    type: Types.transfer_airtime,\n    amounts,\n    result_name: state.resultName.value\n  };\n\n  return createWebhookBasedNode(newAction, settings.originalNode, true);\n};\n\nexport const getOriginalAction = (settings: NodeEditorSettings): TransferAirtime => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  if (action.type === Types.transfer_airtime) {\n    return action as TransferAirtime;\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CurrencyElement, {\n  AirtimeTransfer\n} from 'components/flow/routers/airtime/currency/CurrencyElement';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport ValidationFailures from 'components/form/ValidationFailures';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport mutate from 'immutability-helper';\nimport * as React from 'react';\nimport { FormEntry, FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, Required, StartIsNonNumeric, validate } from 'store/validators';\n\nimport styles from './AirtimeRouterForm.module.scss';\nimport { nodeToState, stateToNode } from './helpers';\nimport i18n from 'config/i18n';\n\nexport interface AirtimeTransferEntry extends FormEntry {\n  value: AirtimeTransfer;\n}\n\nexport interface AirtimeRouterFormState extends FormState {\n  amounts: AirtimeTransferEntry[];\n  resultName: StringEntry;\n}\n\nexport default class AirtimeRouterForm extends React.PureComponent<\n  RouterFormProps,\n  AirtimeRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleSave(): void {\n    const missing: number[] = [];\n\n    this.state.amounts.forEach((entry: AirtimeTransferEntry, index: number) => {\n      if (entry.value.amount.trim().length === 0) {\n        missing.push(index);\n      }\n    });\n\n    let valid: boolean = !!!this.state.amounts.find(\n      (entry: AirtimeTransferEntry) => (entry.validationFailures || []).length > 0\n    );\n\n    // make sure at least one has a value\n    if (valid) {\n      valid =\n        this.state.amounts.find(\n          (entry: AirtimeTransferEntry) => entry.value.amount.trim().length > 0\n        ) !== undefined;\n\n      if (!valid) {\n        this.setState({\n          valid: false,\n          validationFailures: [{ message: 'At least one amount to transfer is required' }]\n        });\n      }\n    }\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private handleUpdateResultName(result: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), result, [\n      Required,\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  public getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public handleRemoved(index: number): void {\n    // we found a match, merge us in\n    const updated: any = mutate(this.state.amounts, {\n      $splice: [[index, 1]]\n    });\n    this.setState({ amounts: updated });\n  }\n\n  public handleTransferChanged(idx: number, transfer: AirtimeTransferEntry): void {\n    let updated: any = this.state.amounts;\n\n    if (idx > -1) {\n      // we found a match, merge us in\n      updated = mutate(this.state.amounts, {\n        $merge: { [idx]: transfer }\n      });\n    } else {\n      // otherwise push us on\n      updated = mutate(this.state.amounts, {\n        $push: [transfer]\n      });\n    }\n\n    this.setState({ amounts: updated, validationFailures: [] });\n  }\n\n  private renderAmount(index: number, entry: AirtimeTransferEntry): JSX.Element {\n    return (\n      <CurrencyElement\n        key={'currency_' + index}\n        exclude={this.state.amounts}\n        currencies={this.props.assetStore.currencies}\n        transfer={entry}\n        index={index}\n        onChange={this.handleTransferChanged}\n        onRemove={this.handleRemoved}\n      />\n    );\n  }\n\n  private renderAmounts(): JSX.Element {\n    const amounts = this.state.amounts.map((entry: AirtimeTransferEntry, index: number) => {\n      return this.renderAmount(index, entry);\n    });\n\n    return (\n      <div>\n        {amounts}\n        {this.renderAmount(-1, { value: { code: null, amount: '' } })}\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const errors = this.state.validationFailures ? (\n      <ValidationFailures validationFailures={this.state.validationFailures} />\n    ) : null;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        {this.renderAmounts()}\n        {errors}\n        <div className={styles.result_name}>\n          {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        </div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { HIDDEN, Operator, OperatorMap, Operators, TEXT_TYPES, ONLINE } from 'config/interfaces';\nimport i18n from 'config/i18n';\n\nexport const intentOperatorList: Operator[] = [\n  {\n    type: Operators.has_top_intent,\n    verboseName: i18n.t('operators.has_top_intent', 'has top intent'),\n    operands: 2,\n    visibility: ONLINE\n  },\n  {\n    type: Operators.has_intent,\n    verboseName: i18n.t('operators.has_intent', 'has intent'),\n    operands: 2,\n    visibility: ONLINE\n  }\n];\n\nexport const operatorConfigList: Operator[] = [\n  {\n    type: Operators.has_any_word,\n    verboseName: i18n.t('operators.has_any_word', 'has any of the words'),\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_all_words,\n    verboseName: i18n.t('operators.has_all_words', 'has all of the words'),\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_phrase,\n    verboseName: i18n.t('operators.has_phrase', 'has the phrase'),\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_only_phrase,\n    verboseName: i18n.t('operators.has_only_phrase', 'has only the phrase'),\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_beginning,\n    verboseName: i18n.t('operators.has_beginning', 'starts with'),\n    operands: 1\n  },\n  {\n    type: Operators.has_text,\n    verboseName: i18n.t('operators.has_text', 'has some text'),\n    operands: 0,\n    categoryName: 'Has Text',\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_number,\n    verboseName: i18n.t('operators.has_number', 'has a number'),\n    operands: 0,\n    categoryName: 'Has Number'\n  },\n  {\n    type: Operators.has_number_between,\n    verboseName: i18n.t('operators.has_number_between', 'has a number between'),\n    operands: 2\n  },\n  {\n    type: Operators.has_number_lt,\n    verboseName: i18n.t('operators.has_number_lt', 'has a number below'),\n    operands: 1\n  },\n  {\n    type: Operators.has_number_lte,\n    verboseName: i18n.t('operators.has_number_lte', 'has a number at or below'),\n    operands: 1\n  },\n  {\n    type: Operators.has_number_eq,\n    verboseName: i18n.t('operators.has_number_eq', 'has a number equal to'),\n    operands: 1\n  },\n  {\n    type: Operators.has_number_gte,\n    verboseName: i18n.t('operators.has_number_gte', 'has a number at or above'),\n    operands: 1\n  },\n  {\n    type: Operators.has_number_gt,\n    verboseName: i18n.t('operators.has_number_gt', 'has a number above'),\n    operands: 1\n  },\n  {\n    type: Operators.has_date,\n    verboseName: i18n.t('operators.has_date', 'has a date'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_date_category', 'Has Date'),\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_date_lt,\n    verboseName: i18n.t('operators.has_date_lt', 'has a date before'),\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_date_eq,\n    verboseName: i18n.t('operators.has_date_eq', 'has a date equal to'),\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_date_gt,\n    verboseName: i18n.t('operators.has_date_gt', 'has a date after'),\n    operands: 1,\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_time,\n    verboseName: i18n.t('operators.has_time', 'has a time'),\n    operands: 0,\n    categoryName: 'Has Time',\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_group,\n    verboseName: i18n.t('operators.has_group', 'is in the group'),\n    operands: 1,\n    visibility: HIDDEN\n  },\n  {\n    type: Operators.has_category,\n    verboseName: i18n.t('operators.has_category', 'has the category'),\n    operands: 0,\n    visibility: HIDDEN\n  },\n  {\n    type: Operators.has_phone,\n    verboseName: i18n.t('operators.has_phone', 'has a phone number'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_phone_category', 'Has Phone')\n  },\n  {\n    type: Operators.has_email,\n    verboseName: i18n.t('operators.has_email', 'has an email'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_email_category', 'Has Email'),\n    visibility: TEXT_TYPES\n  },\n  {\n    type: Operators.has_state,\n    verboseName: i18n.t('operators.has_state', 'has state'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_state_category', 'Has State')\n  },\n  {\n    type: Operators.has_district,\n    verboseName: i18n.t('operators.has_district', 'has district'),\n    operands: 1,\n    categoryName: i18n.t('operators.has_district_category', 'Has District')\n  },\n  {\n    type: Operators.has_ward,\n    verboseName: i18n.t('operators.has_ward', 'has ward'),\n    operands: 2,\n    categoryName: i18n.t('operators.has_ward_category', 'Has Ward')\n  },\n  {\n    type: Operators.has_error,\n    verboseName: i18n.t('operators.has_error', 'has an error'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_error_category', 'Has Error'),\n    visibility: HIDDEN\n  },\n  {\n    type: Operators.has_value,\n    verboseName: i18n.t('operators.has_value', 'is not empty'),\n    operands: 0,\n    categoryName: i18n.t('operators.has_value_category', 'Not Empty'),\n    visibility: HIDDEN\n  },\n  {\n    type: Operators.has_pattern,\n    verboseName: i18n.t('operator.has_pattern', 'matches regex'),\n    operands: 1\n  },\n\n  {\n    type: Operators.has_media,\n    verboseName: i18n.t('operators.has_media', 'has media'),\n    operands: 0,\n    categoryName: 'Has Media',\n    visibility: TEXT_TYPES\n  }\n];\n\nexport const operatorConfigMap: OperatorMap = [...operatorConfigList, ...intentOperatorList].reduce(\n  (map: OperatorMap, operatorConfig: Operator) => {\n    map[operatorConfig.type] = operatorConfig;\n    return map;\n  },\n  {}\n);\n\n/**\n * Shortcut for constant lookup of operator config in operator configs map\n * @param {string} type - The type of the operator config to return, e.g. 'send_msg'\n * @returns {Object} - The operator config found at operatorConfigs[type] or -1\n */\nexport const getOperatorConfig = (type: Operators): Operator => operatorConfigMap[type];\n","import { isRelativeDate } from 'components/flow/routers/helpers';\nimport { Operator, Operators } from 'config/interfaces';\nimport { getOperatorConfig } from 'config/operatorConfigs';\nimport {\n  LessThan,\n  MoreThan,\n  Numeric,\n  NumOrExp,\n  Required,\n  validate,\n  IsValidIntent\n} from 'store/validators';\nimport { titleCase } from 'utils';\n\nimport { CaseElementProps, CaseElementState } from './CaseElement';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Asset } from 'store/flowContext';\nimport i18n from 'config/i18n';\n\nexport const initializeForm = (props: CaseElementProps): CaseElementState => {\n  const arg1 =\n    props.kase.arguments && props.kase.arguments.length >= 1 ? props.kase.arguments[0] : '';\n  const arg2 =\n    props.kase.arguments && props.kase.arguments.length === 2 ? props.kase.arguments[1] : '';\n\n  return {\n    errors: [],\n    operatorConfig: getOperatorConfig(props.kase.type),\n    argument: { value: arg1 },\n    min: { value: arg1 },\n    max: { value: arg2 },\n    state: { value: arg1 },\n    district: { value: arg2 },\n    intent: { value: arg1 ? { label: arg1, value: arg1 } : null },\n    confidence: { value: arg2 },\n    categoryName: { value: props.categoryName || '' },\n    categoryNameEdited: !!props.categoryName,\n    valid: true\n  };\n};\n/**\n * Determines prefix for case's exit name\n */\nexport const prefix = (operatorType: string): string => {\n  let pre = '';\n\n  if (operatorType.indexOf('_lt') > -1) {\n    if (operatorType.indexOf('date') > -1) {\n      pre = 'Before ';\n    } else {\n      if (operatorType.indexOf('lte') > -1) {\n        pre = '<= ';\n      } else {\n        pre = '< ';\n      }\n    }\n  } else if (operatorType.indexOf('_gt') > -1) {\n    if (operatorType.indexOf('date') > -1) {\n      pre = 'After ';\n    } else {\n      if (operatorType.indexOf('gte') > -1) {\n        pre = '>= ';\n      } else {\n        pre = '>';\n      }\n    }\n  }\n\n  return pre;\n};\n\n/**\n * Returns min, max values for Operators.has_number_between case\n */\nexport const getMinMax = (args: string[] = []): { min: string; max: string } => {\n  let min = '';\n  let max = '';\n  if (args.length) {\n    if (strContainsNum(args[0])) {\n      min = args[0];\n    }\n    if (args[1]) {\n      if (strContainsNum(args[1])) {\n        max = args[1];\n      }\n    }\n  }\n  return {\n    min,\n    max\n  };\n};\n\nexport const isFloat = (val: string): boolean => /^[+-]?\\d?(\\.\\d*)?$/.test(val.trim());\n\nexport const isInt = (val: string): boolean => /^[+-]?\\d+$/.test(val.trim());\n\nexport const strContainsNum = (str: string): boolean => {\n  const trimmed = str.trim();\n  if (isFloat(trimmed)) {\n    return true;\n  } else if (isInt(trimmed)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const parseNum = (str: string): number => {\n  const trimmed = (str || '').trim();\n  if (isFloat(trimmed)) {\n    return parseFloat(str);\n  } else if (isInt(trimmed)) {\n    return parseInt(trimmed, 10);\n  }\n};\n\nexport const validateCase = (keys: {\n  operatorConfig: Operator;\n  argument?: string;\n  state?: string;\n  district?: string;\n  min?: string;\n  max?: string;\n  confidence?: string;\n  intent?: SelectOption;\n  exitName?: string;\n  exitEdited?: boolean;\n  classifier?: Asset;\n}): Partial<CaseElementState> => {\n  // when the exit is set, our arguments become required\n  const validators = keys.exitEdited && keys.exitName ? [Required] : [];\n\n  const updates: Partial<CaseElementState> = {\n    operatorConfig: keys.operatorConfig\n  };\n\n  updates.district = { value: '', validationFailures: [] };\n  updates.state = { value: '', validationFailures: [] };\n  updates.min = { value: '', validationFailures: [] };\n  updates.max = { value: '', validationFailures: [] };\n  updates.argument = { value: '', validationFailures: [] };\n  updates.intent = { value: null, validationFailures: [] };\n  updates.confidence = { value: '', validationFailures: [] };\n\n  if (keys.operatorConfig.operands > 0) {\n    switch (keys.operatorConfig.type) {\n      case Operators.has_number_eq:\n      case Operators.has_number_gt:\n      case Operators.has_number_gte:\n      case Operators.has_number_lt:\n      case Operators.has_number_lte:\n        validators.push(NumOrExp);\n        break;\n      case Operators.has_date_eq:\n      case Operators.has_date_lt:\n      case Operators.has_date_gt:\n        validators.push(Numeric);\n        break;\n    }\n\n    if (keys.operatorConfig.type === Operators.has_number_between) {\n      updates.min = validate(\n        i18n.t('forms.minimum_value', 'Minimum value'),\n        keys.min || '',\n        validators.concat([\n          Numeric,\n          LessThan(parseFloat(keys.max), i18n.t('forms.the_maximum', 'the maximum'))\n        ])\n      );\n\n      updates.max = validate(\n        i18n.t('forms.maximum_value', 'Maximum value'),\n        keys.max || '',\n        validators.concat([\n          Numeric,\n          MoreThan(parseFloat(keys.min), i18n.t('forms.the_minimum', 'the minimum'))\n        ])\n      );\n    } else if (keys.operatorConfig.type === Operators.has_district) {\n      updates.argument = validate(\n        i18n.t('forms.state', 'State'),\n        keys.argument || '',\n        validators.concat([])\n      );\n    } else if (keys.operatorConfig.type === Operators.has_ward) {\n      updates.state = validate(\n        i18n.t('forms.state', 'State'),\n        keys.state || '',\n        validators.concat([])\n      );\n      updates.district = validate(\n        i18n.t('forms.district', 'District'),\n        keys.district || '',\n        validators.concat([])\n      );\n    } else if (\n      keys.operatorConfig.type === Operators.has_top_intent ||\n      keys.operatorConfig.type === Operators.has_intent\n    ) {\n      const intentValidators = [IsValidIntent(keys.classifier)];\n      if (keys.confidence) {\n        intentValidators.push(Required);\n      }\n      updates.intent = validate(i18n.t('forms.intent', 'Intent'), keys.intent, intentValidators);\n      updates.confidence = validate(\n        i18n.t('forms.confidence', 'Confidence'),\n        keys.confidence || '',\n        validators.concat(keys.intent ? [Numeric, Required] : [Numeric])\n      );\n    } else {\n      updates.argument = validate('Value', keys.argument || '', validators);\n    }\n  }\n\n  updates.categoryNameEdited = !!keys.exitEdited;\n  updates.categoryName = validate(\n    i18n.t('forms.category', 'Category'),\n    updates.categoryNameEdited ? keys.exitName : getCategoryName(updates),\n    updates.argument.value ||\n      (updates.min.value && updates.max.value) ||\n      (updates.state.value && updates.district.value)\n      ? [Required]\n      : []\n  );\n\n  updates.valid =\n    updates.state.validationFailures.length === 0 &&\n    updates.district.validationFailures.length === 0 &&\n    updates.min.validationFailures.length === 0 &&\n    updates.max.validationFailures.length === 0 &&\n    updates.argument.validationFailures.length === 0 &&\n    updates.intent.validationFailures.length === 0 &&\n    updates.confidence.validationFailures.length === 0 &&\n    updates.categoryName.validationFailures.length === 0;\n\n  return updates;\n};\n\nexport const getCategoryName = (state: Partial<CaseElementState>): string => {\n  if (state.categoryNameEdited) {\n    return state.categoryName.value;\n  }\n\n  if (state.operatorConfig.operands === 0) {\n    return state.operatorConfig.categoryName;\n  }\n\n  if (\n    state.operatorConfig.type === Operators.has_intent ||\n    state.operatorConfig.type === Operators.has_top_intent\n  ) {\n    if (state.intent.value) {\n      return titleCase(state.intent.value.label.replace('_', ' '));\n    }\n  }\n\n  if (\n    state.operatorConfig.type === Operators.has_number_between &&\n    state.min.value &&\n    state.max.value\n  ) {\n    return `${state.min.value} - ${state.max.value}`;\n  }\n\n  if (isRelativeDate(state.operatorConfig.type)) {\n    const count = parseInt(state.argument.value, 10);\n    if (!isNaN(count)) {\n      const today =\n        state.operatorConfig.type === Operators.has_date_eq\n          ? i18n.t('forms.today_proper', 'Today')\n          : i18n.t('forms.today', 'today');\n      const op = count < 0 ? ' - ' : ' + ';\n      const inDays =\n        ' ' + (Math.abs(count) === 1 ? i18n.t('forms.day', 'day') : i18n.t('forms.days', 'days'));\n      return prefix(state.operatorConfig.type) + today + op + Math.abs(count) + inDays;\n    }\n  }\n\n  if (state.argument && state.argument.value) {\n    const pre = prefix(state.operatorConfig.type);\n    const words = state.argument.value.match(/\\w+/g);\n\n    if (words && words.length > 0) {\n      const [firstWord] = words;\n      return pre + titleCase(firstWord);\n    }\n\n    return pre + titleCase(state.argument.value);\n  }\n\n  return '';\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { isRelativeDate } from 'components/flow/routers/helpers';\nimport FormElement from 'components/form/FormElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { filterOperators } from 'config/helpers';\nimport { Operator, Operators } from 'config/interfaces';\nimport { operatorConfigList } from 'config/operatorConfigs';\nimport { Case } from 'flowTypes';\nimport * as React from 'react';\nimport { FormState, StringEntry, SelectOptionEntry } from 'store/nodeEditor';\nimport { hasErrorType } from 'utils';\n\nimport styles from './CaseElement.module.scss';\nimport { initializeForm, validateCase } from './helpers';\nimport { Asset } from 'store/flowContext';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport i18n from 'config/i18n';\nimport TembaSelect, { TembaSelectStyle } from 'temba/TembaSelect';\n\nexport interface CaseElementProps {\n  kase: Case;\n  categoryName: string;\n  name?: string; // satisfy form widget props\n  onRemove?(uuid: string): void;\n  onChange?(c: CaseProps): void;\n  operators?: Operator[];\n  classifier?: Asset;\n}\n\nexport interface CaseElementState extends FormState {\n  errors: string[];\n  operatorConfig: Operator;\n  categoryName: StringEntry;\n  categoryNameEdited: boolean;\n\n  // for string based args\n  argument: StringEntry;\n\n  // for numeric operators\n  min: StringEntry;\n  max: StringEntry;\n\n  // intents\n  intent: SelectOptionEntry;\n  confidence: StringEntry;\n\n  state: StringEntry;\n  district: StringEntry;\n}\n\nexport default class CaseElement extends React.Component<CaseElementProps, CaseElementState> {\n  private operators: Operator[];\n\n  constructor(props: CaseElementProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^get/]\n    });\n\n    this.state = initializeForm(props);\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  public componentDidMount() {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      argument: this.state.argument.value,\n      min: this.state.min.value,\n      max: this.state.max.value,\n      intent: this.state.intent.value,\n      confidence: this.state.confidence.value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited,\n      classifier: this.props.classifier\n    });\n\n    this.setState(updates as CaseElementState, this.handleChange);\n  }\n\n  public componentDidUpdate(previousProps: CaseElementProps): void {\n    if (\n      this.props.classifier &&\n      this.props.classifier !== previousProps.classifier &&\n      this.state.intent.value\n    ) {\n      const updates = validateCase({\n        operatorConfig: this.state.operatorConfig,\n        argument: this.state.argument.value,\n        min: this.state.min.value,\n        max: this.state.max.value,\n        intent: this.state.intent.value,\n        confidence: this.state.confidence.value,\n        exitName: this.state.categoryName.value,\n        exitEdited: this.state.categoryNameEdited,\n        classifier: this.props.classifier\n      });\n\n      this.setState(updates as CaseElementState, this.handleChange);\n    }\n  }\n\n  private getOperators(): Operator[] {\n    let operators = this.props.operators || operatorConfigList;\n    if (this.operators === undefined) {\n      this.operators = filterOperators(operators, this.context.config);\n    }\n\n    return this.operators;\n  }\n\n  private getArgumentArray(): string[] {\n    if (this.state.operatorConfig.operands === 0) {\n      return [];\n    }\n\n    if (\n      this.state.operatorConfig.type === Operators.has_intent ||\n      this.state.operatorConfig.type === Operators.has_top_intent\n    ) {\n      if (this.state.intent.value) {\n        return [this.state.intent.value.value, this.state.confidence.value];\n      } else {\n        return ['', this.state.confidence.value];\n      }\n    }\n\n    if (this.state.operatorConfig.type === Operators.has_number_between) {\n      return [this.state.min.value, this.state.max.value];\n    }\n\n    if (this.state.operatorConfig.type === Operators.has_ward) {\n      return [this.state.state.value, this.state.district.value];\n    }\n\n    return [this.state.argument.value];\n  }\n\n  private handleOperatorChanged(operatorConfig: Operator): void {\n    const updates = validateCase({\n      operatorConfig,\n      argument: this.state.argument.value,\n      min: this.state.min.value,\n      max: this.state.max.value,\n      intent: this.state.intent.value,\n      confidence: this.state.confidence.value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited,\n      classifier: this.props.classifier\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleArgumentChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      argument: value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleDistrictChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      argument: this.state.argument.value,\n      state: this.state.state.value,\n      district: value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  /** The user changed the value for the state (a location-based state) */\n  private handleStateChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      argument: this.state.argument.value,\n      district: this.state.district.value,\n      state: value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleIntentChanged(selected: SelectOption): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      intent: selected,\n      confidence: this.state.confidence.value || '.9',\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited,\n      classifier: this.props.classifier\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleConfidenceChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      intent: this.state.intent.value,\n      confidence: value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited,\n      classifier: this.props.classifier\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleMinChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      min: value,\n      max: this.state.max.value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleMaxChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      min: this.state.min.value,\n      max: value,\n      exitName: this.state.categoryName.value,\n      exitEdited: this.state.categoryNameEdited\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleExitChanged(value: string): void {\n    const updates = validateCase({\n      operatorConfig: this.state.operatorConfig,\n      state: this.state.state.value,\n      district: this.state.district.value,\n      argument: this.state.argument.value,\n      min: this.state.min.value,\n      max: this.state.max.value,\n      intent: this.state.intent.value,\n      confidence: this.state.confidence.value,\n      classifier: this.props.classifier,\n      exitName: value,\n      exitEdited: true\n    });\n\n    this.setState(updates as CaseElementState, () => this.handleChange());\n  }\n\n  private handleRemoveClicked(): void {\n    this.props.onRemove(this.props.kase.uuid);\n  }\n\n  private getCaseProps(): CaseProps {\n    const props = {\n      uuid: this.props.kase.uuid,\n      categoryName: this.state.categoryName.value,\n      kase: {\n        arguments: this.getArgumentArray(),\n        type: this.state.operatorConfig.type,\n        uuid: this.props.kase.uuid,\n\n        // if the exit name changed, we'll need to recompute our exit\n        category_uuid: this.state.categoryNameEdited ? null : this.props.kase.category_uuid\n      },\n      valid: this.state.valid\n    };\n\n    return props;\n  }\n\n  private handleChange(): void {\n    // If the case doesn't have arguments & an exit name, remove it\n    if (!this.state.categoryName.value) {\n      // see if we are clearing out a between\n      if (this.state.operatorConfig.type === Operators.has_number_between) {\n        if (!this.state.min.value && !this.state.max.value) {\n          // this.handleRemoveClicked();\n          // return;\n        }\n      }\n      // see if we are clearing out a single operand\n      else {\n        if (!this.state.argument.value) {\n          // this.handleRemoveClicked();\n          // return;\n        }\n      }\n    }\n\n    this.props.onChange(this.getCaseProps());\n  }\n\n  private handleIntentMenuOpened() {\n    // hiding any errors when the menu opens\n    this.setState({ intent: { value: this.state.intent.value } });\n  }\n\n  private handleIntentMenuClosed() {\n    // we want to revalidate close without selection\n    // wait a cycle for selection event to fire first\n    window.setTimeout(() => {\n      this.handleIntentChanged(this.state.intent.value);\n    }, 0);\n  }\n\n  private renderArguments(): JSX.Element {\n    if (this.state.operatorConfig.operands > 0) {\n      // First pass at displaying, handling Operators.has_number_between inputs\n      if (this.state.operatorConfig.operands > 1) {\n        if (this.state.operatorConfig.type === Operators.has_number_between) {\n          return (\n            <>\n              <TextInputElement\n                name={i18n.t('forms.arguments', 'arguments')}\n                onChange={this.handleMinChanged}\n                entry={this.state.min}\n              />\n              <span className={styles.divider} data-draggable={true}>\n                and\n              </span>\n              <TextInputElement\n                name={i18n.t('forms.arguments', 'arguments')}\n                onChange={this.handleMaxChanged}\n                entry={this.state.max}\n              />\n            </>\n          );\n        } else if (\n          this.state.operatorConfig.type === Operators.has_intent ||\n          this.state.operatorConfig.type === Operators.has_top_intent\n        ) {\n          let intents: SelectOption[] = [];\n\n          if (this.props.classifier && this.props.classifier.content) {\n            intents = this.props.classifier.content.intents.map((intent: string) => {\n              const option = {\n                label: intent,\n                value: intent\n              };\n              return option;\n            });\n          }\n\n          return (\n            <>\n              <div style={{ width: '114px' }}>\n                <SelectElement\n                  key=\"intent_select\"\n                  style={TembaSelectStyle.small}\n                  name={i18n.t('forms.intent', 'Intent')}\n                  entry={this.state.intent}\n                  onChange={this.handleIntentChanged}\n                  options={intents}\n                  onMenuOpen={this.handleIntentMenuOpened}\n                  onMenuClose={this.handleIntentMenuClosed}\n                  placeholder=\"\"\n                ></SelectElement>\n              </div>\n              <span className={styles.divider} data-draggable={true}>\n                above\n              </span>\n              <div style={{ width: '34px' }}>\n                <TextInputElement\n                  name={i18n.t('forms.confidence', 'confidence')}\n                  onChange={this.handleConfidenceChanged}\n                  entry={this.state.confidence}\n                  placeholder=\".9\"\n                />\n              </div>\n            </>\n          );\n        } else {\n          return (\n            <>\n              <TextInputElement\n                name={i18n.t('forms.state', 'State')}\n                placeholder=\"State\"\n                onChange={this.handleStateChanged}\n                entry={this.state.state}\n              />\n              <span className={styles.divider} data-draggable={true}>\n                and\n              </span>\n              <TextInputElement\n                name={i18n.t('forms.district', 'District')}\n                placeholder={i18n.t('forms.district', 'District')}\n                onChange={this.handleDistrictChanged}\n                entry={this.state.district}\n              />\n            </>\n          );\n        }\n      } else if (isRelativeDate(this.state.operatorConfig.type)) {\n        return (\n          <>\n            <span className={styles.divider} data-draggable={true}>\n              today +{' '}\n            </span>\n            <TextInputElement\n              __className={styles.relative_date}\n              name={i18n.t('forms.arguments', 'arguments')}\n              onChange={this.handleArgumentChanged}\n              entry={this.state.argument}\n              autocomplete={false}\n            />\n            <span className={styles.divider}>days</span>\n          </>\n        );\n      } else {\n        return (\n          <TextInputElement\n            name={i18n.t('forms.arguments', 'arguments')}\n            onChange={this.handleArgumentChanged}\n            entry={this.state.argument}\n            placeholder={this.state.operatorConfig.type === Operators.has_district ? 'State' : ''}\n            autocomplete={true}\n          />\n        );\n      }\n    }\n\n    return null;\n  }\n\n  public render(): JSX.Element {\n    return (\n      <FormElement\n        data-spec=\"case-form\"\n        name={this.props.name}\n        __className={styles.group}\n        kaseError={this.state.errors.length > 0}\n      >\n        <div\n          className={`${styles.kase} ${styles[this.state.operatorConfig.type]}`}\n          data-draggable={true}\n        >\n          <span className={`fe-chevrons-expand ${styles.dnd_icon}`} data-draggable={true} />\n          <div className={styles.choice}>\n            <TembaSelect\n              name={i18n.t('forms.operator', 'operator')}\n              style={TembaSelectStyle.small}\n              options={this.getOperators()}\n              nameKey=\"verboseName\"\n              valueKey=\"type\"\n              onChange={this.handleOperatorChanged}\n              value={this.state.operatorConfig}\n            ></TembaSelect>\n          </div>\n          <div\n            className={\n              this.state.operatorConfig.operands > 1 ? styles.multi_operand : styles.single_operand\n            }\n          >\n            {this.renderArguments()}\n          </div>\n          <div className={styles.categorize_as} data-draggable={true}>\n            categorize as\n          </div>\n          <div className={styles.category}>\n            <TextInputElement\n              name={i18n.t('forms.exit_name', 'Exit Name')}\n              onChange={this.handleExitChanged}\n              entry={this.state.categoryName}\n              maxLength={36}\n              showInvalid={hasErrorType(this.state.errors, [/category/])}\n            />\n          </div>\n          <span\n            data-testid={'remove-case-' + this.props.kase.uuid}\n            className={`fe-x ${styles.remove_icon}`}\n            onClick={this.handleRemoveClicked}\n          />\n        </div>\n      </FormElement>\n    );\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { Operators } from 'config/interfaces';\nimport { createUUID } from 'utils';\n\nexport const createEmptyCase = (): CaseProps => {\n  const uuid = createUUID();\n  return {\n    uuid,\n    kase: {\n      uuid,\n      type: Operators.has_any_word,\n      arguments: [''],\n      category_uuid: null\n    },\n    categoryName: '',\n    valid: true\n  };\n};\n","import arrayMove from 'array-move';\nimport { react as bindCallbacks } from 'auto-bind';\nimport CaseElement from 'components/flow/routers/case/CaseElement';\nimport { createEmptyCase } from 'components/flow/routers/caselist/helpers';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Case } from 'flowTypes';\nimport * as React from 'react';\nimport { FormState, mergeForm } from 'store/nodeEditor';\nimport { SortableElement, SortEnd, SortableContainer } from 'react-sortable-hoc';\n\nimport styles from './CaseList.module.scss';\nimport { Operator } from 'config/interfaces';\nimport { Asset } from 'store/flowContext';\n\nexport enum DragCursor {\n  move = 'move',\n  pointer = 'pointer'\n}\n\nexport interface CaseProps {\n  uuid: string;\n  kase: Case;\n  categoryName: string;\n  valid: boolean;\n  operators?: Operator[];\n  classifier?: Asset;\n}\n\nexport interface CaseListProps {\n  cases: CaseProps[];\n  onCasesUpdated(cases: CaseProps[]): void;\n  operators?: Operator[];\n  classifier?: Asset;\n  createEmptyCase?: () => CaseProps;\n}\n\nexport interface CaseListState extends FormState {\n  currentCases: CaseProps[];\n}\n\nconst SortableItem = SortableElement(({ value: row }: any) => {\n  const caseProps = row.item;\n  return (\n    <div className={styles.kase + ' case_list_case'}>\n      <CaseElement\n        key={caseProps.uuid}\n        {...caseProps}\n        onRemove={row.list.handleRemoveCase}\n        onChange={row.list.handleUpdateCase}\n        operators={row.list.props.operators}\n        classifier={row.list.props.classifier}\n      />\n    </div>\n  );\n});\n\n/**\n * CaseList is a component made up of case elements that lets\n * the user configure rules and drag and drop to set their order.\n */\nexport default class CaseList extends React.Component<CaseListProps, CaseListState> {\n  private sortableList = SortableContainer(({ items }: any) => {\n    return (\n      <div className={styles.case_list}>\n        {items.map((value: any, index: any) => (\n          <SortableItem\n            key={`item-${index}`}\n            index={index}\n            value={{ item: value, list: this }}\n            disabled={index === this.state.currentCases.length - 1}\n            shouldCancelStart={(e: any) => {\n              console.log(e);\n              return true;\n            }}\n          />\n        ))}\n      </div>\n    );\n  });\n\n  constructor(props: CaseListProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n\n    const caseProps = this.props.cases;\n\n    if (!this.hasEmptyCase(caseProps)) {\n      caseProps.push(this.createEmptyCase());\n    }\n\n    // initialize our cases\n    this.state = {\n      currentCases: caseProps,\n      valid: true\n    };\n  }\n\n  private createEmptyCase(): CaseProps {\n    return this.props.createEmptyCase ? this.props.createEmptyCase() : createEmptyCase();\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  private handleUpdate(keys: { caseProps?: CaseProps; removeCase?: any }) {\n    const updates: Partial<CaseListState> = {};\n\n    let ensureEmptyCase = false;\n\n    if (keys.hasOwnProperty('caseProps')) {\n      updates.currentCases = [keys.caseProps];\n      ensureEmptyCase = true;\n      if (!keys.caseProps.valid) {\n        // TODO: refactor this to be a form entry\n        // mock our case to have validation failures, this is so the case list sees\n        // the existence of errors which mergeForm uses when merging form validity\n        // (keys.caseProps as any).validationFailures = [{ message: 'invalid case' }];\n        updates.valid = false;\n      }\n    }\n\n    let toRemove: any[] = [];\n    if (keys.hasOwnProperty('removeCase')) {\n      toRemove = [{ currentCases: [keys.removeCase] }];\n      ensureEmptyCase = true;\n    }\n\n    // update our form\n    this.setState(\n      (prevState: CaseListState) => {\n        const updated = mergeForm(prevState, updates, toRemove) as CaseListState;\n\n        // notify our listener\n        this.props.onCasesUpdated(updated.currentCases);\n        return updated;\n      },\n      () => {\n        // if we no longer have an empty case, add one\n        if (ensureEmptyCase) {\n          if (!this.hasEmptyCase(this.state.currentCases)) {\n            this.handleUpdate({ caseProps: this.createEmptyCase() });\n          }\n        }\n      }\n    );\n  }\n\n  private hasEmptyCase(cases: CaseProps[]): boolean {\n    return cases.find((caseProps: CaseProps) => caseProps.categoryName.trim().length === 0) != null;\n  }\n\n  private handleRemoveCase(uuid: string) {\n    return this.handleUpdate({\n      removeCase: { uuid }\n    });\n  }\n\n  private handleUpdateCase(caseProps: CaseProps) {\n    this.handleUpdate({ caseProps });\n  }\n\n  private handleSortEnd({ oldIndex, newIndex }: SortEnd): void {\n    this.setState(\n      ({ currentCases }) => ({\n        currentCases: arrayMove(\n          currentCases,\n          oldIndex,\n          newIndex === this.state.currentCases.length - 1 ? newIndex - 1 : newIndex\n        )\n      }),\n      () => {\n        this.props.onCasesUpdated(this.state.currentCases);\n      }\n    );\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div\n        className={\n          styles.case_list_container +\n          ' ' +\n          (this.state.currentCases.length > 5 ? styles.scrolling : '')\n        }\n      >\n        <this.sortableList\n          items={this.state.currentCases}\n          onSortEnd={this.handleSortEnd}\n          shouldCancelStart={(e: React.MouseEvent<HTMLDivElement>) => {\n            if (!(e.target instanceof HTMLElement)) {\n              return true;\n            }\n            return !e.target.dataset.draggable;\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { nodeToState, stateToNode } from 'components/flow/routers/expression/helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, Required, StartIsNonNumeric, validate } from 'store/validators';\nimport i18n from 'config/i18n';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport enum InputToFocus {\n  args = 'args',\n  min = 'min',\n  max = 'max',\n  exit = 'exit'\n}\n\nexport interface ExpressionRouterFormState extends FormState {\n  cases: CaseProps[];\n  resultName: StringEntry;\n  operand: StringEntry;\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class ExpressionRouterForm extends React.Component<\n  RouterFormProps,\n  ExpressionRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleOperandUpdated(value: string): void {\n    this.setState({\n      operand: validate(i18n.t('forms.operand', 'Operand'), value, [Required])\n    });\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    this.setState({ cases });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>If the expression...</p>\n        <TextInputElement\n          name={i18n.t('forms.operand', 'Operand')}\n          showLabel={false}\n          autocomplete={true}\n          onChange={this.handleOperandUpdated}\n          entry={this.state.operand}\n        />\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\n\nimport styles from './DigitsRouterForm.module.scss';\nimport { nodeToState, stateToNode } from './helpers';\nimport i18n from 'config/i18n';\n\nexport interface DigitsRouterFormState extends FormState {\n  cases: CaseProps[];\n  resultName: StringEntry;\n}\n\nexport default class DigitsRouterForm extends React.Component<\n  RouterFormProps,\n  DigitsRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    this.setState({ cases });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p className={styles.lead_in}>If the keypad entry before the # symbol..</p>\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { HintTypes, Router, RouterTypes, SwitchRouter, WaitTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nimport { DigitsRouterFormState } from './DigitsRouterForm';\nimport { DIGITS_OPERAND } from 'components/nodeeditor/constants';\n\nexport const nodeToState = (settings: NodeEditorSettings): DigitsRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n\n  if (getType(settings.originalNode) === Types.wait_for_digits) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: DigitsRouterFormState\n): RenderNode => {\n  const { cases, exits, categories, defaultCategory: defaultExit, caseConfig } = resolveRoutes(\n    state.cases,\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    categories,\n    cases,\n    operand: DIGITS_OPERAND,\n    wait: { type: WaitTypes.msg, hint: { type: HintTypes.digits } },\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.wait_for_response,\n    [],\n\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n","export const DEFAULT_OPERAND = '@input.text';\nexport const GROUPS_OPERAND = '@contact.groups';\nexport const WEBHOOK_OPERAND = '@run.webhook';\nexport const SUBFLOW_OPERAND = '@child.run.status';\nexport const MEDIA_OPERAND = '@input';\nexport const DIGITS_OPERAND = '@input.text';\nexport const MENU_OPERAND = '@input.text';\nexport const SCHEMES_OPERAND = '@(urn_parts(contact.urn).scheme)';\n\n// default body for non-GET webhook actions\nexport const DEFAULT_BODY: string = `@(json(object(\n  \"contact\", object(\n    \"uuid\", contact.uuid, \n    \"name\", contact.name, \n    \"urn\", contact.urn\n  ),\n  \"flow\", object(\n    \"uuid\", run.flow.uuid, \n    \"name\", run.flow.name\n  ),\n  \"results\", foreach_value(results, extract_object, \"value\", \"category\")\n)))`;\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { sortFieldsAndProperties } from 'components/flow/actions/updatecontact/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { AssetEntry, FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\nimport { small } from 'utils/reactselect';\n\nimport styles from './FieldRouterForm.module.scss';\nimport { getRoutableFields, nodeToState, stateToNode } from './helpers';\nimport i18n from 'config/i18n';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport enum InputToFocus {\n  args = 'args',\n  min = 'min',\n  max = 'max',\n  exit = 'exit'\n}\n\nexport interface FieldRouterFormState extends FormState {\n  field: AssetEntry;\n  cases: CaseProps[];\n  resultName: StringEntry;\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class FieldRouterForm extends React.Component<\n  RouterFormProps,\n  FieldRouterFormState\n> {\n  public static contextTypes = {\n    assetService: fakePropType,\n    config: fakePropType\n  };\n\n  constructor(props: RouterFormProps) {\n    super(props);\n    this.state = nodeToState(this.props.nodeSettings, this.props.assetStore);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleFieldChanged(selected: Asset[]): void {\n    this.setState({ field: { value: selected[0] } });\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    this.setState({ cases });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.lead_in}>\n          If the contact's\n          <div className={`${styles.field_select} select-small`}>\n            <AssetSelector\n              name={i18n.t('forms.contact_field', 'Contact Field')}\n              styles={small as any}\n              assets={this.props.assetStore.fields}\n              additionalOptions={getRoutableFields(this.context.config.flowType)}\n              entry={this.state.field}\n              searchable={true}\n              sortFunction={sortFieldsAndProperties}\n              onChange={this.handleFieldChanged}\n            />\n          </div>\n        </div>\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { ExpressionRouterFormState } from 'components/flow/routers/expression/ExpressionRouterForm';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Router, RouterTypes, SwitchRouter } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const nodeToState = (settings: NodeEditorSettings): ExpressionRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n\n  let operand = DEFAULT_OPERAND;\n\n  if (settings.originalNode && getType(settings.originalNode) === Types.split_by_expression) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n\n    operand = router.operand;\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    operand: { value: operand },\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ExpressionRouterFormState\n): RenderNode => {\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    state.cases,\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    categories,\n    cases,\n    operand: state.operand.value,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_expression,\n    [],\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n","import { NAME_PROPERTY } from 'components/flow/props';\nimport { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { FieldRouterFormState } from 'components/flow/routers/field/FieldRouterForm';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { getContactProperties } from 'components/helpers';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { FlowTypes, Types } from 'config/interfaces';\nimport { getType, Scheme, SCHEMES } from 'config/typeConfigs';\nimport { Router, RouterTypes, SwitchRouter } from 'flowTypes';\nimport { Asset, AssetStore, AssetType, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const getRoutableFields = (flowType: FlowTypes = null): Asset[] => {\n  return [\n    ...getContactProperties(flowType),\n    ...SCHEMES.map((scheme: Scheme) => ({\n      name: scheme.path,\n      id: scheme.scheme,\n      type: AssetType.Scheme\n    }))\n  ];\n};\n\nexport const nodeToState = (\n  settings: NodeEditorSettings,\n  assetStore: AssetStore\n): FieldRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n\n  let field: any = null;\n\n  const type = getType(settings.originalNode);\n  if (settings.originalNode && type === Types.split_by_contact_field) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n\n    const operand = settings.originalNode.ui.config.operand;\n\n    if (assetStore.fields) {\n      if (operand.id in assetStore.fields.items) {\n        const name = assetStore.fields.items[operand.id].name;\n        field = { id: operand.id, type: operand.type, name };\n      }\n    }\n\n    // couldn't find the asset, checkour routable fields\n    if (!field) {\n      field = getRoutableFields().find((asset: Asset) => asset.id === operand.id);\n    }\n  }\n\n  // our default is name\n  if (!field) {\n    field = NAME_PROPERTY;\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    field: { value: field },\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: FieldRouterFormState\n): RenderNode => {\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    state.cases,\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  let operand = DEFAULT_OPERAND;\n  const asset = state.field.value;\n  if (asset.type === AssetType.Scheme) {\n    operand = `@(default(urn_parts(urns.${asset.id}).path, \"\"))`;\n  } else if (asset.type === AssetType.Field) {\n    operand = `@fields.${asset.id}`;\n  } else {\n    operand = `@contact.${asset.id}`;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    cases,\n    categories,\n    operand,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_contact_field,\n    [],\n    {\n      operand: {\n        id: asset.id,\n        type: asset.type,\n        name: asset.name\n      },\n      cases: caseConfig\n    }\n  );\n\n  return newRenderNode;\n};\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { GroupsRouterFormState } from 'components/flow/routers/groups/GroupsRouterForm';\nimport { createRenderNode, getSwitchRouter, resolveRoutes } from 'components/flow/routers/helpers';\nimport { GROUPS_OPERAND } from 'components/nodeeditor/constants';\nimport { Operators, Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Category, FlowNode, RouterTypes, SwitchRouter } from 'flowTypes';\nimport { Asset, AssetType, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nexport const nodeToState = (settings: NodeEditorSettings): GroupsRouterFormState => {\n  const state: GroupsRouterFormState = {\n    groups: { value: [] },\n    resultName: { value: '' },\n    valid: false\n  };\n\n  if (getType(settings.originalNode) === Types.split_by_groups) {\n    state.groups.value = extractGroups(settings.originalNode.node);\n    state.resultName = {\n      value: (settings.originalNode.node.router as SwitchRouter).result_name || ''\n    };\n    state.valid = true;\n  }\n\n  return state;\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: GroupsRouterFormState\n): RenderNode => {\n  const currentCases = groupsToCases(state.groups.value);\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    currentCases,\n    false,\n    settings.originalNode.node\n  );\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    cases,\n    categories,\n    default_category_uuid: defaultExit,\n    operand: GROUPS_OPERAND,\n    result_name: state.resultName.value\n  };\n\n  return createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_groups,\n    [],\n    { cases: caseConfig }\n  );\n};\n\nexport const extractGroups = (node: FlowNode): Asset[] => {\n  let groups: Asset[] = [];\n  const router = getSwitchRouter(node);\n  if (router) {\n    groups = (router as SwitchRouter).cases.map(kase => {\n      const category = router.categories.find((cat: Category) => cat.uuid === kase.category_uuid);\n      return {\n        name: category.name,\n        id: kase.arguments[0],\n        type: AssetType.Group\n      };\n    });\n  }\n  return groups;\n};\nexport const groupsToCases = (groups: Asset[] = []): CaseProps[] =>\n  groups.map(({ name, id }: Asset) => ({\n    uuid: id,\n    kase: {\n      uuid: createUUID(),\n      type: Operators.has_group,\n      arguments: [id, name],\n      category_uuid: ''\n    },\n    categoryName: name,\n    valid: true\n  }));\n","import { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Case, Category, SwitchRouter } from 'flowTypes';\nimport { LocalizedObject } from 'services/Localization';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings } from 'store/nodeEditor';\n\nexport enum LocalizedType {\n  Category,\n  Case\n}\n\nexport const getOriginalCase = (nodeSettings: NodeEditorSettings, uuid: string) => {\n  const cases = (nodeSettings.originalNode.node.router as SwitchRouter).cases;\n  return cases.find((item: any) => item.uuid === uuid);\n};\n\nexport const getOriginalCategory = (nodeSettings: NodeEditorSettings, uuid: string) => {\n  const items = nodeSettings.originalNode.node.router.categories;\n  return items.find((item: any) => item.uuid === uuid);\n};\n\nexport const hasLocalizableCases = (renderNode: RenderNode) => {\n  const type = getType(renderNode);\n  return type === Types.wait_for_response || type === Types.split_by_expression;\n};\n\nexport const getLocalizedObjects = (\n  nodeSettings: NodeEditorSettings,\n  localizedType: LocalizedType\n): Category[] | Case[] => {\n  const filtered: any = [];\n\n  let items: Category[] | Case[] = nodeSettings.originalNode.node.router.categories;\n  if (localizedType === LocalizedType.Case) {\n    if (hasLocalizableCases(nodeSettings.originalNode)) {\n      items = (nodeSettings.originalNode.node.router as SwitchRouter).cases;\n    } else {\n      items = [];\n    }\n  }\n\n  for (const original of items) {\n    const [localized] = nodeSettings.localizations.filter(\n      (localizedObject: LocalizedObject) => localizedObject.getObject().uuid === original.uuid\n    );\n\n    if (localized.isLocalized()) {\n      filtered.push(localized.getObject());\n    } else {\n      filtered.push({ uuid: original.uuid });\n    }\n  }\n  return filtered;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { RouterFormProps } from 'components/flow/props';\nimport { GROUP_LABEL } from 'components/flow/routers/constants';\nimport { nodeToState, stateToNode } from 'components/flow/routers/groups/helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Asset } from 'store/flowContext';\nimport { AssetArrayEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { Required, validate } from 'store/validators';\nimport i18n from 'config/i18n';\nimport { renderIssues } from 'components/flow/actions/helpers';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport interface GroupsRouterFormState extends FormState {\n  groups: AssetArrayEntry;\n  resultName: StringEntry;\n}\n\nexport default class GroupsRouterForm extends React.Component<\n  RouterFormProps,\n  GroupsRouterFormState\n> {\n  public static contextTypes = {\n    endpoints: fakePropType,\n    assetService: fakePropType\n  };\n\n  constructor(props: RouterFormProps) {\n    super(props);\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleGroupsChanged(groups: Asset[]): void {\n    this.handleUpdate({ groups });\n  }\n\n  private handleUpdateResultName(resultName: string): void {\n    this.handleUpdate({ resultName });\n  }\n\n  private handleUpdate(keys: { groups?: Asset[]; resultName?: string }): boolean {\n    const updates: Partial<GroupsRouterFormState> = {};\n\n    if (keys.hasOwnProperty('groups')) {\n      updates.groups = validate(i18n.t('forms.groups', 'Groups'), keys.groups, [Required]);\n    }\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = { value: keys.resultName };\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>{GROUP_LABEL}</p>\n        <AssetSelector\n          name={i18n.t('forms.groups', 'Groups')}\n          assets={this.props.assetStore.groups}\n          entry={this.state.groups}\n          searchable={true}\n          onChange={this.handleGroupsChanged}\n          multi={true}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { determineTypeConfig } from 'components/flow/helpers';\nimport { LocalizationFormProps } from 'components/flow/props';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { getOperatorConfig } from 'config/operatorConfigs';\nimport { Case, Category } from 'flowTypes';\nimport * as React from 'react';\nimport { FormState, mergeForm } from 'store/nodeEditor';\n\nimport {\n  getLocalizedObjects,\n  getOriginalCase,\n  getOriginalCategory,\n  LocalizedType\n} from './helpers';\nimport styles from './RouterLocalizationForm.module.scss';\nimport i18n from 'config/i18n';\nimport { renderIssues } from 'components/flow/actions/helpers';\n\nexport interface RouterLocalizationFormState extends FormState {\n  categories: Category[];\n  cases: Case[];\n}\n\nexport default class RouterLocalizationForm extends React.Component<\n  LocalizationFormProps,\n  RouterLocalizationFormState\n> {\n  constructor(props: LocalizationFormProps) {\n    super(props);\n\n    const categories: Category[] = getLocalizedObjects(\n      props.nodeSettings,\n      LocalizedType.Category\n    ) as Category[];\n    const cases: Case[] = getLocalizedObjects(props.nodeSettings, LocalizedType.Case) as Case[];\n\n    this.state = { categories, cases, valid: true };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleUpdate(keys: { category?: Category; kase?: Case }): boolean {\n    const updates: Partial<RouterLocalizationFormState> = {};\n\n    if (keys.hasOwnProperty('category')) {\n      updates.categories = [keys.category];\n    }\n\n    if (keys.hasOwnProperty('kase')) {\n      updates.cases = [keys.kase];\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleUpdateCategoryName(category: Category, name: string): boolean {\n    category.name = name;\n    return this.handleUpdate({ category });\n  }\n\n  private handleUpdateCaseArgument(kase: Case, arg: string): boolean {\n    kase.arguments = [arg];\n    return this.handleUpdate({ kase });\n  }\n\n  private handleSave(): void {\n    // collect up our category localizations\n    const translations: any[] = this.state.categories.map((cat: Category) => {\n      return cat.name\n        ? {\n            uuid: cat.uuid,\n            translations: {\n              name: cat.name\n            }\n          }\n        : { uuid: cat.uuid };\n    });\n\n    // same thing for any cases\n    translations.push(\n      ...this.state.cases.map((kase: Case) => {\n        return kase.arguments\n          ? {\n              uuid: kase.uuid,\n              translations: {\n                arguments: kase.arguments\n              }\n            }\n          : { uuid: kase.uuid };\n      })\n    );\n\n    this.props.updateLocalizations(this.props.language.id, translations);\n\n    // notify our modal we are done\n    this.props.onClose(false);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderCases(): JSX.Element[] {\n    return this.state.cases.map((kase: Case) => {\n      const originalCase = getOriginalCase(this.props.nodeSettings, kase.uuid) as Case;\n\n      const { verboseName } = getOperatorConfig(originalCase.type);\n\n      const [orginalArgument] = originalCase.arguments;\n\n      let argument = '';\n      if (kase.arguments && kase.arguments.length > 0) {\n        argument = kase.arguments[0];\n      }\n      const translation = i18n.t('forms.translation', 'Translation');\n\n      return (\n        <div\n          key={`translate_${kase.uuid}`}\n          data-spec=\"operator-field\"\n          className={styles.translating_operator_container}\n        >\n          <div data-spec=\"verbose-name\" className={styles.translating_operator}>\n            {verboseName}\n          </div>\n          <div data-spec=\"argument-to-translate\" className={styles.translating_from}>\n            {orginalArgument}\n          </div>\n          <div className={styles.translating_to}>\n            <TextInputElement\n              data-spec=\"localize-case\"\n              name={kase.uuid}\n              placeholder={`${this.props.language.name} ${translation}`}\n              showLabel={false}\n              onChange={(arg: string) => this.handleUpdateCaseArgument(kase, arg)}\n              entry={{ value: argument }}\n            />\n          </div>\n        </div>\n      );\n    });\n  }\n\n  public renderCategories(): JSX.Element[] {\n    return this.state.categories.map((cat: Category) => {\n      const originalCategory = getOriginalCategory(this.props.nodeSettings, cat.uuid);\n\n      const placeholder = `${this.props.language.name} Translation`;\n\n      if (!cat.name) {\n        cat.name = '';\n      }\n\n      return (\n        <div key={cat.uuid} className={styles.translating_category}>\n          <div data-spec=\"category-name\" className={styles.translating_from}>\n            {originalCategory.name}\n          </div>\n          <div className={styles.translating_to}>\n            <TextInputElement\n              data-spec=\"localize-category\"\n              name={cat.name}\n              placeholder={placeholder}\n              showLabel={false}\n              entry={{ value: cat.name }}\n              onChange={(name: string) => this.handleUpdateCategoryName(cat, name)}\n            />\n          </div>\n        </div>\n      );\n    });\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = determineTypeConfig(this.props.nodeSettings);\n\n    const tabs: Tab[] = [];\n\n    if (this.state.cases.length > 0) {\n      tabs.push({\n        name: 'Rule Translations',\n        body: (\n          <>\n            <p data-spec=\"instructions\">\n              Sometimes languages need special rules to route things properly. If a translation is\n              not provided, the original rule will be used.\n            </p>\n            {this.renderCases()}\n          </>\n        )\n      });\n    }\n\n    const categories = (\n      <Dialog\n        title={`${this.props.language.name} Category Names`}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        <p data-spec=\"instructions\">\n          When category names are referenced later in the flow, the appropriate language for the\n          category will be used. If no translation is provided, the original text will be used.\n        </p>\n        {this.renderCategories()}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n\n    // if we have cases, use a flipper\n    return categories;\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { createRenderNode, resolveRoutes } from 'components/flow/routers/helpers';\nimport { Operators, Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Case, Category, HintTypes, Router, RouterTypes, SwitchRouter, WaitTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nimport { MenuRouterFormState } from './MenuRouterForm';\nimport { MENU_OPERAND } from 'components/nodeeditor/constants';\n\nexport const nodeToState = (settings: NodeEditorSettings): MenuRouterFormState => {\n  let resultName: StringEntry = { value: '' };\n\n  const menu: string[] = [];\n  for (let i = 0; i < 10; i++) {\n    menu.push('');\n  }\n\n  if (getType(settings.originalNode) === Types.wait_for_menu) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    for (const kase of router.cases) {\n      let idx = parseInt(kase.arguments[0], 10) - 1;\n      if (idx === -1) {\n        idx = menu.length - 1;\n      }\n\n      menu[idx] = settings.originalNode.node.router.categories.find(\n        (category: Category) => category.uuid === kase.category_uuid\n      ).name;\n    }\n    resultName = { value: router.result_name || '' };\n  }\n\n  return {\n    resultName,\n    menu,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: MenuRouterFormState\n): RenderNode => {\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  let originalCases: Case[] = [];\n  if (getType(settings.originalNode) === Types.wait_for_menu) {\n    originalCases = (settings.originalNode.node.router as SwitchRouter).cases;\n  }\n\n  const caseProps = menuToCases(state.menu, originalCases);\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    caseProps,\n    false,\n    settings.originalNode.node\n  );\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    operand: MENU_OPERAND,\n    default_category_uuid: defaultExit,\n    cases,\n    categories,\n    wait: { type: WaitTypes.msg, hint: { type: HintTypes.digits, count: 1 } },\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.wait_for_response,\n    [],\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n\nexport const menuToCases = (menu: string[] = [], previousCases: Case[]): CaseProps[] =>\n  menu\n    .map((categoryName: string, index: number) => {\n      const idx = index === 9 ? 0 : index + 1;\n\n      const kase =\n        previousCases.find((c: Case) => c.arguments[0] === '' + idx) ||\n        ({\n          uuid: createUUID(),\n          arguments: ['' + idx],\n          type: Operators.has_number_eq,\n          category_uuid: ''\n        } as Case);\n\n      return {\n        uuid: kase.uuid,\n        kase,\n        categoryName,\n        valid: true\n      };\n    })\n    .filter((caseProps: CaseProps) => caseProps.categoryName.trim().length > 0);\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\n\nimport { nodeToState, stateToNode } from './helpers';\nimport styles from './MenuRouterForm.module.scss';\nimport i18n from 'config/i18n';\n\nconst mutate = require('immutability-helper');\n\nexport interface MenuRouterFormState extends FormState {\n  resultName: StringEntry;\n  menu: string[];\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class MenuRouterForm extends React.Component<RouterFormProps, MenuRouterFormState> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public static contextTypes = {\n    assetService: fakePropType\n  };\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleSave(): void {\n    this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n    this.props.onClose(false);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleMenuChanged(index: number, value: string): void {\n    const menu = mutate(this.state.menu, { [index]: { $set: value } });\n    this.setState({ menu });\n  }\n\n  private renderOption(index: number): JSX.Element {\n    return (\n      <div key={'menuoption-' + index} className={styles.menu_option}>\n        <div className={styles.digit}>{index === 9 ? 0 : index + 1}</div>\n        <div className={styles.category}>\n          <TextInputElement\n            name={'Menu ' + index}\n            entry={{ value: this.state.menu[index] }}\n            onChange={(value: string) => {\n              this.handleMenuChanged(index, value);\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private renderMenu(): any {\n    const options: JSX.Element[] = [];\n    for (let i = 0; i < 10; i++) {\n      options.push(this.renderOption(i));\n    }\n\n    return options;\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.menu}>{this.renderMenu()}</div>\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { createRenderNode } from 'components/flow/routers/helpers';\nimport { RandomRouterFormState } from 'components/flow/routers/random/RandomRouterForm';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Category, Exit, Router, RouterTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { createUUID, range } from 'utils';\n\nexport const BUCKET_OPTIONS: SelectOption[] = range(2, 11).map((count: number) => {\n  return { value: count + '', label: count + ' buckets' };\n});\n\nexport const getOption = (value: number): SelectOption => {\n  let option = BUCKET_OPTIONS.find(\n    (bucketOption: SelectOption) => bucketOption.value === value + ''\n  );\n  if (!option) {\n    option = { label: `${value} Buckets`, value: value + '' };\n  }\n  return option;\n};\n\nexport const nodeToState = (settings: NodeEditorSettings): RandomRouterFormState => {\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n  let buckets = 2;\n\n  let categories: Category[] = [];\n  if (settings.originalNode && getType(settings.originalNode) === Types.split_by_random) {\n    const router = settings.originalNode.node.router as Router;\n    resultName = { value: router.result_name || '' };\n    buckets = settings.originalNode.node.exits.length;\n\n    // use any existing random buckets if we have any\n    categories = settings.originalNode.node.router.categories;\n  }\n\n  categories = fillOutCategories(categories, buckets);\n\n  return {\n    categories,\n    resultName,\n    bucketChoice: { value: getOption(buckets) },\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: RandomRouterFormState\n): RenderNode => {\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  const exits =\n    getType(settings.originalNode) === Types.split_by_random\n      ? settings.originalNode.node.exits\n      : [];\n\n  const count = parseInt(state.bucketChoice.value.value, 10);\n  exits.splice(count, exits.length - count);\n\n  state.categories.forEach((category: Category, idx: number) => {\n    if (idx < exits.length) {\n      category.exit_uuid = exits[idx].uuid;\n    } else {\n      const newExit: Exit = {\n        uuid: createUUID(),\n        destination_uuid: null\n      };\n      category.exit_uuid = newExit.uuid;\n      exits.push(newExit);\n    }\n  });\n\n  const router: Router = {\n    type: RouterTypes.random,\n    categories: state.categories,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_random,\n    [],\n    null\n  );\n\n  return newRenderNode;\n};\n\nexport const fillOutCategories = (categories: Category[], buckets: number): Category[] => {\n  // add any that we still need\n  return categories.concat(\n    range(categories.length, buckets).map((idx: number) => {\n      return { uuid: createUUID(), name: `Bucket ${idx + 1}`, exit_uuid: null };\n    })\n  );\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Category } from 'flowTypes';\nimport * as React from 'react';\nimport { FormState, mergeForm, SelectOptionEntry, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\n\nimport { BUCKET_OPTIONS, fillOutCategories, nodeToState, stateToNode } from './helpers';\nimport styles from './RandomRouterForm.module.scss';\nimport i18n from 'config/i18n';\nimport { TembaSelectStyle } from 'temba/TembaSelect';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport enum InputToFocus {\n  args = 'args',\n  min = 'min',\n  max = 'max',\n  exit = 'exit'\n}\n\nexport interface RandomRouterFormState extends FormState {\n  bucketChoice: SelectOptionEntry;\n  resultName: StringEntry;\n  categories: Category[];\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class RandomRouterForm extends React.Component<\n  RouterFormProps,\n  RandomRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public static contextTypes = {\n    assetService: fakePropType\n  };\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleBucketsChanged(selected: SelectOption): boolean {\n    // create new exits if needed\n\n    const count = parseInt(selected.value, 10);\n\n    let categories = this.state.categories.concat([]);\n\n    // prune off if we have too many\n    categories = categories.slice(0, count);\n\n    // add any that we still need\n    categories = fillOutCategories(categories, count);\n\n    const updates: Partial<RandomRouterFormState> = {\n      bucketChoice: { value: selected }\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState({ ...updated, categories });\n\n    return updated.valid;\n  }\n\n  public handleSave(): void {\n    this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n    this.props.onClose(false);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleBucketNameChanged(category: Category, value: string): void {\n    const categories = this.state.categories;\n    categories.find((cat: Category) => cat.uuid === category.uuid).name = value;\n    this.setState({ categories });\n  }\n\n  private renderBucketNames(): any {\n    return this.state.categories.map((cat: Category) => (\n      <TextInputElement\n        key={cat.uuid}\n        __className={styles.bucket_name}\n        name={cat.uuid}\n        entry={{ value: cat.name }}\n        onChange={(value: string) => {\n          this.handleBucketNameChanged(cat, value);\n        }}\n      />\n    ));\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const OPTIONS = BUCKET_OPTIONS.concat([]);\n    if (BUCKET_OPTIONS.indexOf(this.state.bucketChoice.value) === -1) {\n      OPTIONS.push(this.state.bucketChoice.value);\n    }\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.lead_in}>Split them randomly into one of</div>\n        <div className={styles.bucket_select}>\n          <SelectElement\n            key=\"buckets_select\"\n            style={TembaSelectStyle.small}\n            name={i18n.t('forms.buckets', 'Buckets')}\n            entry={this.state.bucketChoice}\n            onChange={this.handleBucketsChanged}\n            options={OPTIONS}\n          />\n        </div>\n        <div className={styles.bucket_list}>{this.renderBucketNames()}</div>\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { ResponseRouterFormState } from 'components/flow/routers/response/ResponseRouterForm';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Router, RouterTypes, SwitchRouter, Wait, WaitTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const nodeToState = (settings: NodeEditorSettings): ResponseRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: 'Result' };\n  let timeout = 0;\n\n  if (settings.originalNode && getType(settings.originalNode) === Types.wait_for_response) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n\n    if (settings.originalNode.node.router.wait && settings.originalNode.node.router.wait.timeout) {\n      timeout = settings.originalNode.node.router.wait.timeout.seconds || 0;\n    }\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    timeout,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ResponseRouterFormState\n): RenderNode => {\n  const { cases, exits, defaultCategory, timeoutCategory, caseConfig, categories } = resolveRoutes(\n    state.cases,\n    state.timeout > 0,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  const wait = { type: WaitTypes.msg } as Wait;\n  if (state.timeout > 0) {\n    wait.timeout = {\n      seconds: state.timeout,\n      category_uuid: timeoutCategory\n    };\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultCategory,\n    cases,\n    categories,\n    operand: DEFAULT_OPERAND,\n    wait,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.wait_for_response,\n    [],\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { nodeToState, stateToNode } from 'components/flow/routers/response/helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TimeoutControl from 'components/form/timeout/TimeoutControl';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\nimport { WAIT_LABEL } from 'components/flow/routers/constants';\nimport i18n from 'config/i18n';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport enum InputToFocus {\n  args = 'args',\n  min = 'min',\n  max = 'max',\n  exit = 'exit'\n}\n\nexport interface ResponseRouterFormState extends FormState {\n  cases: CaseProps[];\n  resultName: StringEntry;\n  timeout: number;\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class ResponseRouterForm extends React.Component<\n  RouterFormProps,\n  ResponseRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleUpdateTimeout(timeout: number): void {\n    this.setState({ timeout });\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    const invalidCase = cases.find((caseProps: CaseProps) => !caseProps.valid);\n    this.setState({ cases, valid: !invalidCase });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        gutter={\n          <TimeoutControl timeout={this.state.timeout} onChanged={this.handleUpdateTimeout} />\n        }\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div>{WAIT_LABEL}</div>\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport * as React from 'react';\nimport { renderIf } from 'utils';\n\nimport styles from './TimeoutControl.module.scss';\nimport i18n from 'config/i18n';\nimport TembaSelect, { TembaSelectStyle } from 'temba/TembaSelect';\n\nexport const TIMEOUT_OPTIONS = [\n  { value: '60', label: i18n.t('forms.timeout_1 minute', '1 minute') },\n  { value: '120', label: i18n.t('forms.timeout_2 minutes', '2 minutes') },\n  { value: '180', label: i18n.t('forms.timeout_3 minutes', '3 minutes') },\n  { value: '240', label: i18n.t('forms.timeout_4 minutes', '4 minutes') },\n  { value: '300', label: i18n.t('forms.timeout_5 minutes', '5 minutes') },\n  { value: '600', label: i18n.t('forms.timeout_10 minutes', '10 minutes') },\n  { value: '900', label: i18n.t('forms.timeout_15 minutes', '15 minutes') },\n  { value: '3600', label: i18n.t('forms.timeout_1 hour', '1 hour') },\n  { value: '7200', label: i18n.t('forms.timeout_2 hours', '2 hours') },\n  { value: '10800', label: i18n.t('forms.timeout_3 hours', '3 hours') },\n  { value: '21600', label: i18n.t('forms.timeout_6 hours', '6 hours') },\n  { value: '43200', label: i18n.t('forms.timeout_12 hours', '12 hours') },\n  { value: '64800', label: i18n.t('forms.timeout_18 hours', '18 hours') },\n  { value: '86400', label: i18n.t('forms.timeout_1 day', '1 day') },\n  { value: '172800', label: i18n.t('forms.timeout_2 days', '2 days') },\n  { value: '259200', label: i18n.t('forms.timeout_3 days', '3 days') },\n  { value: '604800', label: i18n.t('forms.timeout_1 week', '1 week') }\n];\n\nexport const DEFAULT_TIMEOUT = TIMEOUT_OPTIONS[4];\n\nexport const ellipsize = (str: string) => `${str}...`;\n\nexport interface TimeoutControlProps {\n  timeout: number;\n  onChanged(timeout: number): void;\n}\n\nexport default class TimeoutControl extends React.Component<TimeoutControlProps> {\n  constructor(props: TimeoutControlProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private getSelected(timeout: number): any {\n    for (const [idx, { value }] of TIMEOUT_OPTIONS.entries()) {\n      if (value === '' + timeout) {\n        return TIMEOUT_OPTIONS[idx];\n      }\n    }\n    return null;\n  }\n\n  private isChecked(): boolean {\n    return this.props.timeout > 0;\n  }\n\n  private getInstructions(): string {\n    const base = 'Continue when there is no response';\n    return this.isChecked() ? `${base} for` : ellipsize(base);\n  }\n\n  private handleChecked(): void {\n    if (this.props.timeout > 0) {\n      this.props.onChanged(0);\n    } else {\n      this.props.onChanged(parseInt(DEFAULT_TIMEOUT.value));\n    }\n  }\n\n  private handleTimeoutChanged(selected: any): void {\n    this.props.onChanged(parseInt(selected.value));\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className={styles.timeout_control_container}>\n        <div className={styles.left_section}>\n          <CheckboxElement\n            name={i18n.t('forms.timeout', 'Timeout')}\n            checked={this.isChecked()}\n            description={this.getInstructions()}\n            checkboxClassName={styles.checkbox}\n            onChange={this.handleChecked}\n          />\n        </div>\n        {renderIf(this.isChecked())(\n          <div className={styles.drop_down}>\n            <TembaSelect\n              name={i18n.t('forms.timeout', 'Timeout')}\n              style={TembaSelectStyle.small}\n              value={this.getSelected(this.props.timeout)}\n              options={TIMEOUT_OPTIONS}\n              onChange={this.handleTimeoutChanged}\n            ></TembaSelect>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import { createWebhookBasedNode } from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport { CallResthook } from 'flowTypes';\nimport { AssetType, RenderNode } from 'store/flowContext';\nimport { AssetEntry, NodeEditorSettings } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nimport { ResthookRouterFormState } from './ResthookRouterForm';\n\nexport const nodeToState = (settings: NodeEditorSettings): ResthookRouterFormState => {\n  let resthookAsset: AssetEntry = { value: null };\n  let resultName = { value: 'Result' };\n  let valid = false;\n\n  const originalAction = getOriginalAction(settings) as CallResthook;\n  if (originalAction && originalAction.type === Types.call_resthook) {\n    const resthook = originalAction.resthook;\n    resthookAsset = {\n      value: { id: resthook, name: resthook, type: AssetType.Resthook }\n    };\n    resultName = { value: originalAction.result_name };\n    valid = true;\n  }\n\n  return {\n    resthook: resthookAsset,\n    resultName,\n    valid\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ResthookRouterFormState\n): RenderNode => {\n  let uuid = createUUID();\n  const originalAction = getOriginalAction(settings);\n  if (originalAction) {\n    uuid = originalAction.uuid;\n  }\n\n  const newAction: CallResthook = {\n    uuid,\n    resthook: state.resthook.value.id,\n    type: Types.call_resthook,\n    result_name: state.resultName.value\n  };\n\n  return createWebhookBasedNode(newAction, settings.originalNode, false);\n};\n\nexport const getOriginalAction = (settings: NodeEditorSettings): CallResthook => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  if (action.type === Types.call_resthook) {\n    return action as CallResthook;\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { AssetEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport {\n  Alphanumeric,\n  Required,\n  shouldRequireIf,\n  StartIsNonNumeric,\n  validate\n} from 'store/validators';\n\nimport { nodeToState, stateToNode } from './helpers';\nimport styles from './ResthookRouterForm.module.scss';\nimport i18n from 'config/i18n';\n\n// TODO: Remove use of Function\nexport interface ResthookRouterFormState extends FormState {\n  resthook: AssetEntry;\n  resultName: StringEntry;\n}\n\nexport default class ResthookRouterForm extends React.PureComponent<\n  RouterFormProps,\n  ResthookRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(result: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), result, [\n      Required,\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  public handleResthookChanged(selected: Asset[], submitting = false): boolean {\n    const updates: Partial<ResthookRouterFormState> = {\n      resthook: validate(i18n.t('forms.resthook', 'Resthook'), selected[0], [\n        shouldRequireIf(submitting)\n      ])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // validate our resthook in case they haven't interacted\n    const valid = this.handleResthookChanged([this.state.resthook.value], true);\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  public getButtons(): ButtonSet {\n    return {\n      primary: { name: 'Ok', onClick: this.handleSave },\n      secondary: { name: 'Cancel', onClick: () => this.props.onClose(true) }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <AssetSelector\n          name={i18n.t('forms.resthook', 'Resthook')}\n          placeholder={i18n.t('forms.resthook_to_call', 'Select the resthook to call')}\n          assets={this.props.assetStore.resthooks}\n          entry={this.state.resthook}\n          searchable={true}\n          onChange={this.handleResthookChanged}\n        />\n        <div className={styles.result_name}>\n          {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        </div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport {\n  createCaseProps,\n  createRenderNode,\n  hasCases,\n  resolveRoutes\n} from 'components/flow/routers/helpers';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { Router, RouterTypes, SwitchRouter } from 'flowTypes';\nimport { AssetStore, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nimport { ResultRouterFormState } from './ResultRouterForm';\n\nexport const FIELD_NUMBER_OPTIONS: SelectOption[] = [\n  { value: '0', label: 'first' },\n  { value: '1', label: 'second' },\n  { value: '2', label: 'third' },\n  { value: '3', label: 'fourth' },\n  { value: '4', label: 'fifth' },\n  { value: '5', label: 'sixth' },\n  { value: '6', label: 'seventh' },\n  { value: '7', label: 'eighth' },\n  { value: '8', label: 'ninth' },\n  { value: '9', label: 'tenth' },\n  { value: '10', label: '11th' },\n  { value: '11', label: '12th' },\n  { value: '12', label: '13th' },\n  { value: '13', label: '14th' },\n  { value: '14', label: '15th' },\n  { value: '15', label: '16th' },\n  { value: '16', label: '17th' },\n  { value: '17', label: '18th' },\n  { value: '18', label: '19th' },\n  { value: '19', label: '20th' }\n];\n\nexport const getFieldOption = (value: number): SelectOption => {\n  return FIELD_NUMBER_OPTIONS.find((option: SelectOption) => option.value === '' + value);\n};\n\nexport const DELIMITER_OPTIONS: SelectOption[] = [\n  { value: ' ', label: 'spaces' },\n  { value: '.', label: 'periods' },\n  { value: '+', label: 'plusses' }\n];\n\nexport const getDelimiterOption = (value: string): SelectOption => {\n  return DELIMITER_OPTIONS.find((option: SelectOption) => option.value === value);\n};\n\nexport const nodeToState = (\n  settings: NodeEditorSettings,\n  assetStore: AssetStore\n): ResultRouterFormState => {\n  let initialCases: CaseProps[] = [];\n\n  // TODO: work out an incremental result name\n  let resultName: StringEntry = { value: '' };\n\n  let result: any = null;\n  let fieldNumber = 1;\n  let delimiter = ' ';\n  let shouldDelimit = false;\n\n  const type = getType(settings.originalNode);\n\n  if (\n    (settings.originalNode && type === Types.split_by_run_result) ||\n    type === Types.split_by_run_result_delimited\n  ) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n\n    if (router) {\n      if (hasCases(settings.originalNode.node)) {\n        initialCases = createCaseProps(router.cases, settings.originalNode);\n      }\n\n      resultName = { value: router.result_name || '' };\n    }\n\n    const config = settings.originalNode.ui.config;\n    if (config && config.operand) {\n      result =\n        config.operand.id in assetStore.results.items\n          ? assetStore.results.items[config.operand.id]\n          : null;\n    }\n\n    if (type === Types.split_by_run_result_delimited) {\n      fieldNumber = config.index;\n      delimiter = config.delimiter;\n      shouldDelimit = true;\n    }\n  }\n\n  return {\n    cases: initialCases,\n    resultName,\n    result: { value: result },\n    shouldDelimit,\n    fieldNumber,\n    delimiter,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ResultRouterFormState\n): RenderNode => {\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    state.cases,\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  let nodeType = Types.split_by_run_result;\n\n  const asset = state.result.value;\n  let operand = `@results.${asset.id}`;\n\n  const config: any = {\n    operand: {\n      id: asset.id,\n      type: asset.type,\n      name: asset.name\n    },\n    cases: caseConfig\n  };\n\n  if (state.shouldDelimit) {\n    config.index = state.fieldNumber;\n    config.delimiter = state.delimiter;\n    operand = `@(field(results.${asset.id}, ${state.fieldNumber}, \"${state.delimiter}\"))`;\n    nodeType = Types.split_by_run_result_delimited;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    categories,\n    cases,\n    operand,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    nodeType,\n    [],\n    config\n  );\n\n  return newRenderNode;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { AssetEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, shouldRequireIf, StartIsNonNumeric, validate } from 'store/validators';\nimport { small } from 'utils/reactselect';\n\nimport {\n  DELIMITER_OPTIONS,\n  FIELD_NUMBER_OPTIONS,\n  getDelimiterOption,\n  getFieldOption,\n  nodeToState,\n  stateToNode\n} from './helpers';\nimport styles from './ResultRouterForm.module.scss';\nimport i18n from 'config/i18n';\nimport { TembaSelectStyle } from 'temba/TembaSelect';\n\nexport interface ResultRouterFormState extends FormState {\n  result: AssetEntry;\n  cases: CaseProps[];\n  resultName: StringEntry;\n  shouldDelimit: boolean;\n\n  fieldNumber: number;\n  delimiter: string;\n}\n\nexport const leadInSpecId = 'lead-in';\n\nexport default class ResultRouterForm extends React.Component<\n  RouterFormProps,\n  ResultRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings, this.props.assetStore);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleResultChanged(selected: Asset[], submitting = false): boolean {\n    const updates: Partial<ResultRouterFormState> = {\n      result: validate(i18n.t('forms.result_to_split_on', 'Result to split on'), selected[0], [\n        shouldRequireIf(submitting)\n      ])\n    };\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    this.setState({ cases });\n  }\n\n  private handleSave(): void {\n    const valid = this.handleResultChanged([this.state.result.value], true);\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleShouldDelimitChanged(checked: boolean): void {\n    this.setState({ shouldDelimit: checked });\n  }\n\n  private handleFieldNumberChanged(selected: SelectOption): void {\n    this.setState({ fieldNumber: parseInt(selected.value, 10) });\n  }\n\n  private handleDelimiterChanged(selected: SelectOption): void {\n    this.setState({ delimiter: selected.value });\n  }\n\n  private renderField(): JSX.Element {\n    return (\n      <div className={styles.non_delimited}>\n        <div className={styles.lead_in}>If the flow result</div>\n        <div className={styles.result_select}>\n          <AssetSelector\n            entry={this.state.result}\n            styles={small as any}\n            name={i18n.t('forms.flow_result', 'Flow Result')}\n            placeholder=\"Select Result\"\n            searchable={false}\n            assets={this.props.assetStore.results}\n            onChange={this.handleResultChanged}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private renderFieldDelimited(): JSX.Element {\n    return (\n      <div className={styles.delimited}>\n        <div className={styles.lead_in}>If the</div>\n        <div className={styles.field_number}>\n          <SelectElement\n            key=\"field_number_select\"\n            style={TembaSelectStyle.small}\n            name={i18n.t('forms.field_number', 'Field Number')}\n            entry={{ value: getFieldOption(this.state.fieldNumber) }}\n            onChange={this.handleFieldNumberChanged}\n            options={FIELD_NUMBER_OPTIONS}\n          />\n        </div>\n        <div className={styles.lead_in_sub}>field of</div>\n        <div className={styles.result_select_delimited}>\n          <AssetSelector\n            entry={this.state.result}\n            styles={small as any}\n            name={i18n.t('forms.flow_result', 'Flow Result')}\n            placeholder={i18n.t('forms.select_result', 'Select Result')}\n            searchable={false}\n            assets={this.props.assetStore.results}\n            onChange={this.handleResultChanged}\n          />\n        </div>\n        <div className={styles.lead_in_sub}>delimited by</div>\n        <div className={styles.delimiter}>\n          <SelectElement\n            key=\"delimiter_select\"\n            style={TembaSelectStyle.small}\n            name={i18n.t('forms.delimiter', 'Delimiter')}\n            entry={{ value: getDelimiterOption(this.state.delimiter) }}\n            onChange={this.handleDelimiterChanged}\n            options={DELIMITER_OPTIONS}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n    const advanced: Tab = {\n      name: 'Advanced',\n      body: (\n        <div className={styles.should_delimit}>\n          <CheckboxElement\n            name={i18n.t('forms.delimit', 'Delimit')}\n            title={i18n.t('forms.delimit_result', 'Delimit Result')}\n            checked={this.state.shouldDelimit}\n            description={i18n.t(\n              'forms.delimit_result_description',\n              'Evaluate your rules against a delimited part of your result'\n            )}\n            onChange={this.handleShouldDelimitChanged}\n          />\n        </div>\n      ),\n      checked: this.state.shouldDelimit\n    };\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={[advanced]}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n\n        {this.state.shouldDelimit ? this.renderFieldDelimited() : this.renderField()}\n\n        <CaseList\n          data-spec=\"cases\"\n          cases={this.state.cases}\n          onCasesUpdated={this.handleCasesUpdated}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { createRenderNode } from 'components/flow/routers/helpers';\nimport { SubflowRouterFormState } from 'components/flow/routers/subflow/SubflowRouterForm';\nimport { SUBFLOW_OPERAND } from 'components/nodeeditor/constants';\nimport { Operators, Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport {\n  Case,\n  Category,\n  Exit,\n  Flow,\n  RouterTypes,\n  StartFlow,\n  StartFlowExitNames,\n  SwitchRouter,\n  SetRunResult,\n  AnyAction,\n  Action\n} from 'flowTypes';\nimport { Asset, AssetType, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nexport const nodeToState = (settings: NodeEditorSettings): SubflowRouterFormState => {\n  const params: { [key: string]: StringEntry } = {};\n  if (\n    getType(settings.originalNode) === Types.split_by_subflow ||\n    (settings.originalAction && settings.originalAction.type === Types.enter_flow)\n  ) {\n    let action = settings.originalAction as StartFlow;\n    if (!action || action.type !== Types.enter_flow) {\n      action = settings.originalNode.node.actions.find(\n        (action: Action) => action.type === Types.enter_flow\n      ) as StartFlow;\n    }\n\n    // look for any run result actions\n    settings.originalNode.node.actions.forEach((action: AnyAction) => {\n      if (action.type === Types.set_run_result) {\n        const setRunResult = action as SetRunResult;\n        params[setRunResult.name] = { value: setRunResult.value };\n      }\n    });\n\n    return { flow: { value: flowToAsset(action.flow) }, params, valid: true };\n  }\n\n  return {\n    flow: { value: null },\n    params: {},\n    valid: false\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: SubflowRouterFormState\n): RenderNode => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  const startFlowAction: StartFlow = {\n    uuid: action.uuid || createUUID(),\n    type: Types.enter_flow,\n    flow: assetToFlow(state.flow.value)\n  };\n\n  // If we're already a subflow, lean on those exits and cases\n  let exits: Exit[];\n  let cases: Case[];\n  let categories: Category[];\n\n  if (getType(settings.originalNode) === Types.split_by_subflow) {\n    ({ exits } = settings.originalNode.node);\n    ({ cases, categories } = settings.originalNode.node.router as SwitchRouter);\n  } else {\n    // Otherwise, let's create some new ones\n    exits = [\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      },\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      }\n    ];\n\n    categories = [\n      {\n        uuid: createUUID(),\n        name: StartFlowExitNames.Complete,\n        exit_uuid: exits[0].uuid\n      },\n      {\n        uuid: createUUID(),\n        name: StartFlowExitNames.Expired,\n        exit_uuid: exits[1].uuid\n      }\n    ];\n\n    cases = [\n      {\n        uuid: createUUID(),\n        type: Operators.has_only_text,\n        arguments: ['completed'],\n        category_uuid: categories[0].uuid\n      },\n      {\n        uuid: createUUID(),\n        arguments: ['expired'],\n        type: Operators.has_only_text,\n        category_uuid: categories[1].uuid\n      }\n    ];\n  }\n\n  const actions = [];\n\n  // add some set result actions if needed\n  Object.keys(state.params).forEach((key: string) => {\n    const value = state.params[key] ? state.params[key].value || '' : '';\n    if (value.trim().length > 0) {\n      const setResultAction: SetRunResult = {\n        uuid: createUUID(),\n        name: key,\n        value,\n        type: Types.set_run_result\n      };\n      actions.push(setResultAction);\n    }\n  });\n\n  actions.push(startFlowAction);\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    operand: SUBFLOW_OPERAND,\n    cases,\n    categories,\n    default_category_uuid: categories[categories.length - 1].uuid\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_subflow,\n    actions\n  );\n\n  return newRenderNode;\n};\n\nconst flowToAsset = (field: Flow = { uuid: '', name: '' }): Asset => ({\n  id: field.uuid,\n  name: field.name,\n  type: AssetType.Flow\n});\n\nconst assetToFlow = (asset: Asset): Flow => ({\n  uuid: asset.id,\n  name: asset.name\n});\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { RouterFormProps } from 'components/flow/props';\nimport { nodeToState, stateToNode } from 'components/flow/routers/subflow/helpers';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { Asset } from 'store/flowContext';\nimport { AssetEntry, FormState, mergeForm, StringEntry } from 'store/nodeEditor';\nimport { shouldRequireIf, validate } from 'store/validators';\nimport i18n from 'config/i18n';\nimport { fetchAsset } from 'external';\nimport styles from './SubflowRouterForm.module.scss';\nimport { Trans } from 'react-i18next';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\n\n// TODO: Remove use of Function\nexport interface SubflowRouterFormState extends FormState {\n  flow: AssetEntry;\n  params: { [name: string]: StringEntry };\n}\n\nexport default class SubflowRouterForm extends React.PureComponent<\n  RouterFormProps,\n  SubflowRouterFormState\n> {\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public componentDidMount() {\n    // we need to resolve our flow for it's parent refs\n    if (this.state.flow.value) {\n      fetchAsset(this.props.assetStore.flows, this.state.flow.value.id).then((flow: Asset) => {\n        this.handleFlowChanged([flow]);\n      });\n    }\n  }\n\n  public handleFlowChanged(flows: Asset[], submitting = false): boolean {\n    const flow = flows[0];\n\n    const updates: Partial<SubflowRouterFormState> = {\n      flow: validate(i18n.t('forms.flow', 'Flow'), flow, [shouldRequireIf(submitting)])\n    };\n\n    const params: { [key: string]: StringEntry } = {};\n    // ensure our parameters are initialized\n    if (flow && flow.content && flow.content.parent_refs) {\n      for (const key of flow.content.parent_refs) {\n        if (this.state.params[key]) {\n          params[key] = { ...this.state.params[key] };\n        } else {\n          params[key] = { value: '' };\n        }\n      }\n      updates.params = params;\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    // validate our flow in case they haven't interacted\n    this.handleFlowChanged([this.state.flow.value], true);\n\n    const hasFieldErrors = Object.keys(this.state.params).find((key: string) =>\n      hasErrors(this.state.params[key])\n    );\n\n    if (this.state.valid && !hasFieldErrors) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private handleFilter(asset: Asset): boolean {\n    // only show flows that match our flow type\n    return asset.content.type === this.context.config.flowType;\n  }\n\n  private handleParamChanged(text: string, name: string) {\n    const params = { ...this.state.params };\n    params[name] = { value: text };\n    this.setState({ params });\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const tabs: Tab[] = [];\n    const flow = this.state.flow.value;\n\n    const hasFieldErrors = !!Object.keys(this.state.params).find((key: string) =>\n      hasErrors(this.state.params[key])\n    );\n\n    if (flow && flow.content && flow.content.parent_refs.length > 0) {\n      tabs.push({\n        name: i18n.t('forms.enter_flow_parameters_tab', 'Parameters'),\n        body: (\n          <div>\n            <p className={styles.info}>\n              <Trans\n                i18nKey=\"forms.enter_flow_parameters_summary\"\n                values={{\n                  flow: this.state.flow.value.name,\n                  url: this.context.config.endpoints.editor + '/' + this.state.flow.value.id\n                }}\n              >\n                <a\n                  target=\"_\"\n                  href={this.context.config.endpoints.editor + '/' + this.state.flow.value.id}\n                >\n                  [[flow]]\n                </a>{' '}\n                expects the following parameters to be set by this flow. These can be set using a{' '}\n                <span>Save Flow Result</span> action or directly below.\n              </Trans>\n            </p>\n            <table className={styles.params}>\n              <tbody>\n                {flow.content.parent_refs.map((name: string) => {\n                  return (\n                    <tr key={'param_' + name} className={styles.param}>\n                      <td className={styles.param_name}>{name}</td>\n                      <td className={styles.param_input}>\n                        <TextInputElement\n                          name={name}\n                          showLabel={false}\n                          placeholder={name}\n                          onChange={(updatedText: string) => {\n                            this.handleParamChanged(updatedText, name);\n                          }}\n                          entry={this.state.params[name]}\n                          autocomplete={true}\n                        />\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        ),\n        hasErrors: hasFieldErrors,\n        checked: !!Object.keys(this.state.params).find(\n          (key: string) => this.state.params[key] && this.state.params[key].value.trim().length > 0\n        )\n      });\n    }\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <AssetSelector\n          name={i18n.t('forms.flow', 'Flow')}\n          placeholder=\"Select the flow to start\"\n          assets={this.props.assetStore.flows}\n          entry={this.state.flow}\n          searchable={true}\n          onFilter={this.handleFilter}\n          onChange={this.handleFlowChanged}\n        />\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { createRenderNode, resolveRoutes } from 'components/flow/routers/helpers';\nimport { WaitRouterFormState } from 'components/flow/routers/wait/WaitRouterForm';\nimport { DEFAULT_OPERAND, MEDIA_OPERAND } from 'components/nodeeditor/constants';\nimport { Type, Types } from 'config/interfaces';\nimport { HintTypes, Router, RouterTypes, SwitchRouter, Wait, WaitTypes } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport const nodeToState = (settings: NodeEditorSettings): WaitRouterFormState => {\n  let resultName: StringEntry = { value: 'Result' };\n\n  // look at the actual ui type instead of the hint here, we want results for any kind of wait\n  if (settings.originalNode && settings.originalNode.ui.type === Types.wait_for_response) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n    if (router) {\n      resultName = { value: router.result_name || '' };\n    }\n  }\n\n  return {\n    resultName,\n    valid: true\n  };\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: WaitRouterFormState,\n  typeConfig: Type\n): RenderNode => {\n  const { exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    [],\n    false,\n    settings.originalNode.node\n  );\n\n  const optionalRouter: Pick<Router, 'result_name'> = {};\n  if (state.resultName.value) {\n    optionalRouter.result_name = state.resultName.value;\n  }\n\n  let operand = DEFAULT_OPERAND;\n  const wait = { type: WaitTypes.msg } as Wait;\n  switch (typeConfig.type) {\n    case Types.wait_for_audio:\n      wait.hint = { type: HintTypes.audio };\n      operand = MEDIA_OPERAND;\n      break;\n    case Types.wait_for_image:\n      wait.hint = { type: HintTypes.image };\n      operand = MEDIA_OPERAND;\n      break;\n    case Types.wait_for_location:\n      wait.hint = { type: HintTypes.location };\n      operand = MEDIA_OPERAND;\n      break;\n    case Types.wait_for_video:\n      wait.hint = { type: HintTypes.video };\n      operand = MEDIA_OPERAND;\n      break;\n  }\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    default_category_uuid: defaultExit,\n    cases: [],\n    categories,\n    wait,\n    operand,\n    ...optionalRouter\n  };\n\n  const newRenderNode = createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.wait_for_response,\n    [],\n    { cases: caseConfig }\n  );\n\n  return newRenderNode;\n};\n","import { createWebhookBasedNode } from 'components/flow/routers/helpers';\nimport { WebhookRouterFormState } from 'components/flow/routers/webhook/WebhookRouterForm';\nimport { DEFAULT_BODY } from 'components/nodeeditor/constants';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { CallWebhook } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\n\nexport enum Methods {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  DELETE = 'DELETE',\n  HEAD = 'HEAD',\n  PATCH = 'PATCH'\n}\n\nexport interface MethodOption {\n  value: string;\n  label: string;\n}\n\ninterface HeaderMap {\n  [name: string]: string;\n}\n\nexport const GET_METHOD: MethodOption = {\n  value: Methods.GET,\n  label: Methods.GET\n};\n\nexport const METHOD_OPTIONS: MethodOption[] = [\n  GET_METHOD,\n  { value: Methods.POST, label: Methods.POST },\n  { value: Methods.PUT, label: Methods.PUT },\n  { value: Methods.DELETE, label: Methods.DELETE },\n  { value: Methods.HEAD, label: Methods.HEAD },\n  { value: Methods.PATCH, label: Methods.PATCH }\n];\n\nexport const getOriginalAction = (settings: NodeEditorSettings): CallWebhook => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  if (action.type === Types.call_webhook) {\n    return action as CallWebhook;\n  }\n};\n\nexport const nodeToState = (settings: NodeEditorSettings): WebhookRouterFormState => {\n  // TODO: work out an incremental result name\n  const resultName: StringEntry = { value: 'Result' };\n\n  const state: WebhookRouterFormState = {\n    headers: [],\n    resultName,\n    method: { value: GET_METHOD },\n    url: { value: '' },\n    body: { value: getDefaultBody(Methods.GET) },\n    valid: false\n  };\n\n  if (getType(settings.originalNode) === Types.split_by_webhook) {\n    const action = getOriginalAction(settings) as CallWebhook;\n\n    // add in our headers\n    for (const name of Object.keys(action.headers || []).sort()) {\n      state.headers.push({\n        value: {\n          uuid: createUUID(),\n          value: action.headers[name],\n          name\n        }\n      });\n    }\n\n    state.resultName = { value: action.result_name };\n    state.url = { value: action.url };\n    state.method = { value: { label: action.method, value: action.method } };\n    state.body = { value: action.body };\n    state.valid = true;\n  } else {\n    state.headers.push({\n      value: {\n        uuid: createUUID(),\n        name: 'Accept',\n        value: 'application/json'\n      }\n    });\n  }\n\n  // one empty header\n  state.headers.push({\n    value: {\n      uuid: createUUID(),\n      name: '',\n      value: ''\n    }\n  });\n\n  return state;\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: WebhookRouterFormState\n): RenderNode => {\n  const headers: HeaderMap = {};\n\n  for (const entry of state.headers) {\n    if (entry.value.name.trim().length !== 0) {\n      headers[entry.value.name] = entry.value.value;\n    }\n  }\n\n  let uuid = createUUID();\n\n  const originalAction = getOriginalAction(settings);\n  if (originalAction) {\n    uuid = originalAction.uuid;\n  }\n\n  const newAction: CallWebhook = {\n    uuid,\n    headers,\n    type: Types.call_webhook,\n    url: state.url.value,\n    body: state.body.value,\n    method: state.method.value.value as Methods,\n    result_name: state.resultName.value\n  };\n\n  return createWebhookBasedNode(newAction, settings.originalNode, false);\n};\n\nexport const getDefaultBody = (method: string): string => {\n  return method === Methods.GET ? '' : DEFAULT_BODY;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, StringEntry } from 'store/nodeEditor';\nimport { Alphanumeric, StartIsNonNumeric, validate } from 'store/validators';\n\nimport { nodeToState, stateToNode } from './helpers';\nimport styles from './WaitRouterForm.module.scss';\nimport i18n from 'config/i18n';\n\nexport interface WaitRouterFormState extends FormState {\n  resultName: StringEntry;\n}\n\nexport default class WaitRouterForm extends React.Component<RouterFormProps, WaitRouterFormState> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(\n        stateToNode(this.props.nodeSettings, this.state, this.props.typeConfig)\n      );\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div className={styles.result_name}>\n          {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        </div>\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport { getAllErrors } from 'components/flow/actions/helpers';\nimport { HeaderEntry } from 'components/flow/routers/webhook/WebhookRouterForm';\nimport styles from 'components/flow/routers/webhook/WebhookRouterForm.module.scss';\nimport FormElement from 'components/form/FormElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport * as React from 'react';\nimport { StringEntry, ValidationFailure } from 'store/nodeEditor';\nimport { HeaderName, validate } from 'store/validators';\nimport i18n from 'config/i18n';\n\n// TODO: move this into webhook router component\nexport interface Header {\n  uuid: string;\n  name: string;\n  value: string;\n}\n\nexport interface HeaderElementProps {\n  entry: HeaderEntry;\n  index: number;\n  onRemove: (header: Header) => void;\n  onChange: (header: Header, validationFailures: ValidationFailure[]) => void;\n  empty?: boolean;\n}\n\ninterface HeaderElementState {\n  name: StringEntry;\n  value: StringEntry;\n}\n\nexport const headerContainerSpecId = 'header-container';\nexport const nameContainerSpecId = 'name-container';\nexport const valueConatainerSpecId = 'value-container';\nexport const removeIcoSpecId = 'remove-icon';\n\nexport const HEADER_NAME_ERROR = i18n.t(\n  'errors.http_header_missing_name',\n  'HTTP headers must have a name'\n);\nexport const NAME_PLACEHOLDER = i18n.t('forms.webhook_header_name', 'Header Name');\nexport const VALUE_PLACEHOLDER = i18n.t('forms.value', 'Value');\n\nexport default class HeaderElement extends React.Component<HeaderElementProps, HeaderElementState> {\n  constructor(props: HeaderElementProps) {\n    super(props);\n\n    const header = this.props.entry.value;\n    const name = header.name || '';\n    const value = header.value || '';\n\n    this.state = {\n      name: { value: name },\n      value: { value }\n    };\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  private getHeader(): Header {\n    return {\n      name: this.state.name.value,\n      value: this.state.value.value,\n      uuid: this.props.entry.value.uuid\n    };\n  }\n\n  private handleChangeName(value: string): void {\n    const name = validate(i18n.t('forms.header_name', 'Header name'), value, [HeaderName]);\n    this.setState({ name: { value: name.value } }, () =>\n      this.props.onChange(\n        this.getHeader(),\n        getAllErrors(this.state.value).concat(getAllErrors(name))\n      )\n    );\n  }\n\n  private handleChangeValue(value: string): void {\n    this.setState({ value: { value } }, () => {\n      const name = validate(i18n.t('forms.header_name', 'Header name'), this.state.name.value, [\n        HeaderName\n      ]);\n      this.props.onChange(\n        this.getHeader(),\n        getAllErrors(this.state.value).concat(getAllErrors(name))\n      );\n    });\n  }\n\n  private handleRemove(): void {\n    this.props.onRemove(this.getHeader());\n  }\n\n  private getRemoveIco(): JSX.Element {\n    return (\n      <div className={styles.remove_ico} onClick={this.handleRemove} data-spec={removeIcoSpecId}>\n        <span className=\"fe-x\" />\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    const removeIco: JSX.Element = this.getRemoveIco();\n    return (\n      <FormElement name={i18n.t('forms.webhook_header', 'Header')} entry={this.props.entry}>\n        <div className={styles.header} data-spec={headerContainerSpecId}>\n          <div className={styles.header_name} data-spec={nameContainerSpecId}>\n            <TextInputElement\n              placeholder={NAME_PLACEHOLDER}\n              name={NAME_PLACEHOLDER}\n              onChange={this.handleChangeName}\n              entry={this.state.name}\n            />\n          </div>\n          <div className={styles.header_value} data-spec={valueConatainerSpecId}>\n            <TextInputElement\n              placeholder={VALUE_PLACEHOLDER}\n              name={VALUE_PLACEHOLDER}\n              onChange={this.handleChangeValue}\n              entry={this.state.value}\n              autocomplete={true}\n            />\n          </div>\n          {removeIco}\n        </div>\n      </FormElement>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport HeaderElement, { Header } from 'components/flow/routers/webhook/header/HeaderElement';\nimport {\n  METHOD_OPTIONS,\n  MethodOption,\n  Methods,\n  nodeToState,\n  stateToNode,\n  getDefaultBody\n} from 'components/flow/routers/webhook/helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport SelectElement from 'components/form/select/SelectElement';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormEntry, FormState, mergeForm, StringEntry, ValidationFailure } from 'store/nodeEditor';\nimport {\n  Alphanumeric,\n  Required,\n  shouldRequireIf,\n  StartIsNonNumeric,\n  validate,\n  ValidURL,\n  validateIf\n} from 'store/validators';\nimport { createUUID } from 'utils';\n\nimport styles from './WebhookRouterForm.module.scss';\nimport { Trans } from 'react-i18next';\nimport i18n from 'config/i18n';\n\nexport interface HeaderEntry extends FormEntry {\n  value: Header;\n}\n\nexport interface MethodEntry extends FormEntry {\n  value: MethodOption;\n}\n\nexport interface WebhookRouterFormState extends FormState {\n  headers: HeaderEntry[];\n  method: MethodEntry;\n  url: StringEntry;\n  body: StringEntry;\n  resultName: StringEntry;\n}\n\nexport default class WebhookRouterForm extends React.Component<\n  RouterFormProps,\n  WebhookRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n    this.state = nodeToState(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleUpdate(\n    keys: {\n      method?: MethodOption;\n      url?: string;\n      body?: string;\n      header?: Header;\n      removeHeader?: Header;\n      validationFailures?: ValidationFailure[];\n      resultName?: string;\n    },\n    submitting = false\n  ): boolean {\n    const updates: Partial<WebhookRouterFormState> = {};\n\n    let ensureEmptyHeader = false;\n    let toRemove: any[] = [];\n\n    if (keys.hasOwnProperty('method')) {\n      updates.method = { value: keys.method };\n\n      const oldMethod = this.state.method.value.value;\n      const newMethod = keys.method.value;\n\n      if (oldMethod !== newMethod) {\n        const existingContentTypeHeader = this.state.headers.find(\n          (header: HeaderEntry) => header.value.name.toLowerCase() === 'content-type'\n        );\n\n        // whenever our method changes, update the default body\n        updates.body = { value: getDefaultBody(newMethod) };\n\n        // switching from a GET, add a content-type\n        if (oldMethod === Methods.GET && newMethod !== Methods.GET) {\n          if (!existingContentTypeHeader) {\n            let uuid = createUUID();\n            // if we have an empty header, use that one\n            const lastHeader =\n              this.state.headers.length > 0\n                ? this.state.headers[this.state.headers.length - 1]\n                : null;\n            if (lastHeader && !lastHeader.value.name) {\n              uuid = lastHeader.value.uuid;\n            }\n            keys.header = { uuid, name: 'Content-Type', value: 'application/json' };\n          }\n        } else if (oldMethod !== Methods.GET && newMethod === Methods.GET) {\n          // remove content type if switching to a GET\n          if (existingContentTypeHeader) {\n            toRemove = [{ headers: [{ value: existingContentTypeHeader.value }] }];\n          }\n        }\n      }\n    }\n\n    if (keys.hasOwnProperty('url')) {\n      updates.url = validate(i18n.t('forms.url', 'URL'), keys.url, [\n        shouldRequireIf(submitting),\n        validateIf(ValidURL, keys.url.indexOf('@') === -1)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = validate(i18n.t('forms.result_name', 'Result Name'), keys.resultName, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('body')) {\n      updates.body = { value: keys.body };\n    }\n\n    if (keys.hasOwnProperty('header')) {\n      updates.headers = [{ value: keys.header, validationFailures: keys.validationFailures }];\n      ensureEmptyHeader = true;\n    }\n\n    if (keys.hasOwnProperty('removeHeader')) {\n      toRemove = [{ headers: [{ value: keys.removeHeader }] }];\n      ensureEmptyHeader = true;\n    }\n\n    const updated = mergeForm(this.state, updates, toRemove);\n\n    // update our form\n    this.setState(updated, () => {\n      // if we updated headers, check if we need a new one\n      if (ensureEmptyHeader) {\n        let needsHeader = true;\n        for (const header of this.state.headers) {\n          if (header.value.name.trim() === '') {\n            needsHeader = false;\n            break;\n          }\n        }\n\n        if (needsHeader) {\n          this.handleCreateHeader();\n        }\n      }\n    });\n    return updated.valid;\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Required,\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleMethodUpdate(method: MethodOption): boolean {\n    return this.handleUpdate({ method });\n  }\n\n  private handleUrlUpdate(url: string, name: string, submitting = false): boolean {\n    return this.handleUpdate({ url }, submitting);\n  }\n\n  private handleHeaderRemoved(removeHeader: Header): boolean {\n    return this.handleUpdate({ removeHeader });\n  }\n\n  private handleHeaderUpdated(header: Header, validationFailures: ValidationFailure[]): boolean {\n    return this.handleUpdate({ header, validationFailures });\n  }\n\n  private handleCreateHeader(): boolean {\n    return this.handleUpdate({\n      header: {\n        uuid: createUUID(),\n        name: '',\n        value: ''\n      }\n    });\n  }\n\n  private handleBodyUpdate(body: string): boolean {\n    return this.handleUpdate({ body });\n  }\n\n  private handleSave(): void {\n    // validate our url in case they haven't interacted\n    const valid = this.handleUpdate(\n      { url: this.state.url.value, resultName: this.state.resultName.value },\n      true\n    );\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const headerElements: JSX.Element[] = this.state.headers.map(\n      (header: HeaderEntry, index: number, arr: HeaderEntry[]) => {\n        return (\n          <div key={`header_${header.value.uuid}`}>\n            <HeaderElement\n              entry={header}\n              onRemove={this.handleHeaderRemoved}\n              onChange={this.handleHeaderUpdated}\n              index={index}\n            />\n          </div>\n        );\n      }\n    );\n\n    const tabs: Tab[] = [];\n    tabs.push({\n      name: 'HTTP Headers',\n      hasErrors: !!this.state.headers.find((header: HeaderEntry) => hasErrors(header)),\n      body: (\n        <>\n          <p className={styles.info}>\n            <Trans i18nKey=\"forms.webhook_header_summary\">\n              Add any additional headers below that you would like to send along with your request.\n            </Trans>\n          </p>\n          {headerElements}\n        </>\n      ),\n      checked: this.state.headers.length > 1\n    });\n\n    const method = this.state.method.value.value;\n    const name = this.state.method.value.label + ' ' + i18n.t('body', 'Body');\n    tabs.push({\n      name,\n      body: (\n        <div key=\"post_body\" className={styles.body_form}>\n          <h4>{name}</h4>\n          <p>\n            <Trans\n              i18nKey=\"forms.webhook_body_summary\"\n              values={{ method: this.state.method.value.label }}\n            >\n              Modify the body of the [[method]] request that will be sent to your webhook.\n            </Trans>\n          </p>\n          <TextInputElement\n            __className={styles.req_body}\n            name={name}\n            showLabel={false}\n            entry={this.state.body}\n            onChange={this.handleBodyUpdate}\n            helpText={\n              <Trans\n                i18nKey=\"forms.webhook_body_summary\"\n                values={{ method: this.state.method.value.label }}\n              >\n                Modify the body of the [[method]] request that will be sent to your webhook.\n              </Trans>\n            }\n            autocomplete={true}\n            textarea={true}\n          />\n        </div>\n      ),\n      checked: this.state.body.value !== getDefaultBody(method)\n    });\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <div style={{ display: 'flex' }}>\n          <div className={styles.method}>\n            <SelectElement\n              key=\"method_select\"\n              name={i18n.t('forms.method', 'Method')}\n              entry={this.state.method}\n              onChange={this.handleMethodUpdate}\n              options={METHOD_OPTIONS}\n            />\n          </div>\n          <div className={styles.url}>\n            <TextInputElement\n              name={i18n.t('forms.url', 'URL')}\n              placeholder={i18n.t('forms.enter_a_url', 'Enter a URL')}\n              entry={this.state.url}\n              onChange={this.handleUrlUpdate}\n              autocomplete={true}\n            />\n          </div>\n        </div>\n        <div className={styles.instructions}>\n          <p>\n            <Trans i18nKey=\"forms.webhook_help\">\n              If your server responds with JSON, each property will be added to the Flow.\n            </Trans>\n          </p>\n          <pre className={styles.code}>\n            {'{ \"product\": \"Solar Charging Kit\", \"stock level\": 32 }'}\n          </pre>\n          <p>\n            <Trans i18nKey=\"forms.webhook_example\">\n              This response would add <span className={styles.example}>@webhook.product</span> and{' '}\n              <span className={styles.example}>@webhook[\"stock level\"]</span> for use in the flow.\n            </Trans>\n          </p>\n        </div>\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import * as React from 'react';\nimport { CallClassifier } from 'flowTypes';\nimport { renderAsset } from '../helpers';\nimport { AssetType } from 'store/flowContext';\nimport { fakePropType } from 'config/ConfigProvider';\n\nconst CallClassifierComp: React.SFC<CallClassifier> = (\n  { classifier },\n  context: any\n): JSX.Element => {\n  return renderAsset(\n    {\n      id: classifier.uuid,\n      name: classifier.name,\n      type: AssetType.Classifier\n    },\n    context.config.endpoints\n  );\n};\n\nCallClassifierComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default CallClassifierComp;\n","import ConfigProvider from 'config/ConfigProvider';\nimport { getOperatorConfig, operatorConfigList } from 'config/operatorConfigs';\nimport { getTypeConfig, typeConfigList } from 'config/typeConfigs';\n\nexport { typeConfigList, getTypeConfig, operatorConfigList, getOperatorConfig };\n\nexport default ConfigProvider;\n","import {\n  hasCases,\n  createCaseProps,\n  resolveRoutes,\n  ResolvedRoutes,\n  createRenderNode\n} from 'components/flow/routers/helpers';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { Types, Operators, HIDDEN } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { CallClassifier, SwitchRouter, Case, Exit, Category, RouterTypes } from 'flowTypes';\nimport { RenderNode, AssetType } from 'store/flowContext';\nimport { NodeEditorSettings, StringEntry, AssetEntry } from 'store/nodeEditor';\nimport { createUUID, scalarArrayEquals, snakify } from 'utils';\nimport { ClassifyRouterFormState } from 'components/flow/routers/classify/ClassifyRouterForm';\nimport { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport { getOperatorConfig } from 'config';\n\nexport const getOriginalAction = (settings: NodeEditorSettings): CallClassifier => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  if (action.type === Types.call_classifier) {\n    return action as CallClassifier;\n  }\n};\n\nexport const nodeToState = (settings: NodeEditorSettings): ClassifyRouterFormState => {\n  // TODO: work out an incremental result name\n  const resultName: StringEntry = { value: 'Result' };\n  let initialCases: CaseProps[] = [];\n\n  let operand = DEFAULT_OPERAND;\n  let classifier: AssetEntry = { value: null };\n\n  let hiddenCases: CaseProps[] = [];\n\n  if (getType(settings.originalNode) === Types.split_by_intent) {\n    const router = settings.originalNode.node.router as SwitchRouter;\n\n    if (hasCases(settings.originalNode.node)) {\n      initialCases = createCaseProps(router.cases, settings.originalNode);\n\n      hiddenCases = initialCases.filter(\n        (kase: CaseProps) => getOperatorConfig(kase.kase.type).visibility === HIDDEN\n      );\n\n      initialCases = initialCases.filter(\n        (kase: CaseProps) => getOperatorConfig(kase.kase.type).visibility !== HIDDEN\n      );\n    }\n\n    const action = getOriginalAction(settings) as CallClassifier;\n    const { uuid: id, name } = action.classifier;\n    classifier = { value: { id, name, type: AssetType.Classifier } };\n    operand = action.input;\n  }\n\n  const state: ClassifyRouterFormState = {\n    hiddenCases,\n    resultName,\n    classifier,\n    operand: { value: operand },\n    cases: initialCases,\n    valid: true\n  };\n\n  return state;\n};\n\nexport interface Route {\n  type: Operators;\n  arguments: string[];\n  name: 'Other';\n}\n\nexport const ensureRoute = (routes: ResolvedRoutes, route: Route) => {\n  const existingCasePosition = routes.cases.findIndex(\n    kase => kase.type === route.type && scalarArrayEquals(kase.arguments, route.arguments)\n  );\n\n  // if it already exists, make sure it's at the end\n  if (existingCasePosition >= 0) {\n    // already in the right place we are done\n    if (existingCasePosition === routes.cases.length - 1) {\n      return;\n    }\n\n    const [existingCase] = routes.cases.splice(existingCasePosition, 1);\n    routes.cases.push(existingCase);\n\n    return;\n  }\n\n  const exit: Exit = {\n    uuid: createUUID()\n  };\n\n  const category: Category = {\n    uuid: createUUID(),\n    name: route.name,\n    exit_uuid: exit.uuid\n  };\n\n  // otherwise let's add it\n  const kase: Case = {\n    uuid: createUUID(),\n    type: route.type,\n    arguments: route.arguments,\n    category_uuid: category.uuid\n  };\n\n  routes.categories.push(category);\n  routes.cases.push(kase);\n\n  // our new exit should go right in front of the default exit\n  routes.exits.splice(routes.exits.length - 1, 0, exit);\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: ClassifyRouterFormState\n): RenderNode => {\n  let uuid = createUUID();\n\n  const routes = resolveRoutes(\n    [...state.cases, ...state.hiddenCases],\n    false,\n    settings.originalNode.node,\n    'Failure'\n  );\n\n  // make sure we have an other route since failure is our default\n  ensureRoute(routes, {\n    type: Operators.has_category,\n    arguments: ['Success', 'Skipped'],\n    name: 'Other'\n  });\n\n  const originalAction = getOriginalAction(settings);\n  if (originalAction) {\n    uuid = originalAction.uuid;\n  }\n\n  const routerResultName = state.resultName.value;\n  const actionResultName = '_' + routerResultName + ' Classification';\n\n  const newAction: CallClassifier = {\n    uuid,\n    type: Types.call_classifier,\n    result_name: actionResultName,\n    input: state.operand.value,\n    classifier: {\n      uuid: state.classifier.value.id,\n      name: state.classifier.value.name\n    }\n  };\n\n  const router: SwitchRouter = {\n    cases: routes.cases,\n    operand: `@results.${snakify(actionResultName)}`,\n    categories: routes.categories,\n    type: RouterTypes.switch,\n    default_category_uuid: routes.defaultCategory,\n    result_name: routerResultName\n  };\n\n  return createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    routes.exits,\n    Types.split_by_intent,\n    [newAction]\n  );\n};\n\nexport const createEmptyCase = (): CaseProps => {\n  const uuid = createUUID();\n  return {\n    uuid,\n    kase: {\n      uuid,\n      type: Operators.has_top_intent,\n      arguments: ['', ''],\n      category_uuid: null\n    },\n    categoryName: '',\n    valid: true\n  };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet, Tab } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { nodeToState, stateToNode, createEmptyCase } from './helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, mergeForm, StringEntry, AssetEntry } from 'store/nodeEditor';\nimport {\n  Alphanumeric,\n  Required,\n  shouldRequireIf,\n  StartIsNonNumeric,\n  validate\n} from 'store/validators';\nimport CaseList, { CaseProps } from 'components/flow/routers/caselist/CaseList';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport { Asset } from 'store/flowContext';\nimport { renderIf } from 'utils';\nimport { intentOperatorList } from 'config/operatorConfigs';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\nimport { DEFAULT_OPERAND } from 'components/nodeeditor/constants';\nimport { fetchAsset } from 'external';\nimport styles from './ClassifyRouterForm.module.scss';\nimport i18n from 'config/i18n';\n\nexport interface ClassifyRouterFormState extends FormState {\n  hiddenCases: CaseProps[];\n  resultName: StringEntry;\n  classifier: AssetEntry;\n  cases: CaseProps[];\n  operand: StringEntry;\n}\n\nexport default class ClassifyRouterForm extends React.Component<\n  RouterFormProps,\n  ClassifyRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n\n    // we need to resolve our classifier for intent selection\n    if (this.state.classifier.value) {\n      fetchAsset(this.props.assetStore.classifiers, this.state.classifier.value.id).then(\n        (classifier: Asset) => {\n          this.handleUpdate({ classifier });\n        }\n      );\n    }\n  }\n\n  private handleUpdate(\n    keys: {\n      resultName?: string;\n      classifier?: Asset;\n    },\n    submitting = false\n  ): boolean {\n    const updates: Partial<ClassifyRouterFormState> = {};\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = validate(i18n.t('forms.result_name', 'Result Name'), keys.resultName, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('classifier')) {\n      updates.classifier = validate(i18n.t('forms.classifier', 'Classifier'), keys.classifier, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n\n    // update our form\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleCasesUpdated(cases: CaseProps[]): void {\n    const invalidCase = cases.find((caseProps: CaseProps) => !caseProps.valid);\n    this.setState({ cases, valid: !invalidCase });\n  }\n\n  private handleUpdateResultName(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Required,\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleSave(): void {\n    // if we still have invalid cases, don't move forward\n    const invalidCase = this.state.cases.find((caseProps: CaseProps) => !caseProps.valid);\n    if (invalidCase) {\n      return;\n    }\n\n    // validate our result name in case they haven't interacted\n    const valid = this.handleUpdate(\n      {\n        resultName: this.state.resultName.value,\n        classifier: this.state.classifier.value\n      },\n      true\n    );\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private handleClassifierUpdated(selected: Asset[]): void {\n    this.handleUpdate({ classifier: selected[0] });\n  }\n\n  private handleOperandUpdated(value: string): void {\n    this.setState({\n      operand: validate(i18n.t('forms.operand', 'Operand'), value, [Required])\n    });\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private dialog: Dialog;\n\n  private renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    const tabs: Tab[] = [\n      {\n        name: 'Classifier Input',\n        checked: this.state.operand.value !== DEFAULT_OPERAND,\n        body: (\n          <>\n            <p>\n              Enter an expression to use as the input to your classifier. To classify the last\n              response from the contact use <code>{DEFAULT_OPERAND}</code>.\n            </p>\n            <TextInputElement\n              name={i18n.t('forms.operand', 'Operand')}\n              showLabel={false}\n              autocomplete={true}\n              onChange={this.handleOperandUpdated}\n              entry={this.state.operand}\n            />\n          </>\n        )\n      }\n    ];\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        tabs={tabs}\n        ref={ele => {\n          this.dialog = ele;\n        }}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>\n          <span>Run </span>\n          <span\n            className={styles.link}\n            onClick={() => {\n              this.dialog.showTab(0);\n            }}\n          >\n            {this.state.operand.value === DEFAULT_OPERAND\n              ? 'the last response'\n              : this.state.operand.value}\n          </span>\n          <span> through the classifier...</span>\n        </p>\n        <AssetSelector\n          key=\"select_classifier\"\n          name={i18n.t('forms.classifier', 'Classifier')}\n          placeholder=\"Select the classifier to use\"\n          assets={this.props.assetStore.classifiers}\n          onChange={this.handleClassifierUpdated}\n          entry={this.state.classifier}\n        />\n\n        {renderIf(!!this.state.classifier.value)(\n          <CaseList\n            data-spec=\"cases\"\n            cases={this.state.cases}\n            onCasesUpdated={this.handleCasesUpdated}\n            operators={intentOperatorList}\n            createEmptyCase={createEmptyCase}\n            classifier={this.state.classifier.value}\n          />\n        )}\n\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import { SCHEMES, Scheme, getType } from 'config/typeConfigs';\nimport { SelectOption } from 'components/form/select/SelectElement';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport { SchemeRouterFormState } from './SchemeRouterForm';\nimport { getSwitchRouter, resolveRoutes, createRenderNode } from '../helpers';\nimport { RenderNode } from 'store/flowContext';\nimport { SwitchRouter, FlowNode, RouterTypes, Case } from 'flowTypes';\nimport { CaseProps } from '../caselist/CaseList';\nimport { createUUID } from 'utils';\nimport { Operators, Types } from 'config/interfaces';\nimport { SCHEMES_OPERAND } from 'components/nodeeditor/constants';\n\nexport const getChannelTypeOptions = (): SelectOption[] => {\n  // get our scheme list as select options, ignore hidden schemes\n  return SCHEMES.filter((scheme: Scheme) => !scheme.excludeFromSplit).map((scheme: Scheme) => {\n    return { value: scheme.scheme, label: scheme.name };\n  });\n};\n\nexport const nodeToState = (settings: NodeEditorSettings): SchemeRouterFormState => {\n  const state: SchemeRouterFormState = {\n    schemes: { value: [] },\n    resultName: { value: '' },\n    valid: false\n  };\n\n  if (getType(settings.originalNode) === Types.split_by_scheme) {\n    state.schemes.value = extractSchemes(settings.originalNode.node);\n    state.resultName = {\n      value: (settings.originalNode.node.router as SwitchRouter).result_name || ''\n    };\n    state.valid = true;\n  }\n\n  return state;\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: SchemeRouterFormState\n): RenderNode => {\n  let orginalCases: Case[] = [];\n  if (getType(settings.originalNode) === Types.split_by_scheme) {\n    orginalCases = getSwitchRouter(settings.originalNode.node).cases;\n  }\n\n  const currentCases = schemesToCases(state.schemes.value, orginalCases);\n\n  const { cases, exits, defaultCategory: defaultExit, caseConfig, categories } = resolveRoutes(\n    currentCases,\n    false,\n    settings.originalNode.node\n  );\n\n  const router: SwitchRouter = {\n    type: RouterTypes.switch,\n    cases,\n    categories,\n    default_category_uuid: defaultExit,\n    operand: SCHEMES_OPERAND,\n    result_name: state.resultName.value\n  };\n\n  return createRenderNode(\n    settings.originalNode.node.uuid,\n    router,\n    exits,\n    Types.split_by_scheme,\n    [],\n    { cases: caseConfig }\n  );\n};\n\nexport const extractSchemes = (node: FlowNode): SelectOption[] => {\n  let schemes: SelectOption[] = [];\n  const router = getSwitchRouter(node);\n  const selectOptions = getChannelTypeOptions();\n\n  if (router) {\n    schemes = (router as SwitchRouter).cases\n      .map(kase => {\n        if (kase.arguments) {\n          const [scheme] = kase.arguments;\n          return selectOptions.find((option: SelectOption) => option.value === scheme);\n        }\n        return null;\n      })\n      .filter((option: SelectOption) => option !== null);\n  }\n  return schemes;\n};\n\nexport const schemesToCases = (\n  schemes: SelectOption[] = [],\n  originalCases: Case[]\n): CaseProps[] => {\n  return schemes.map(({ value, label }: SelectOption) => {\n    // try to use the same case uuids for consistency\n    const originalCase = originalCases.find((kase: Case) => kase.arguments[0] === value);\n    const uuid = originalCase ? originalCase.uuid : createUUID();\n    return {\n      uuid: createUUID(),\n      kase: {\n        uuid,\n        type: Operators.has_only_phrase,\n        arguments: [value],\n        category_uuid: ''\n      },\n      categoryName: label,\n      valid: true\n    };\n  });\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { RouterFormProps } from 'components/flow/props';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { FormState, mergeForm, StringEntry, SelectOptionArrayEntry } from 'store/nodeEditor';\nimport { Required, validate } from 'store/validators';\nimport i18n from 'config/i18n';\nimport { getChannelTypeOptions, nodeToState, stateToNode } from './helpers';\nimport SelectElement, { SelectOption } from 'components/form/select/SelectElement';\nimport { renderIssues } from 'components/flow/actions/helpers';\n\nexport interface SchemeRouterFormState extends FormState {\n  schemes: SelectOptionArrayEntry;\n  resultName: StringEntry;\n}\n\nexport default class SchemeRouterForm extends React.Component<\n  RouterFormProps,\n  SchemeRouterFormState\n> {\n  public static contextTypes = {\n    endpoints: fakePropType,\n    assetService: fakePropType\n  };\n\n  constructor(props: RouterFormProps) {\n    super(props);\n    this.state = nodeToState(this.props.nodeSettings);\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleSchemesChanged(schemes: SelectOption[]): void {\n    this.handleUpdate({ schemes });\n  }\n\n  private handleUpdateResultName(resultName: string): void {\n    this.handleUpdate({ resultName });\n  }\n\n  private handleUpdate(keys: { schemes?: SelectOption[]; resultName?: string }): boolean {\n    const updates: Partial<SchemeRouterFormState> = {};\n\n    if (keys.hasOwnProperty('schemes')) {\n      updates.schemes = validate(i18n.t('forms.split_by_scheme', 'Channel types'), keys.schemes, [\n        Required\n      ]);\n    }\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = { value: keys.resultName };\n    }\n\n    const updated = mergeForm(this.state, updates);\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleSave(): void {\n    if (this.state.valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  public render(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog title={typeConfig.name} headerClass={typeConfig.type} buttons={this.getButtons()}>\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>\n          {i18n.t(\n            'forms.split_by_scheme_summary',\n            \"The contact's URN is the address they used to reach you such as their phone number or a Facebook ID. Select which URN types to split by below.\"\n          )}\n        </p>\n        <SelectElement\n          key=\"channel_type_select\"\n          name={i18n.t('forms.channel_type', 'Channel Type')}\n          placeholder={i18n.t(\n            'forms.split_by_channel_placeholder',\n            'Select the channels to split by'\n          )}\n          entry={this.state.schemes}\n          onChange={this.handleSchemesChanged}\n          options={getChannelTypeOptions()}\n          multi={true}\n        />\n        {createResultNameInput(this.state.resultName, this.handleUpdateResultName)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n}\n","import { createWebhookBasedNode } from 'components/flow/routers/helpers';\nimport { Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { OpenTicket } from 'flowTypes';\nimport { RenderNode, AssetType } from 'store/flowContext';\nimport { NodeEditorSettings, AssetEntry } from 'store/nodeEditor';\nimport { createUUID } from 'utils';\nimport { TicketRouterFormState } from 'components/flow/routers/ticket/TicketRouterForm';\n\nexport const nodeToState = (settings: NodeEditorSettings): TicketRouterFormState => {\n  let ticketer: AssetEntry = { value: null };\n  let subject = { value: '@flow.name' };\n  let body = { value: '@results' };\n  let resultName = { value: 'Result' };\n\n  if (getType(settings.originalNode) === Types.split_by_ticket) {\n    const action = getOriginalAction(settings) as OpenTicket;\n\n    const { uuid: id, name } = action.ticketer;\n    ticketer = { value: { id, name, type: AssetType.Ticketer } };\n    subject = { value: action.subject };\n    body = { value: action.body };\n    resultName = { value: action.result_name };\n  }\n\n  const state: TicketRouterFormState = {\n    ticketer,\n    subject,\n    body,\n    resultName,\n    valid: true\n  };\n\n  return state;\n};\n\nexport const stateToNode = (\n  settings: NodeEditorSettings,\n  state: TicketRouterFormState\n): RenderNode => {\n  let uuid = createUUID();\n  const originalAction = getOriginalAction(settings);\n  if (originalAction) {\n    uuid = originalAction.uuid;\n  }\n\n  const newAction: OpenTicket = {\n    uuid,\n    type: Types.open_ticket,\n    ticketer: {\n      uuid: state.ticketer.value.id,\n      name: state.ticketer.value.name\n    },\n    subject: state.subject.value,\n    body: state.body.value,\n    result_name: state.resultName.value\n  };\n\n  return createWebhookBasedNode(newAction, settings.originalNode, true);\n};\n\nexport const getOriginalAction = (settings: NodeEditorSettings): OpenTicket => {\n  const action =\n    settings.originalAction ||\n    (settings.originalNode.node.actions.length > 0 && settings.originalNode.node.actions[0]);\n\n  if (action.type === Types.open_ticket) {\n    return action as OpenTicket;\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { hasErrors, renderIssues } from 'components/flow/actions/helpers';\nimport { RouterFormProps } from 'components/flow/props';\nimport { nodeToState, stateToNode } from './helpers';\nimport { createResultNameInput } from 'components/flow/routers/widgets';\nimport TypeList from 'components/nodeeditor/TypeList';\nimport * as React from 'react';\nimport { FormState, mergeForm, StringEntry, AssetEntry } from 'store/nodeEditor';\nimport {\n  Alphanumeric,\n  Required,\n  shouldRequireIf,\n  StartIsNonNumeric,\n  validate\n} from 'store/validators';\nimport AssetSelector from 'components/form/assetselector/AssetSelector';\nimport { Asset } from 'store/flowContext';\nimport { fetchAsset } from 'external';\nimport styles from './TicketRouterForm.module.scss';\nimport i18n from 'config/i18n';\nimport TextInputElement from 'components/form/textinput/TextInputElement';\n\nexport interface TicketRouterFormState extends FormState {\n  ticketer: AssetEntry;\n  subject: StringEntry;\n  body: StringEntry;\n  resultName: StringEntry;\n}\n\nexport default class TicketRouterForm extends React.Component<\n  RouterFormProps,\n  TicketRouterFormState\n> {\n  constructor(props: RouterFormProps) {\n    super(props);\n\n    this.state = nodeToState(this.props.nodeSettings);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n\n    // we need to resolve our ticketer asset\n    if (this.state.ticketer.value) {\n      fetchAsset(this.props.assetStore.ticketers, this.state.ticketer.value.id).then(\n        (ticketer: Asset) => {\n          this.handleUpdate({ ticketer });\n        }\n      );\n    }\n  }\n\n  private handleUpdate(\n    keys: {\n      ticketer?: Asset;\n      subject?: string;\n      body?: string;\n      resultName?: string;\n    },\n    submitting = false\n  ): boolean {\n    const updates: Partial<TicketRouterFormState> = {};\n\n    if (keys.hasOwnProperty('ticketer')) {\n      updates.ticketer = validate(i18n.t('forms.ticketer', 'Ticketer'), keys.ticketer, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('subject')) {\n      updates.subject = validate(i18n.t('forms.subject', 'Subject'), keys.subject, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('body')) {\n      updates.body = validate(i18n.t('forms.body', 'Body'), keys.body, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    if (keys.hasOwnProperty('resultName')) {\n      updates.resultName = validate(i18n.t('forms.result_name', 'Result Name'), keys.resultName, [\n        shouldRequireIf(submitting)\n      ]);\n    }\n\n    const updated = mergeForm(this.state, updates);\n\n    // update our form\n    this.setState(updated);\n    return updated.valid;\n  }\n\n  private handleTicketerUpdate(selected: Asset[]): void {\n    this.handleUpdate({ ticketer: selected[0] });\n  }\n\n  private handleSubjectUpdate(subject: string, name: string, submitting = false): boolean {\n    return this.handleUpdate({ subject }, submitting);\n  }\n\n  private handleBodyUpdate(body: string): boolean {\n    return this.handleUpdate({ body });\n  }\n\n  private handleResultNameUpdate(value: string): void {\n    const resultName = validate(i18n.t('forms.result_name', 'Result Name'), value, [\n      Required,\n      Alphanumeric,\n      StartIsNonNumeric\n    ]);\n    this.setState({\n      resultName,\n      valid: this.state.valid && !hasErrors(resultName)\n    });\n  }\n\n  private handleSave(): void {\n    // validate all fields in case they haven't interacted\n    const valid = this.handleUpdate(\n      {\n        ticketer: this.state.ticketer.value,\n        subject: this.state.subject.value,\n        body: this.state.body.value,\n        resultName: this.state.resultName.value\n      },\n      true\n    );\n\n    if (valid) {\n      this.props.updateRouter(stateToNode(this.props.nodeSettings, this.state));\n      this.props.onClose(false);\n    }\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: { name: i18n.t('buttons.ok', 'Ok'), onClick: this.handleSave },\n      secondary: {\n        name: i18n.t('buttons.cancel', 'Cancel'),\n        onClick: () => this.props.onClose(true)\n      }\n    };\n  }\n\n  private dialog: Dialog;\n\n  private renderEdit(): JSX.Element {\n    const typeConfig = this.props.typeConfig;\n\n    return (\n      <Dialog\n        title={typeConfig.name}\n        headerClass={typeConfig.type}\n        buttons={this.getButtons()}\n        ref={ele => {\n          this.dialog = ele;\n        }}\n      >\n        <TypeList __className=\"\" initialType={typeConfig} onChange={this.props.onTypeChange} />\n        <p>\n          <span>Open ticket via... </span>\n        </p>\n        <AssetSelector\n          key=\"select_ticketer\"\n          name={i18n.t('forms.ticketer', 'Ticketer')}\n          placeholder=\"Select the ticketing service to use\"\n          assets={this.props.assetStore.ticketers}\n          onChange={this.handleTicketerUpdate}\n          entry={this.state.ticketer}\n        />\n        <div className={styles.subject}>\n          <TextInputElement\n            name={i18n.t('forms.subject', 'Subject')}\n            placeholder={i18n.t('forms.enter_a_subject', 'Enter a subject')}\n            entry={this.state.subject}\n            onChange={this.handleSubjectUpdate}\n            autocomplete={true}\n          />\n        </div>\n        <div className={styles.body}>\n          <TextInputElement\n            name={i18n.t('forms.body', 'Body')}\n            placeholder={i18n.t('forms.enter_a_body', 'Enter a body')}\n            entry={this.state.body}\n            onChange={this.handleBodyUpdate}\n            autocomplete={true}\n            textarea={true}\n          />\n        </div>\n\n        {createResultNameInput(this.state.resultName, this.handleResultNameUpdate)}\n        {renderIssues(this.props)}\n      </Dialog>\n    );\n  }\n\n  public render(): JSX.Element {\n    return this.renderEdit();\n  }\n}\n","import * as React from 'react';\nimport { OpenTicket } from 'flowTypes';\nimport { renderAsset } from '../helpers';\nimport { AssetType } from 'store/flowContext';\nimport { fakePropType } from 'config/ConfigProvider';\n\nconst OpenTicketComp: React.SFC<OpenTicket> = ({ ticketer }, context: any): JSX.Element => {\n  return renderAsset(\n    {\n      id: ticketer.uuid,\n      name: ticketer.name,\n      type: AssetType.Ticketer\n    },\n    context.config.endpoints\n  );\n};\n\nOpenTicketComp.contextTypes = {\n  config: fakePropType\n};\n\nexport default OpenTicketComp;\n","import AddLabelsComp from 'components/flow/actions/addlabels/AddLabels';\nimport AddLabelsForm from 'components/flow/actions/addlabels/AddLabelsForm';\nimport AddURNComp from 'components/flow/actions/addurn/AddURN';\nimport AddURNForm from 'components/flow/actions/addurn/AddURNForm';\nimport CallResthookComp from 'components/flow/actions/callresthook/CallResthook';\nimport CallWebhookComp from 'components/flow/actions/callwebhook/CallWebhook';\nimport AddGroupsForm from 'components/flow/actions/changegroups/addgroups/AddGroupsForm';\nimport ChangeGroupsComp from 'components/flow/actions/changegroups/ChangeGroups';\nimport RemoveGroupsForm from 'components/flow/actions/changegroups/removegroups/RemoveGroupsForm';\nimport KeyLocalizationForm from 'components/flow/actions/localization/KeyLocalizationForm';\nimport MsgLocalizationForm from 'components/flow/actions/localization/MsgLocalizationForm';\nimport MissingComp from 'components/flow/actions/missing/Missing';\nimport PlayAudioComp from 'components/flow/actions/playaudio/PlayAudio';\nimport PlayAudioForm from 'components/flow/actions/playaudio/PlayAudioForm';\nimport SayMsgComp from 'components/flow/actions/saymsg/SayMsg';\nimport SayMsgForm from 'components/flow/actions/saymsg/SayMsgForm';\nimport SendBroadcastComp from 'components/flow/actions/sendbroadcast/SendBroadcast';\nimport SendBroadcastForm from 'components/flow/actions/sendbroadcast/SendBroadcastForm';\nimport SendEmailComp from 'components/flow/actions/sendemail/SendEmail';\nimport SendEmailForm from 'components/flow/actions/sendemail/SendEmailForm';\nimport SendMsgComp from 'components/flow/actions/sendmsg/SendMsg';\nimport SendMsgForm from 'components/flow/actions/sendmsg/SendMsgForm';\nimport SetRunResultComp from 'components/flow/actions/setrunresult/SetRunResult';\nimport SetRunResultForm from 'components/flow/actions/setrunresult/SetRunResultForm';\nimport StartFlowComp from 'components/flow/actions/startflow/StartFlow';\nimport StartSessionComp from 'components/flow/actions/startsession/StartSession';\nimport StartSessionForm from 'components/flow/actions/startsession/StartSessionForm';\nimport TransferAirtimeComp from 'components/flow/actions/transferairtime/TransferAirtime';\nimport UpdateContactComp from 'components/flow/actions/updatecontact/UpdateContact';\nimport UpdateContactForm from 'components/flow/actions/updatecontact/UpdateContactForm';\nimport AirtimeRouterForm from 'components/flow/routers/airtime/AirtimeRouterForm';\nimport DigitsRouterForm from 'components/flow/routers/digits/DigitsRouterForm';\nimport ExpressionRouterForm from 'components/flow/routers/expression/ExpressionRouterForm';\nimport FieldRouterForm from 'components/flow/routers/field/FieldRouterForm';\nimport GroupsRouterForm from 'components/flow/routers/groups/GroupsRouterForm';\nimport RouterLocalizationForm from 'components/flow/routers/localization/RouterLocalizationForm';\nimport MenuRouterForm from 'components/flow/routers/menu/MenuRouterForm';\nimport RandomRouterForm from 'components/flow/routers/random/RandomRouterForm';\nimport ResponseRouterForm from 'components/flow/routers/response/ResponseRouterForm';\nimport ResthookRouterForm from 'components/flow/routers/resthook/ResthookRouterForm';\nimport ResultRouterForm from 'components/flow/routers/result/ResultRouterForm';\nimport SubflowRouterForm from 'components/flow/routers/subflow/SubflowRouterForm';\nimport WaitRouterForm from 'components/flow/routers/wait/WaitRouterForm';\nimport WebhookRouterForm from 'components/flow/routers/webhook/WebhookRouterForm';\nimport {\n  FlowTypes,\n  HIDDEN,\n  ONLINE,\n  SURVEY,\n  TEXT_TYPES,\n  Type,\n  Types,\n  VOICE,\n  FeatureFilter\n} from 'config/interfaces';\nimport { HintTypes, RouterTypes, FlowEditorConfig, SendMsg } from 'flowTypes';\nimport { RenderNode } from 'store/flowContext';\nimport CallClassifierComp from 'components/flow/actions/callclassifier/CallClassifier';\nimport ClassifyRouterForm from 'components/flow/routers/classify/ClassifyRouterForm';\nimport i18n from 'config/i18n';\nimport SchemeRouterForm from 'components/flow/routers/scheme/SchemeRouterForm';\nimport TicketRouterForm from 'components/flow/routers/ticket/TicketRouterForm';\nimport OpenTicketComp from 'components/flow/actions/openticket/OpenTicket';\n\nconst dedupeTypeConfigs = (typeConfigs: Type[]) => {\n  const map: any = {};\n  return typeConfigs.filter(config => {\n    if (config.type === 'missing') {\n      return false;\n    }\n    const { name: key } = config;\n    return map[key] ? false : (map[key] = true);\n  });\n};\n\nexport interface TypeMap {\n  [propName: string]: Type;\n}\n\nexport type GetTypeConfig = (type: string) => Type;\n\nexport interface Scheme {\n  scheme: string;\n  name: string;\n  path: string;\n  excludeFromSplit?: boolean;\n}\n\nexport const SCHEMES: Scheme[] = [\n  {\n    scheme: 'tel',\n    name: i18n.t('schemes.phone.name', 'SMS'),\n    path: i18n.t('schemes.phone.path', 'Phone Number')\n  },\n  {\n    scheme: 'whatsapp',\n    name: i18n.t('schemes.whatsapp.name', 'WhatsApp'),\n    path: i18n.t('schemes.whatsapp.path', 'WhatsApp Number')\n  },\n  {\n    scheme: 'facebook',\n    name: i18n.t('schemes.facebook.path', 'Facebook'),\n    path: i18n.t('schemes.facebook.path', 'Facebook ID')\n  },\n  {\n    scheme: 'twitterid',\n    name: i18n.t('schemes.twitterid.name', 'Twitter'),\n    path: i18n.t('schemes.twitterid.path', 'Twitter ID')\n  },\n  {\n    scheme: 'telegram',\n    name: i18n.t('schemes.telegram.name', 'Telegram'),\n    path: i18n.t('schemes.telegram.path', 'Telegram ID')\n  },\n  {\n    scheme: 'viber',\n    name: i18n.t('schemes.viber.name', 'Viber'),\n    path: i18n.t('schemes.viber.path', 'Viber ID')\n  },\n  {\n    scheme: 'line',\n    name: i18n.t('schemes.line.name', 'Line'),\n    path: i18n.t('schemes.line.path', 'Line ID')\n  },\n  {\n    scheme: 'wechat',\n    name: i18n.t('schemes.wechat.name', 'Wechat'),\n    path: i18n.t('schemes.wechat.path', 'Wechat ID')\n  },\n  {\n    scheme: 'fcm',\n    name: i18n.t('schemes.firebase.name', 'Firebase'),\n    path: i18n.t('schemes.firebase.path', 'Firebase ID')\n  },\n  {\n    scheme: 'jiochat',\n    name: i18n.t('schemes.jiojach.name', 'Jiochat'),\n    path: i18n.t('schemes.jiochat.path', 'Jiochat ID')\n  },\n  {\n    scheme: 'freshchat',\n    name: i18n.t('schemes.freschat.name', 'Freshchat'),\n    path: i18n.t('schemes.freshchat.path', 'Freshchat ID')\n  },\n  {\n    scheme: 'mailto',\n    name: i18n.t('schemes.email.name', 'Email'),\n    path: i18n.t('schemes.email.path', 'Email Address'),\n    excludeFromSplit: true\n  },\n  {\n    scheme: 'twitter',\n    name: i18n.t('schemes.twitter.name', 'Twitter'),\n    path: i18n.t('schemes.twitter.path', 'Twitter Handle'),\n    excludeFromSplit: true\n  },\n  {\n    scheme: 'ext',\n    name: i18n.t('schemes.external.name', 'External'),\n    path: i18n.t('schemes.external.path', 'External ID')\n  }\n];\n\nexport const typeConfigList: Type[] = [\n  {\n    type: Types.missing,\n    name: 'Missing',\n    description: ' ** Unsupported ** ',\n    component: MissingComp,\n    visibility: HIDDEN\n  },\n  {\n    type: Types.say_msg,\n    name: i18n.t('actions.play_message.name', 'Play Message'),\n    description: i18n.t('actions.play_message.description', 'Play a message'),\n    form: SayMsgForm,\n    localization: MsgLocalizationForm,\n    localizeableKeys: ['text', 'audio_url'],\n    component: SayMsgComp,\n    visibility: VOICE\n  },\n\n  {\n    type: Types.wait_for_menu,\n    name: i18n.t('actions.wait_for_menu.name', 'Wait for Menu Selection'),\n    description: i18n.t('actions.wait_for_menu.description', 'Wait for menu selection'),\n    form: MenuRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: VOICE\n  },\n  {\n    type: Types.wait_for_digits,\n    name: i18n.t('actions.wait_for_digits.name', 'Wait for Digits'),\n    description: i18n.t('actions.wait_for_digits.description', 'Wait for multiple digits'),\n    form: DigitsRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits', 'cases'],\n    visibility: VOICE\n  },\n\n  {\n    type: Types.wait_for_audio,\n    name: i18n.t('actions.wait_for_audio.name', 'Wait for Audio'),\n    description: i18n.t('actions.wait_for_audio.description', 'Wait for an audio recording'),\n    form: WaitRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: [FlowTypes.SURVEY, FlowTypes.VOICE]\n  },\n\n  {\n    type: Types.send_msg,\n    name: i18n.t('actions.send_msg.name', 'Send Message'),\n    description: i18n.t('actions.send_msg.description', 'Send the contact a message'),\n    form: SendMsgForm,\n    localization: MsgLocalizationForm,\n    localizeableKeys: ['text', 'quick_replies', 'templating.variables'],\n    component: SendMsgComp,\n    massageForDisplay: (action: SendMsg) => {\n      // quick replies are optional in the definition, make sure we have\n      // at least an empty array so the localization has a proper cue\n      action.quick_replies = action.quick_replies || [];\n    }\n  },\n  {\n    type: Types.wait_for_response,\n    name: i18n.t('actions.wait_for_response.name', 'Wait for Response'),\n    description: i18n.t('actions.wait_for_response.description', 'Wait for the contact to respond'),\n    form: ResponseRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['categories', 'cases'],\n    aliases: [RouterTypes.switch],\n    visibility: TEXT_TYPES\n  },\n\n  {\n    type: Types.send_broadcast,\n    name: i18n.t('actions.send_broadcast.name', 'Send Broadcast'),\n    description: i18n.t('actions.send_broadcast.description', 'Send somebody else a message'),\n    form: SendBroadcastForm,\n    localization: KeyLocalizationForm,\n    localizeableKeys: ['text'],\n    component: SendBroadcastComp\n  },\n  {\n    type: Types.add_input_labels,\n    name: i18n.t('actions.add_input.name', 'Add Labels'),\n    description: i18n.t('actions.add_input.description', 'Label the incoming message'),\n    form: AddLabelsForm,\n    component: AddLabelsComp\n  },\n  {\n    type: Types.add_contact_urn,\n    name: i18n.t('actions.add_contact_urn.name', 'Add URN'),\n    description: i18n.t('actions.add_contact_urn.description', 'Add a URN for the contact'),\n    form: AddURNForm,\n    component: AddURNComp\n  },\n  {\n    type: Types.add_contact_groups,\n    name: i18n.t('actions.add_contact_groups.name', 'Add to Group'),\n    description: i18n.t('actions.add_contact_groups.description', 'Add the contact to a group'),\n    form: AddGroupsForm,\n    component: ChangeGroupsComp\n  },\n  {\n    type: Types.remove_contact_groups,\n    name: i18n.t('actions.remove_contact_groups.name', 'Remove from Group'),\n    description: i18n.t(\n      'actions.remove_contact_groups.description',\n      'Remove the contact from a group'\n    ),\n    form: RemoveGroupsForm,\n    component: ChangeGroupsComp\n  },\n  {\n    type: Types.set_contact_field,\n    aliases: [Types.set_contact_name, Types.set_contact_language, Types.set_contact_channel],\n    name: i18n.t('actions.set_contact_field.name', 'Update Contact'),\n    description: i18n.t('actions.set_contact_field.description', 'Update the contact'),\n    form: UpdateContactForm,\n    component: UpdateContactComp\n  },\n  {\n    type: Types.send_email,\n    name: i18n.t('actions.send_email.name', 'Send Email'),\n    description: i18n.t('actions.send_email.description', 'Send an email'),\n    form: SendEmailForm,\n    localization: KeyLocalizationForm,\n    localizeableKeys: ['subject', 'body'],\n    component: SendEmailComp,\n    visibility: ONLINE\n  },\n  {\n    type: Types.set_run_result,\n    name: i18n.t('actions.set_run_result.name', 'Save Flow Result'),\n    description: i18n.t('actions.set_run_result.description', 'Save a result for this flow'),\n    form: SetRunResultForm,\n    component: SetRunResultComp\n  },\n\n  {\n    type: Types.play_audio,\n    name: i18n.t('actions.play_audio.name', 'Play Recording'),\n    description: i18n.t('actions.play_audio.description', 'Play a contact recording'),\n    form: PlayAudioForm,\n    component: PlayAudioComp,\n    visibility: VOICE\n  },\n\n  {\n    type: Types.call_webhook,\n    name: i18n.t('actions.call_webhook.name', 'Call Webhook'),\n    description: i18n.t('actions.call_webhook.description', 'Call a webhook'),\n    form: WebhookRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: CallWebhookComp,\n    aliases: [Types.split_by_webhook],\n    visibility: ONLINE\n  },\n  {\n    type: Types.call_resthook,\n    name: i18n.t('actions.call_resthook.name', 'Call Zapier'),\n    description: i18n.t('actions.call_resthook.description', 'Call Zapier'),\n    form: ResthookRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: CallResthookComp,\n    aliases: [Types.split_by_resthook],\n    filter: FeatureFilter.HAS_RESTHOOK,\n    visibility: ONLINE\n  },\n  {\n    type: Types.enter_flow,\n    name: i18n.t('actions.enter_flow.name', 'Enter a Flow'),\n    description: i18n.t('actions.enter_flow.description', 'Enter another flow'),\n    form: SubflowRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: StartFlowComp,\n    aliases: [Types.split_by_subflow]\n  },\n  {\n    type: Types.start_session,\n    name: i18n.t('actions.start_session.name', 'Start Somebody Else'),\n    description: i18n.t('actions.start_session.description', 'Start somebody else in a flow'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    form: StartSessionForm,\n    component: StartSessionComp,\n    visibility: ONLINE\n  },\n  {\n    type: Types.open_ticket,\n    name: i18n.t('actions.open_ticket.name', 'Open Ticket'),\n    description: i18n.t('actions.open_ticket.description', 'Open a ticket with a human agent'),\n    form: TicketRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: OpenTicketComp,\n    aliases: [Types.split_by_ticket],\n    visibility: ONLINE,\n    filter: FeatureFilter.HAS_TICKETER\n  },\n  {\n    type: Types.transfer_airtime,\n    name: i18n.t('actions.transfer_airtime.name', 'Send Airtime'),\n    description: i18n.t('actions.transfer_airtime.description', 'Send the contact airtime'),\n    form: AirtimeRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: TransferAirtimeComp,\n    aliases: [Types.split_by_airtime],\n    visibility: ONLINE,\n    filter: FeatureFilter.HAS_AIRTIME\n  },\n\n  /** Routers */\n\n  {\n    type: Types.wait_for_image,\n    name: i18n.t('actions.wait_for_image.name', 'Wait for Image'),\n    description: i18n.t('actions.wait_for_image.description', 'Wait for an image'),\n    form: WaitRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: SURVEY\n  },\n  {\n    type: Types.wait_for_video,\n    name: i18n.t('actions.wait_for_video.name', 'Wait for Video'),\n    description: i18n.t('actions.wait_for_video.description', 'Wait for a video'),\n    form: WaitRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: SURVEY\n  },\n  {\n    type: Types.wait_for_location,\n    name: i18n.t('actions.wait_for_location.name', 'Wait for Location'),\n    description: i18n.t(\n      'actions.wait_for_location.description',\n      'Wait for location GPS coordinates'\n    ),\n    form: WaitRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    visibility: SURVEY\n  },\n  {\n    type: Types.split_by_intent,\n    name: i18n.t('actions.split_by_intent.name', 'Split by Intent'),\n    description: i18n.t('actions.split_by_intent.description', 'Split by intent'),\n    form: ClassifyRouterForm,\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    component: CallClassifierComp,\n    aliases: [Types.call_classifier],\n    visibility: ONLINE,\n    filter: FeatureFilter.HAS_CLASSIFIER\n  },\n  {\n    type: Types.split_by_expression,\n    name: i18n.t('actions.split_by_expression.name', 'Split by Expression'),\n    description: i18n.t('actions.split_by_expression.description', 'Split by a custom expression'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits', 'cases'],\n    form: ExpressionRouterForm\n  },\n  {\n    type: Types.split_by_contact_field,\n    name: i18n.t('actions.split_by_contact_field.name', 'Split by Contact Field'),\n    description: i18n.t('actions.split_by_contact_field.description', 'Split by a contact field'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits', 'cases'],\n    form: FieldRouterForm\n  },\n  {\n    type: Types.split_by_run_result,\n    aliases: [Types.split_by_run_result_delimited],\n    name: i18n.t('actions.split_by_run_result.name', 'Split by Flow Result'),\n    description: i18n.t('actions.split_by_run_result.description', 'Split by a result in the flow'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits', 'cases'],\n    form: ResultRouterForm\n  },\n  {\n    type: Types.split_by_random,\n    name: i18n.t('actions.split_by_random.name', 'Split Randomly'),\n    description: i18n.t('actions.split_by_random.description', 'Split by random chance'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    form: RandomRouterForm\n  },\n  {\n    type: Types.split_by_groups,\n    name: i18n.t('actions.split_by_groups.name', 'Split by Group Membership'),\n    description: i18n.t('actions.split_by_groups.description', 'Split by group membership'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    form: GroupsRouterForm\n  },\n  {\n    type: Types.split_by_scheme,\n    name: i18n.t('actions.split_by_scheme.name', 'Split by URN Type'),\n    description: i18n.t('actions.split_by_scheme.description', 'Split by URN type'),\n    localization: RouterLocalizationForm,\n    localizeableKeys: ['exits'],\n    form: SchemeRouterForm\n  }\n  // {type: 'random', name: 'Random Split', description: 'Split them up randomly', form: RandomRouterForm}\n];\n\nexport const configsToDisplay = dedupeTypeConfigs(typeConfigList);\n\nexport const typeConfigMap: TypeMap = typeConfigList.reduce((map: TypeMap, typeConfig: Type) => {\n  map[typeConfig.type] = typeConfig;\n  if (typeConfig.aliases) {\n    typeConfig.aliases.forEach((alias: string) => (map[alias] = typeConfig));\n  }\n  return map;\n}, {});\n\n/**\n * Shortcut for constant lookup of type config in type configs map\n * @param {string} type - The type of the type config to return, e.g. 'send_msg'\n * @returns {Object} - The type config found at typeConfigs[type] or -1\n */\nexport const getTypeConfig = (type: Types | RouterTypes): Type => {\n  let config = typeConfigMap[type];\n\n  if (!config) {\n    config = typeConfigMap.missing;\n  }\n  return config;\n};\n\nexport const getType = (renderNode: RenderNode): any => {\n  const wait = renderNode.node.router && renderNode.node.router.wait;\n  if (wait && wait.hint) {\n    switch (wait.hint.type) {\n      case HintTypes.digits:\n        if (wait.hint.count === 1) {\n          return Types.wait_for_menu;\n        }\n        return Types.wait_for_digits;\n      case HintTypes.audio:\n        return Types.wait_for_audio;\n      case HintTypes.image:\n        return Types.wait_for_image;\n      case HintTypes.location:\n        return Types.wait_for_location;\n      case HintTypes.video:\n        return Types.wait_for_video;\n    }\n  }\n\n  // if we are splitting by field, but don't know the name, force it into split by expression\n  if (renderNode.ui.type === Types.split_by_contact_field && !renderNode.ui.config.operand.name) {\n    return Types.split_by_expression;\n  }\n\n  return renderNode.ui.type;\n};\n\nexport const hasFeature = (config: FlowEditorConfig, filter: FeatureFilter) => {\n  return !!(config.filters || []).find((name: string) => name === filter);\n};\n","import { getActionUUID } from 'components/flow/actions/helpers';\nimport { CHANNEL_PROPERTY, LANGUAGE_PROPERTY, NAME_PROPERTY } from 'components/flow/props';\nimport { Types } from 'config/interfaces';\nimport { getTypeConfig } from 'config/typeConfigs';\nimport {\n  Channel,\n  Field,\n  Language,\n  SetContactAttribute,\n  SetContactChannel,\n  SetContactField,\n  SetContactLanguage,\n  SetContactName\n} from 'flowTypes';\nimport { Asset, AssetMap, AssetStore, AssetType, REMOVE_VALUE_ASSET } from 'store/flowContext';\nimport { AssetEntry, FormState, NodeEditorSettings, StringEntry } from 'store/nodeEditor';\n\nexport interface UpdateContactFormState extends FormState {\n  type: Types;\n  name: StringEntry;\n  channel: AssetEntry;\n  language: AssetEntry;\n  field: AssetEntry;\n  fieldValue: StringEntry;\n}\n\nexport const initializeForm = (\n  settings: NodeEditorSettings,\n  assetStore: AssetStore\n): UpdateContactFormState => {\n  const state: UpdateContactFormState = {\n    type: Types.set_contact_name,\n    valid: false,\n    name: { value: '' },\n    channel: { value: null },\n    language: { value: null },\n    field: { value: NAME_PROPERTY },\n    fieldValue: { value: '' }\n  };\n\n  if (settings.originalAction) {\n    const originalType = settings.originalAction.type;\n    // these have aliases, so compare the config we resolve to\n    if (getTypeConfig(originalType) === getTypeConfig(Types.set_contact_field)) {\n      state.type = originalType;\n\n      switch (originalType) {\n        case Types.set_contact_field:\n          const fieldAction = settings.originalAction as SetContactField;\n          state.field = { value: fieldToAsset(fieldAction.field) };\n          state.fieldValue = { value: fieldAction.value };\n          state.valid = true;\n          return state;\n        case Types.set_contact_channel:\n          const channelAction = settings.originalAction as SetContactChannel;\n          state.field = { value: CHANNEL_PROPERTY };\n          state.channel = { value: channelToAsset(channelAction.channel) };\n          state.valid = true;\n          return state;\n        case Types.set_contact_language:\n          const languageAction = settings.originalAction as SetContactLanguage;\n          state.field = { value: LANGUAGE_PROPERTY };\n          state.valid = true;\n          state.language = {\n            value: languageToAsset({\n              iso: languageAction.language,\n              name: getLanguageForCode(languageAction.language, assetStore.languages.items)\n            })\n          };\n          return state;\n        case Types.set_contact_name:\n          const nameAction = settings.originalAction as SetContactName;\n          state.valid = true;\n          state.name = {\n            value: nameAction.name\n          };\n          return state;\n      }\n    }\n  }\n\n  // default is updating name\n  return state;\n};\n\nexport const stateToAction = (\n  settings: NodeEditorSettings,\n  state: UpdateContactFormState\n): SetContactAttribute => {\n  /* istanbul ignore else */\n  if (state.type === Types.set_contact_field) {\n    return {\n      uuid: getActionUUID(settings, Types.set_contact_field),\n      type: state.type,\n      field: assetToField(state.field.value),\n      value: state.fieldValue.value\n    };\n  } else if (state.type === Types.set_contact_channel) {\n    return {\n      uuid: getActionUUID(settings, Types.set_contact_channel),\n      type: state.type,\n      channel: assetToChannel(state.channel.value)\n    };\n  } else if (state.type === Types.set_contact_language) {\n    return {\n      uuid: getActionUUID(settings, Types.set_contact_language),\n      type: state.type,\n      language: assetToLanguage(state.language.value)\n    };\n  } else if (state.type === Types.set_contact_name) {\n    return {\n      uuid: getActionUUID(settings, Types.set_contact_name),\n      type: state.type,\n      name: state.name.value\n    };\n  }\n};\n\nexport const sortFieldsAndProperties = (a: Asset, b: Asset): number => {\n  // Name always goes first\n  /* istanbul ignore else */\n  if (a === NAME_PROPERTY && b !== NAME_PROPERTY) {\n    return -1;\n  } else if (b === NAME_PROPERTY && a !== NAME_PROPERTY) {\n    return 1;\n  }\n\n  if (a.type === b.type) {\n    return a.name.localeCompare(b.name);\n  }\n\n  if (a.type === AssetType.Scheme) {\n    return 1;\n  }\n\n  // go with alpha-sort for everthing else\n  else if (a.type !== b.type) {\n    if (a.type === AssetType.ContactProperty) {\n      return -1;\n    }\n\n    if (b.type === AssetType.ContactProperty) {\n      return 1;\n    }\n  }\n  // non-name non-fields go last\n  return a.name.localeCompare(b.name);\n};\n\nexport const fieldToAsset = (field: Field = { key: '', name: '' }): Asset => ({\n  id: field.key,\n  name: field.name,\n  type: AssetType.Field\n});\n\nexport const assetToField = (asset: Asset): Field => ({\n  key: asset.id,\n  name: asset.name\n});\n\nexport const assetToChannel = (asset: Asset): any => {\n  if (asset.id === REMOVE_VALUE_ASSET.id) {\n    return {};\n  }\n\n  return {\n    uuid: asset.id,\n    name: asset.name\n  };\n};\n\nexport const assetToLanguage = (asset: Asset): string => {\n  if (asset.id === REMOVE_VALUE_ASSET.id) {\n    return '';\n  }\n  return asset.id;\n};\n\nexport const languageToAsset = ({ iso, name }: Language) => {\n  if (!iso || iso.length === 0) {\n    return REMOVE_VALUE_ASSET;\n  }\n\n  return {\n    id: iso,\n    name,\n    type: AssetType.Language\n  };\n};\n\nexport const channelToAsset = ({ uuid, name }: Channel) => {\n  if (!uuid) {\n    return REMOVE_VALUE_ASSET;\n  }\n  return {\n    id: uuid,\n    name,\n    type: AssetType.Language\n  };\n};\n\nexport const getLanguageForCode = (code: string, languages: AssetMap) => {\n  let lang = code;\n  if (languages && lang in languages) {\n    lang = languages[lang].name;\n  }\n  return lang;\n};\n","import { FlowPosition } from 'flowTypes';\nimport ActionTypes, { UpdateEditorState } from 'store/actionTypes';\nimport Constants from 'store/constants';\nimport { Asset, RenderNode, CompletionOption } from 'store/flowContext';\nimport { CompletionSchema } from 'utils/completion';\n\n// tslint:disable:no-shadowed-variable\nexport interface DragSelection {\n  startX?: number;\n  startY?: number;\n  currentX?: number;\n  currentY?: number;\n}\n\nexport interface DebugState {\n  showUUIDs: boolean;\n}\n\nexport interface CanvasPositions {\n  [uuid: string]: FlowPosition;\n}\n\nexport interface Activity {\n  nodes: { [uuid: string]: number };\n  segments: { [exitToNodeKey: string]: number };\n  recentMessages?: { [key: string]: RecentMessage[] };\n  is_starting?: boolean;\n}\n\nexport interface RecentMessage {\n  sent: string;\n  text: string;\n}\n\nexport interface Warning {\n  name: string;\n  type: string;\n}\n\nexport type Warnings = { [uuid: string]: Warning };\n\nexport interface EditorState {\n  currentRevision: number | null;\n  simulating: boolean;\n  language: Asset | null;\n  translating: boolean;\n  fetchingFlow: boolean;\n  ghostNode: RenderNode | null;\n  dragActive: boolean;\n  dragStartTime: number;\n  dragDownPosition: FlowPosition | null;\n  dragNodeUUID: string | null;\n  dragGroup: boolean;\n  dragSelection: DragSelection | null;\n  debug?: DebugState | null;\n\n  // which poptab is popped\n  popped: string;\n\n  warnings: Warnings;\n\n  modalMessage?: ModalMessage;\n  saving?: boolean;\n\n  // our schema for peform dot completion\n  completionSchema: CompletionSchema;\n\n  // our function list for completion\n  functions: CompletionOption[];\n\n  // the currently shown activity, can be\n  // simulation or live\n  activity: Activity;\n\n  // the current live activity\n  liveActivity: Activity;\n\n  // interval in millis we should refresh activity\n  activityInterval: number;\n\n  // is our page visible or tabbed away\n  visible: boolean;\n\n  scrollToNode: string;\n  scrollToAction: string;\n}\n\nexport interface ModalMessage {\n  title: string;\n  body: string;\n}\n\nexport const EMPTY_DRAG_STATE: any = {\n  dragStartTime: 0,\n  dragDownPosition: null,\n  dragActive: false,\n  dragNodeUUID: null,\n  dragGroup: false,\n  dragSelection: null\n};\n\n// Initial state\nexport const initialState: EditorState = {\n  completionSchema: { types: [], root: [] },\n  functions: [],\n  currentRevision: null,\n  simulating: false,\n  translating: false,\n  language: null,\n  fetchingFlow: false,\n  dragStartTime: 0,\n  dragDownPosition: null,\n  dragActive: false,\n  dragNodeUUID: null,\n  dragGroup: false,\n  dragSelection: null,\n  ghostNode: null,\n  debug: null,\n  warnings: {},\n\n  popped: null,\n\n  activity: { segments: {}, nodes: {} },\n  liveActivity: { segments: {}, nodes: {} },\n  activityInterval: 5000,\n  visible: true,\n\n  scrollToNode: null,\n  scrollToAction: null\n};\n\n// Action Creator\nexport const updateEditorState = (editorState: EditorState): UpdateEditorState => ({\n  type: Constants.UPDATE_EDITOR_STATE,\n  payload: {\n    editorState\n  }\n});\n\n/* Reducer */\nexport const editorState = (editorState: EditorState = initialState, action: ActionTypes) => {\n  switch (action.type) {\n    case Constants.UPDATE_EDITOR_STATE:\n      return action.payload!.editorState;\n    default:\n      return editorState;\n  }\n};\n\n// export our reducer\nexport default editorState;\n","import { determineTypeConfig } from 'components/flow/helpers';\nimport { getResultName } from 'components/flow/node/helpers';\nimport { getSwitchRouter } from 'components/flow/routers/helpers';\nimport { SaveResult } from 'components/revisions/RevisionExplorer';\nimport { FlowTypes, Type, Types } from 'config/interfaces';\nimport { getTypeConfig } from 'config/typeConfigs';\nimport {\n  createAssetStore,\n  getCompletionSchema,\n  getFlowDetails,\n  saveRevision,\n  getFunctions\n} from 'external';\nimport isEqual from 'fast-deep-equal';\nimport {\n  Action,\n  AnyAction,\n  Category,\n  Dimensions,\n  Endpoints,\n  Exit,\n  FlowDefinition,\n  FlowNode,\n  SendMsg,\n  SetContactField,\n  SetRunResult,\n  StickyNote,\n  FlowDetails\n} from 'flowTypes';\nimport mutate from 'immutability-helper';\nimport { Dispatch } from 'redux';\nimport { CanvasPositions, EditorState, EMPTY_DRAG_STATE, updateEditorState } from 'store/editor';\nimport {\n  Asset,\n  AssetStore,\n  DEFAULT_LANGUAGE,\n  RenderNode,\n  RenderNodeMap,\n  updateAssets,\n  updateBaseLanguage,\n  updateContactFields,\n  updateDefinition,\n  updateNodes,\n  updateMetadata,\n  updateIssues\n} from 'store/flowContext';\nimport {\n  createEmptyNode,\n  fetchFlowActivity,\n  getActionIndex,\n  getCurrentDefinition,\n  getFlowComponents,\n  getLocalizations,\n  getNode,\n  guessNodeType,\n  mergeAssetMaps,\n  createFlowIssueMap\n} from 'store/helpers';\nimport * as mutators from 'store/mutators';\nimport {\n  NodeEditorSettings,\n  updateNodeEditorSettings,\n  updateTypeConfig,\n  updateUserAddingAction\n} from 'store/nodeEditor';\nimport AppState from 'store/state';\nimport { createUUID, hasString, NODE_SPACING, timeEnd, timeStart, ACTIVITY_INTERVAL } from 'utils';\nimport { AxiosError } from 'axios';\nimport i18n from 'config/i18n';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport type DispatchWithState = Dispatch<AppState>;\n\nexport type GetState = () => AppState;\n\nexport type Thunk<T> = (dispatch: Dispatch<AppState>, getState?: GetState) => T;\n\nexport type AsyncThunk = Thunk<Promise<void>>;\n\nexport type OnAddToNode = (node: FlowNode) => Thunk<void>;\n\nexport type HandleTypeConfigChange = (typeConfig: Type) => Thunk<void>;\n\nexport type UpdateTranslationFilters = (translationFilters: {\n  categories: boolean;\n  rules: boolean;\n}) => Thunk<void>;\n\nexport type OnOpenNodeEditor = (settings: NodeEditorSettings) => Thunk<void>;\n\nexport type OnUpdateCanvasPositions = (positions: CanvasPositions) => Thunk<RenderNodeMap>;\n\nexport type OnRemoveNodes = (nodeUUIDs: string[]) => Thunk<RenderNodeMap>;\n\nexport type AddAsset = (assetType: string, asset: Asset) => Thunk<void>;\n\nexport type RemoveNode = (nodeToRemove: FlowNode) => Thunk<RenderNodeMap>;\n\nexport type UpdateDimensions = (uuid: string, dimensions: Dimensions) => Thunk<void>;\n\nexport type FetchFlow = (\n  endpoints: Endpoints,\n  uuid: string,\n  forceSave: boolean\n) => Thunk<Promise<void>>;\n\nexport type LoadFlowDefinition = (details: FlowDetails, assetStore: AssetStore) => Thunk<void>;\n\nexport type CreateNewRevision = () => Thunk<void>;\n\nexport type NoParamsAC = () => Thunk<void>;\n\nexport type UpdateConnection = (source: string, target: string) => Thunk<RenderNodeMap>;\n\nexport type OnConnectionDrag = (event: ConnectionEvent, flowType: FlowTypes) => Thunk<void>;\n\nexport type OnUpdateLocalizations = (\n  language: string,\n  changes: LocalizationUpdates\n) => Thunk<FlowDefinition>;\n\nexport type UpdateSticky = (stickyUUID: string, sticky: StickyNote) => Thunk<void>;\n\nexport type OnUpdateAction = (\n  action: AnyAction,\n  onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\n) => Thunk<RenderNodeMap>;\n\nexport type ActionAC = (nodeUUID: string, action: AnyAction) => Thunk<RenderNodeMap>;\n\nexport type DisconnectExit = (nodeUUID: string, exitUUID: string) => Thunk<RenderNodeMap>;\n\nexport type HandleLanguageChange = (language: Asset) => Thunk<void>;\n\nexport type MergeEditorState = (state: Partial<EditorState>) => Thunk<EditorState>;\n\nexport interface ReplaceAction {\n  nodeUUID: string;\n  actionUUID: string;\n}\n\nexport type OnUpdateRouter = (node: RenderNode) => Thunk<RenderNodeMap>;\n\nexport interface Connection {\n  previousConnection: Connection;\n}\n\nexport interface ConnectionEvent {\n  connection: Connection;\n  source: Element;\n  target: Element;\n  sourceId: string;\n  targetId: string;\n  suspendedElementId: string;\n  endpoints: any[];\n}\n\nexport interface ErrorMessage {\n  status: string;\n  description: string;\n}\n\nexport type LocalizationUpdates = Array<{ uuid: string; translations?: any }>;\nconst QUIET_SAVE = 1000;\nconst SAVE_ALERT_MILLIS = 1000 * 60;\n\nlet markDirty: (quiet?: number) => void = () => {};\nlet lastDirtyAttemptTimeout: any = null;\nlet postingRevision = false;\n\nlet lastDirtyMillis: number = 0;\nlet lastSuccessfulMillis: number = 0;\n\nconst NETWORK_ERROR = i18n.t(\n  'errors.network',\n  'Hmm, we ran into a problem trying to save your changes. It could just be that your internet connection is not working well at the moment. Please wait a minute or so and try again.'\n);\n\nexport const createSaveMonitor = (dispatch: DispatchWithState) => {\n  window.setInterval(() => {\n    if (\n      lastSuccessfulMillis < lastDirtyMillis &&\n      new Date().getTime() - lastDirtyMillis > SAVE_ALERT_MILLIS\n    ) {\n      dispatch(\n        mergeEditorState({\n          modalMessage: {\n            title: \"Uh oh, we couldn't save your changes\",\n            body: NETWORK_ERROR\n          },\n          saving: false\n        })\n      );\n    }\n  }, 5000);\n};\n\nexport const createDirty = (\n  revisionsEndpoint: string,\n  dispatch: DispatchWithState,\n  getState: GetState\n) => (quiet: number = QUIET_SAVE) => {\n  lastDirtyMillis = new Date().getTime();\n\n  if (lastDirtyAttemptTimeout) {\n    window.clearTimeout(lastDirtyAttemptTimeout);\n  }\n\n  const {\n    flowContext: { definition, nodes, assetStore, issues },\n    editorState: { currentRevision }\n  } = getState();\n\n  dispatch(mergeEditorState({ saving: true }));\n\n  // make sure we have the most current revision number we know about\n  const newDefinition = getCurrentDefinition(definition, nodes, true);\n  newDefinition.revision = currentRevision;\n\n  if (postingRevision) {\n    lastDirtyAttemptTimeout = window.setTimeout(() => {\n      markDirty();\n    }, QUIET_SAVE);\n    return;\n  }\n\n  lastDirtyAttemptTimeout = window.setTimeout(() => {\n    postingRevision = true;\n    saveRevision(revisionsEndpoint, newDefinition).then(\n      (result: SaveResult) => {\n        const revision = result.revision;\n        definition.revision = revision.revision;\n        dispatch(updateDefinition(definition));\n\n        if (result.metadata) {\n          dispatch(updateMetadata(result.metadata));\n          dispatch(updateIssues(createFlowIssueMap(issues, result.metadata.issues)));\n        }\n\n        const updatedAssets = mutators.addRevision(assetStore, revision);\n        dispatch(updateAssets(updatedAssets));\n        dispatch(\n          mergeEditorState({\n            currentRevision: revision.revision,\n            saving: false,\n            activityInterval: ACTIVITY_INTERVAL\n          })\n        );\n\n        lastSuccessfulMillis = new Date().getTime();\n        postingRevision = false;\n      },\n      (error: AxiosError) => {\n        const errorMessage = error.response\n          ? (error.response.data as ErrorMessage).description\n          : NETWORK_ERROR;\n\n        const body = errorMessage;\n        dispatch(\n          mergeEditorState({\n            modalMessage: {\n              title: \"Uh oh, we couldn't save your changes\",\n              body\n            },\n            saving: false\n          })\n        );\n        postingRevision = false;\n      }\n    );\n  }, quiet);\n};\n\nexport const mergeEditorState = (changes: Partial<EditorState>) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): EditorState => {\n  const { editorState } = getState();\n  const updated = mutate(editorState, { $merge: changes });\n  dispatch(updateEditorState(updated));\n  return updated;\n};\n\nexport const createNewRevision = () => (dispatch: DispatchWithState, getState: GetState): void => {\n  // mark us dirty with no quiet period\n  markDirty(0);\n};\n\nexport const loadFlowDefinition = (details: FlowDetails, assetStore: AssetStore) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): void => {\n  // first see if we need our asset store initialized\n\n  const definition = details.definition;\n\n  const {\n    flowContext: { issues },\n    editorState: { fetchingFlow }\n  } = getState();\n\n  if (!fetchingFlow) {\n    // mark us as underway\n    dispatch(mergeEditorState({ fetchingFlow: true }));\n  }\n\n  // while we don't officially support doing it, lets make a best effort to load\n  // definitions that don't have _ui information (created outside of the editor)\n  definition.localization = definition.localization || {};\n  definition._ui = definition._ui || { nodes: {}, languages: [], stickies: {} };\n\n  // make sure we have a ui entry for each node\n  let currentTop = 0;\n  for (const node of definition.nodes) {\n    if (!definition._ui.nodes[node.uuid]) {\n      definition._ui.nodes[node.uuid] = {\n        position: { left: 0, top: currentTop },\n        type: guessNodeType(node)\n      };\n      currentTop += 150;\n    }\n  }\n\n  // add assets we found in our flow to our asset store\n  const components = getFlowComponents(definition);\n  mergeAssetMaps(assetStore.fields.items, components.fields);\n  mergeAssetMaps(assetStore.groups.items, components.groups);\n  mergeAssetMaps(assetStore.labels.items, components.labels);\n  mergeAssetMaps(assetStore.results.items, components.results);\n\n  // initialize our language\n  let language: Asset;\n  if (definition.language) {\n    language = assetStore.languages.items[definition.language];\n  }\n\n  if (!language) {\n    language = DEFAULT_LANGUAGE;\n    dispatch(mergeEditorState({ language: DEFAULT_LANGUAGE }));\n    mergeAssetMaps(assetStore.languages.items, { base: DEFAULT_LANGUAGE });\n  }\n\n  if (details.metadata && details.metadata.issues) {\n    dispatch(updateIssues(createFlowIssueMap(issues, details.metadata.issues)));\n  } else {\n    dispatch(updateIssues({}));\n  }\n\n  dispatch(updateBaseLanguage(language));\n  dispatch(updateMetadata(details.metadata));\n\n  // store our flow definition without any nodes\n  dispatch(updateDefinition(mutators.pruneDefinition(definition)));\n  dispatch(updateNodes(components.renderNodeMap));\n\n  // finally update our assets, and mark us as fetched\n  dispatch(updateAssets(assetStore));\n  dispatch(mergeEditorState({ language, fetchingFlow: false }));\n};\n\n/**\n * Fetches a flow. Fetches all assets as well if the haven't been initialized yet\n * @param endpoints where our assets live\n * @param uuid the uuid for the flow to fetch\n */\nexport const fetchFlow = (endpoints: Endpoints, uuid: string, forceSave = false) => async (\n  dispatch: DispatchWithState,\n  getState: GetState\n) => {\n  // mark us as underway\n  dispatch(mergeEditorState({ fetchingFlow: true }));\n\n  // first see if we need our asset store initialized\n  let {\n    flowContext: { assetStore }\n  } = getState();\n\n  if (!Object.keys(assetStore).length) {\n    assetStore = await createAssetStore(endpoints);\n  }\n\n  fetchFlowActivity(endpoints.activity, dispatch, getState, uuid);\n  (window as any).triggerActivityUpdate = () => {\n    fetchFlowActivity(endpoints.activity, dispatch, getState, uuid);\n  };\n\n  const completionSchema = await getCompletionSchema(endpoints.completion);\n  const functions = await getFunctions(endpoints.functions);\n\n  getFlowDetails(assetStore.revisions)\n    .then((response: any) => {\n      // backwards compatibitly for during deployment\n      const details: FlowDetails = response.definition\n        ? response\n        : { definition: response as FlowDefinition, metadata: { issues: [] } };\n\n      dispatch(loadFlowDefinition(details, assetStore));\n      dispatch(\n        mergeEditorState({\n          currentRevision: details.definition.revision,\n          completionSchema,\n          functions\n        })\n      );\n\n      markDirty = createDirty(assetStore.revisions.endpoint, dispatch, getState);\n      if (forceSave) {\n        markDirty(0);\n      }\n\n      createSaveMonitor(dispatch);\n    })\n    .catch(error => {\n      // not much we can do without our flow definition\n      // log it to the console, this should really only happen if\n      // misconfigured or the endpoint is unavailable\n      console.error(error);\n    });\n};\n\nexport const addAsset: AddAsset = (assetType: string, asset: Asset) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): void => {\n  const {\n    flowContext: { assetStore }\n  } = getState();\n\n  const updated = mutate(assetStore, {\n    [assetType]: { items: { $merge: { [asset.id]: asset } } }\n  });\n\n  dispatch(updateAssets(updated));\n};\n\nexport const handleLanguageChange: HandleLanguageChange = language => (dispatch, getState) => {\n  const {\n    flowContext: { baseLanguage },\n    editorState: { translating, language: currentLanguage }\n  } = getState();\n\n  // determine translating state\n  if (!isEqual(language, baseLanguage)) {\n    if (!translating) {\n      dispatch(mergeEditorState({ translating: true }));\n    }\n  } else {\n    dispatch(mergeEditorState({ translating: false }));\n  }\n\n  // update language\n  if (!isEqual(language, currentLanguage)) {\n    dispatch(mergeEditorState({ language }));\n  }\n};\n\nexport const onUpdateLocalizations = (language: string, changes: LocalizationUpdates) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): FlowDefinition => {\n  const {\n    flowContext: { definition }\n  } = getState();\n  const updated = mutators.updateLocalization(definition, language, changes);\n  dispatch(updateDefinition(updated));\n\n  markDirty();\n  return updated;\n};\n\nexport const updateExitDestination = (nodeUUID: string, exitUUID: string, destination: string) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes }\n  } = getState();\n  const updated = mutators.updateConnection(nodes, nodeUUID, exitUUID, destination);\n  dispatch(updateNodes(updated));\n  markDirty();\n  return updated;\n};\n\nexport const disconnectExit = (nodeUUID: string, exitUUID: string) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => dispatch(updateExitDestination(nodeUUID, exitUUID, null));\n\nexport const updateConnection = (source: string, target: string) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const [nodeUUID, exitUUID] = source.split(':');\n  return dispatch(updateExitDestination(nodeUUID, exitUUID, target));\n};\n\nexport const removeNode = (node: FlowNode) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  // Remove result name if node has one\n  const {\n    flowContext: { nodes, assetStore }\n  } = getState();\n\n  // update asset store to remove results that no longer exist\n  if (node.router && node.router.result_name) {\n    const updatedAssets = mutators.removeResultFromStore(node.router.result_name, assetStore, {\n      nodeUUID: node.uuid\n    });\n    dispatch(updateAssets(updatedAssets));\n  }\n\n  const updated = mutators.removeNode(nodes, node.uuid);\n  dispatch(updateNodes(updated));\n  markDirty();\n  return updated;\n};\n\nexport const removeAction = (nodeUUID: string, action: AnyAction) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes, assetStore }\n  } = getState();\n  const renderNode = nodes[nodeUUID];\n\n  // update asset store to remove results that no longer exist\n  if (action.type === Types.set_run_result) {\n    const resultAction = action as SetRunResult;\n    const updatedAssets = mutators.removeResultFromStore(resultAction.name, assetStore, {\n      nodeUUID,\n      actionUUID: action.uuid\n    });\n    dispatch(updateAssets(updatedAssets));\n  }\n\n  // If it's our last action, then nuke the node\n  if (renderNode.node.actions.length === 1) {\n    const updated = dispatch(removeNode(renderNode.node));\n    markDirty();\n    return updated;\n  } else {\n    // Otherwise, just remove that action\n    const updated = mutators.removeAction(nodes, nodeUUID, action.uuid);\n    dispatch(updateNodes(updated));\n    markDirty();\n    return updated;\n  }\n};\n\nexport const moveActionUp = (nodeUUID: string, action: AnyAction) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes }\n  } = getState();\n  const updated = mutators.moveActionUp(nodes, nodeUUID, action.uuid);\n  dispatch(updateNodes(updated));\n  markDirty();\n  return updated;\n};\n\n/**\n * Splices a router into a list of actions creating up to three nodes where there\n * was once one node.\n * @param nodeUUID the node to replace\n * @param node the new node being added (shares the previous node uuid)\n * @param type the type of the new router\n * @param previousAction the previous action that is being replaced with our router\n * @returns a list of RenderNodes that were created\n */\nexport const spliceInRouter = (\n  newRouterNode: RenderNode,\n  previousAction: { nodeUUID: string; actionUUID: string }\n) => (dispatch: DispatchWithState, getState: GetState): RenderNodeMap => {\n  const {\n    flowContext: { nodes }\n  } = getState();\n  const previousNode = nodes[previousAction.nodeUUID];\n\n  // remove our old node, we'll make new ones\n  let updatedNodes = nodes;\n  updatedNodes = mutators.removeNode(updatedNodes, previousNode.node.uuid, false);\n\n  newRouterNode.node = mutators.uniquifyNode(newRouterNode.node);\n\n  const actionIdx = getActionIndex(previousNode.node, previousAction.actionUUID);\n\n  // we need to splice a wait node where our previousAction was\n  const topActions: Action[] =\n    actionIdx > 0 ? [...previousNode.node.actions.slice(0, actionIdx)] : [];\n  const bottomActions: Action[] = previousNode.node.actions.slice(\n    actionIdx + 1,\n    previousNode.node.actions.length\n  );\n\n  // tslint:disable-next-line:prefer-const\n  let { left, top } = previousNode.ui.position;\n\n  let topNode: RenderNode;\n  let bottomNode: RenderNode;\n\n  // add our top node if we have one\n  if (topActions.length > 0) {\n    topNode = {\n      node: {\n        uuid: createUUID(),\n        actions: topActions,\n        exits: [\n          {\n            uuid: createUUID(),\n            destination_uuid: null\n          }\n        ]\n      },\n      ui: { position: { left, top } },\n      inboundConnections: { ...previousNode.inboundConnections }\n    };\n\n    updatedNodes = mutators.mergeNode(updatedNodes, topNode);\n    top += NODE_SPACING;\n\n    // update our routerNode for the presence of a top node\n    newRouterNode.inboundConnections = {\n      [topNode.node.exits[0].uuid]: topNode.node.uuid\n    };\n    newRouterNode.ui.position.top += NODE_SPACING;\n  } else {\n    newRouterNode.inboundConnections = { ...previousNode.inboundConnections };\n  }\n\n  // now add our routerNode\n  updatedNodes = mutators.mergeNode(updatedNodes, newRouterNode);\n\n  // add our bottom\n  if (bottomActions.length > 0) {\n    bottomNode = {\n      node: {\n        uuid: createUUID(),\n        actions: bottomActions,\n        exits: [\n          {\n            uuid: createUUID(),\n            destination_uuid: previousNode.node.exits[0].destination_uuid\n          }\n        ]\n      },\n      ui: {\n        position: { left, top }\n      },\n      inboundConnections: {\n        [newRouterNode.node.exits[0].uuid]: newRouterNode.node.uuid\n      }\n    };\n    updatedNodes = mutators.mergeNode(updatedNodes, bottomNode);\n  } else {\n    // if we don't have a bottom, route our routerNode to the previous destination\n    updatedNodes = mutators.updateConnection(\n      updatedNodes,\n      newRouterNode.node.uuid,\n      newRouterNode.node.exits[0].uuid,\n      previousNode.node.exits[0].destination_uuid\n    );\n  }\n\n  dispatch(updateNodes(updatedNodes));\n\n  markDirty();\n  return updatedNodes;\n};\n\nexport const handleTypeConfigChange = (typeConfig: Type) => (dispatch: DispatchWithState) => {\n  // TODO: Generate suggested result name if user is changing to a `wait_for_response` router.\n  dispatch(updateTypeConfig(typeConfig));\n};\n\nexport const resetNodeEditingState = () => (dispatch: DispatchWithState, getState: GetState) => {\n  dispatch(mergeEditorState({ ghostNode: null }));\n  dispatch(updateNodeEditorSettings(null));\n};\n\nexport const onUpdateAction = (\n  action: AnyAction,\n  onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\n) => (dispatch: DispatchWithState, getState: GetState) => {\n  timeStart('onUpdateAction');\n\n  const {\n    nodeEditor: { userAddingAction, settings },\n    flowContext: { nodes, contactFields, assetStore }\n  } = getState();\n\n  if (settings == null || settings.originalNode == null) {\n    throw new Error('Need originalNode in settings to update an action');\n  }\n  const { originalNode, originalAction } = settings;\n\n  let updatedAssets = assetStore;\n\n  // remove our result reference\n  if (originalAction && originalAction.type === Types.set_run_result) {\n    const { name: resultName } = originalAction as SetRunResult;\n    updatedAssets = mutators.removeResultFromStore(resultName, updatedAssets, {\n      nodeUUID: originalNode.node.uuid,\n      actionUUID: action.uuid\n    });\n  }\n\n  let updatedNodes = nodes;\n  const creatingNewNode = !!(originalNode !== null && originalNode.ghost);\n\n  let nodeUUID: string = null;\n\n  if (creatingNewNode) {\n    const newNode: RenderNode = {\n      node: {\n        uuid: createUUID(),\n        actions: [action],\n        exits: [{ uuid: createUUID(), destination_uuid: null }]\n      },\n      ui: { position: originalNode.ui.position, type: Types.execute_actions },\n      inboundConnections: originalNode.inboundConnections\n    };\n    updatedNodes = mutators.mergeNode(nodes, newNode);\n\n    nodeUUID = newNode.node.uuid;\n  } else {\n    nodeUUID = originalNode.node.uuid;\n\n    if (userAddingAction) {\n      updatedNodes = mutators.addAction(nodes, originalNode.node.uuid, action);\n    } else if (originalNode.node.hasOwnProperty('router')) {\n      updatedNodes = mutators.spliceInAction(nodes, originalNode.node.uuid, action);\n    } else {\n      updatedNodes = mutators.updateAction(nodes, originalNode.node.uuid, action, originalAction);\n    }\n  }\n\n  dispatch(updateNodes(updatedNodes));\n  dispatch(updateUserAddingAction(false));\n\n  // Add result to store.\n  if (action.type === Types.set_run_result) {\n    const { name: resultName } = action as SetRunResult;\n    updatedAssets = mutators.addResultToStore(resultName, updatedAssets, {\n      nodeUUID,\n      actionUUID: action.uuid\n    });\n    dispatch(updateAssets(updatedAssets));\n  }\n\n  // Add contact field to our store.\n  if (action.type === Types.set_contact_field) {\n    const { field } = action as SetContactField;\n    dispatch(updateContactFields({ ...contactFields, [field.key]: field.name }));\n  }\n\n  markDirty(0);\n\n  timeEnd('onUpdateAction');\n\n  if (onUpdated) {\n    onUpdated(dispatch, getState);\n  }\n  return updatedNodes;\n};\n\n/**\n * Opens the NodeEditor in the state for adding to a provided node\n * @param node the node to add to\n */\nexport const onAddToNode = (node: FlowNode) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n) => {\n  const {\n    flowContext: { nodes }\n  } = getState();\n\n  // TODO: remove the need for this once we all have formHelpers\n  const newAction: SendMsg = {\n    uuid: createUUID(),\n    type: Types.send_msg,\n    text: ''\n  };\n\n  dispatch(\n    updateNodeEditorSettings({\n      originalNode: getNode(nodes, node.uuid),\n      originalAction: newAction,\n      showAdvanced: false\n    })\n  );\n\n  markDirty();\n  dispatch(updateUserAddingAction(true));\n  dispatch(handleTypeConfigChange(getTypeConfig(Types.send_msg)));\n  dispatch(mergeEditorState(EMPTY_DRAG_STATE));\n};\n\nexport const onRemoveNodes = (uuids: string[]) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes, definition }\n  } = getState();\n\n  let updatedNodes = nodes;\n  let updatedDefinition = definition;\n  let didNodes = false;\n  let didDef = false;\n\n  uuids.forEach((uuid: string) => {\n    if (uuid in updatedNodes) {\n      updatedNodes = mutators.removeNode(updatedNodes, uuid, true);\n      didNodes = true;\n    } else if (uuid in updatedDefinition._ui.stickies) {\n      updatedDefinition = mutators.updateStickyNote(updatedDefinition, uuid, null);\n      didDef = true;\n    }\n  });\n\n  if (didNodes) {\n    dispatch(updateNodes(updatedNodes));\n  }\n\n  if (didDef) {\n    dispatch(updateDefinition(updatedDefinition));\n  }\n\n  if (didDef || didNodes) {\n    markDirty();\n  }\n\n  return nodes;\n};\n\nexport const onUpdateCanvasPositions = (positions: CanvasPositions) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes, definition }\n  } = getState();\n\n  let updatedDefinition = definition;\n  let updatedNodes = nodes;\n\n  let updatedNodePosition = false;\n  let updatedStickyPosition = false;\n\n  for (const uuid in positions) {\n    if (updatedNodes[uuid]) {\n      updatedNodes = mutators.updatePosition(updatedNodes, uuid, positions[uuid]);\n      updatedNodePosition = true;\n    } else if (updatedDefinition._ui.stickies[uuid]) {\n      updatedDefinition = mutators.updateStickyNotePosition(\n        updatedDefinition,\n        uuid,\n        positions[uuid]\n      );\n      updatedStickyPosition = true;\n    }\n  }\n\n  let updated = false;\n\n  if (updatedNodePosition) {\n    updated = true;\n    dispatch(updateNodes(updatedNodes));\n  }\n\n  if (updatedStickyPosition) {\n    updated = true;\n    dispatch(updateDefinition(updatedDefinition));\n  }\n\n  if (updated) {\n    markDirty();\n  }\n\n  return updatedNodes;\n};\n\n/**\n * Called when a connection begins to be dragged from an endpoint both\n * when a new connection is desired or when an existing one is being moved.\n * @param event\n */\nexport const onConnectionDrag = (event: ConnectionEvent, flowType: FlowTypes) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n) => {\n  const {\n    flowContext: { nodes, assetStore }\n  } = getState();\n\n  // We finished dragging a ghost node, create the spec for our new ghost component\n  const [fromNodeUUID, fromExitUUID] = event.sourceId.split(':');\n\n  const fromNode = nodes[fromNodeUUID];\n\n  const names = Object.keys(assetStore.results ? assetStore.results.items : {});\n\n  let resultCount = names.length + 1;\n  let key = `result_${resultCount}`;\n\n  while (hasString(names, key)) {\n    resultCount++;\n    key = `result_${resultCount}`;\n  }\n\n  // set our ghost node\n  const ghostNode = createEmptyNode(fromNode, fromExitUUID, resultCount, flowType);\n  ghostNode.inboundConnections = { [fromExitUUID]: fromNodeUUID };\n  dispatch(mergeEditorState({ ghostNode }));\n};\n\nexport const updateSticky = (uuid: string, sticky: StickyNote) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): void => {\n  const {\n    flowContext: { definition }\n  } = getState();\n\n  const updated = mutators.updateStickyNote(definition, uuid, sticky);\n  dispatch(updateDefinition(updated));\n  markDirty();\n};\n\nexport const onUpdateRouter = (renderNode: RenderNode) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n): RenderNodeMap => {\n  const {\n    flowContext: { nodes, assetStore },\n    nodeEditor: {\n      settings: { originalNode, originalAction }\n    }\n  } = getState();\n\n  let updated = nodes;\n  if (originalNode) {\n    const previousPosition = originalNode.ui.position;\n    renderNode.ui.position = previousPosition;\n    renderNode.inboundConnections = originalNode.inboundConnections;\n  }\n\n  if (originalNode.ghost) {\n    renderNode.inboundConnections = originalNode.inboundConnections;\n    const { left, top } = originalNode.ui.position;\n    renderNode.ui.position = { left, top };\n    renderNode.node = mutators.uniquifyNode(renderNode.node);\n  }\n\n  // update our results\n  const resultName = getResultName(renderNode.node);\n  if (resultName) {\n    let updatedAssets = assetStore;\n\n    // remove our original result name\n    const originalResultName = getResultName(originalNode.node);\n    if (originalResultName) {\n      updatedAssets = mutators.removeResultFromStore(originalResultName, updatedAssets, {\n        nodeUUID: originalNode.node.uuid\n      });\n    }\n\n    updatedAssets = mutators.addFlowResult(updatedAssets, renderNode.node);\n    dispatch(updateAssets(updatedAssets));\n  }\n\n  if (\n    originalNode &&\n    originalAction &&\n    !originalNode.ghost &&\n    !getSwitchRouter(originalNode.node)\n  ) {\n    const actionToSplice = originalNode.node.actions.find(\n      (action: Action) => action.uuid === originalAction.uuid\n    );\n\n    if (actionToSplice) {\n      // if we are splicing using the original top\n      renderNode.ui.position.top = originalNode.ui.position.top;\n\n      return dispatch(\n        spliceInRouter(renderNode, {\n          nodeUUID: originalNode.node.uuid,\n          actionUUID: actionToSplice.uuid\n        })\n      );\n    }\n\n    // didn't recognize that action, let's add a new router node\n    // if we are appendeng in, see if we need to route through\n    const switchRouter = getSwitchRouter(renderNode.node);\n    if (switchRouter) {\n      const defaultCategory = switchRouter.categories.find(\n        (cat: Category) => cat.uuid === switchRouter.default_category_uuid\n      );\n      const exitToUpdate = renderNode.node.exits.find(\n        (exit: Exit) => exit.uuid === defaultCategory.exit_uuid\n      );\n\n      exitToUpdate.destination_uuid = originalNode.node.exits[0].destination_uuid;\n    }\n\n    renderNode.inboundConnections = {\n      [originalNode.node.exits[0].uuid]: originalNode.node.uuid\n    };\n    renderNode.node = mutators.uniquifyNode(renderNode.node);\n    renderNode.ui.position.top += NODE_SPACING;\n    updated = mutators.mergeNode(updated, renderNode);\n  } else {\n    updated = mutators.mergeNode(updated, renderNode);\n  }\n\n  dispatch(updateNodes(updated));\n\n  markDirty(0);\n  return updated;\n};\n\nexport const onOpenNodeEditor = (settings: NodeEditorSettings) => (\n  dispatch: DispatchWithState,\n  getState: GetState\n) => {\n  const {\n    flowContext: {\n      definition: { localization }\n    },\n    editorState: { language, translating }\n  } = getState();\n\n  const { originalNode: renderNode } = settings;\n  let { originalAction: action } = settings;\n\n  const node = renderNode.node;\n\n  // stuff our localization objects in our settings\n  settings.localizations = [];\n  if (translating) {\n    let actionToTranslate = action;\n\n    // TODO: this is a hack, would be nice to find how to make that area respond differently\n    // if they clicked just below the actions, treat it as the last action\n    if (!actionToTranslate && node.actions.length > 0) {\n      actionToTranslate = node.actions[node.actions.length - 1];\n      if (\n        actionToTranslate.type !== Types.send_msg &&\n        actionToTranslate.type !== Types.send_broadcast\n      ) {\n        return;\n      }\n    }\n\n    const translations = localization[language.id];\n    settings.localizations.push(\n      ...getLocalizations(node, actionToTranslate, language, translations)\n    );\n  }\n\n  // Account for hybrids or clicking on the empty exit table\n  if (!action && node.actions.length > 0) {\n    action = node.actions[node.actions.length - 1];\n  }\n\n  const typeConfig = determineTypeConfig(settings);\n  dispatch(handleTypeConfigChange(typeConfig));\n  dispatch(updateNodeEditorSettings(settings));\n  dispatch(mergeEditorState(EMPTY_DRAG_STATE));\n};\n\nexport const updateTranslationFilters = (translationFilters: {\n  categories: boolean;\n  rules: boolean;\n}) => (dispatch: DispatchWithState, getState: GetState): void => {\n  const {\n    flowContext: { definition }\n  } = getState();\n\n  definition._ui.translation_filters = translationFilters;\n  dispatch(updateDefinition(definition));\n  markDirty();\n};\n","import { fieldToAsset } from 'components/flow/actions/updatecontact/helpers';\nimport { getResultName } from 'components/flow/node/helpers';\nimport { DefaultExitNames } from 'components/flow/routers/constants';\nimport { getSwitchRouter } from 'components/flow/routers/helpers';\nimport { GROUPS_OPERAND } from 'components/nodeeditor/constants';\nimport { FlowTypes, Types } from 'config/interfaces';\nimport { getType } from 'config/typeConfigs';\nimport { getActivity } from 'external';\nimport {\n  AddLabels,\n  AnyAction,\n  Category,\n  ChangeGroups,\n  FlowDefinition,\n  FlowNode,\n  FlowPosition,\n  HintTypes,\n  RouterTypes,\n  SetContactField,\n  SetRunResult,\n  StickyNote,\n  SwitchRouter,\n  UIMetaData,\n  Wait,\n  WaitTypes,\n  SendMsg,\n  FlowIssue,\n  FlowIssueType\n} from 'flowTypes';\nimport Localization, { LocalizedObject } from 'services/Localization';\nimport { Activity, EditorState, Warnings } from 'store/editor';\nimport {\n  Asset,\n  AssetMap,\n  AssetType,\n  RenderNode,\n  RenderNodeMap,\n  FlowIssueMap\n} from 'store/flowContext';\nimport { addResult } from 'store/mutators';\nimport { DispatchWithState, GetState, mergeEditorState } from 'store/thunks';\nimport { createUUID, snakify } from 'utils';\n\nexport interface Bounds {\n  left: number;\n  top: number;\n  right: number;\n  bottom: number;\n}\n\ninterface Reflow {\n  uuid: string;\n  bounds: Bounds;\n}\n\n// track if we have an active timeout before issuing a new one\nlet activityTimeout: any = null;\n\nexport const getNodeWithAction = (nodes: RenderNodeMap, actionUUID: string): RenderNode => {\n  for (const nodeUUID of Object.keys(nodes)) {\n    const renderNode = nodes[nodeUUID];\n    for (const action of renderNode.node.actions) {\n      if (action.uuid === actionUUID) {\n        return renderNode;\n      }\n    }\n  }\n};\n\nexport const getNode = (nodes: RenderNodeMap, nodeUUID: string) => {\n  const node = nodes[nodeUUID];\n  if (!node) {\n    throw new Error('Cannot find node ' + nodeUUID);\n  }\n  return node;\n};\n\nexport const getExitIndex = (node: FlowNode, exitUUID: string) => {\n  for (const [exitIdx, exit] of node.exits.entries()) {\n    if (exit.uuid === exitUUID) {\n      return exitIdx;\n    }\n  }\n  throw new Error('Cannot find exit ' + exitUUID);\n};\n\nexport const getActionIndex = (node: FlowNode, actionUUID: string) => {\n  for (const [actionIdx, action] of node.actions.entries()) {\n    if (action.uuid === actionUUID) {\n      return actionIdx;\n    }\n  }\n  throw new Error('Cannot find action ' + actionUUID);\n};\n\nexport const getSuggestedResultName = (count: number) => `Result ${count}`;\n\nexport const hasRouter = (renderNode: RenderNode): boolean => {\n  return !!(renderNode && renderNode.node.router);\n};\n\nexport const hasWait = (renderNode: RenderNode): boolean => {\n  return !!(renderNode.node.router && renderNode.node.router.wait);\n};\n\nexport const hasLoopSplit = (renderNode: RenderNode): boolean => {\n  const type = getType(renderNode);\n\n  return (\n    hasWait(renderNode) || type === Types.split_by_expression || type === Types.split_by_subflow\n  );\n};\n\n/**\n * Follows every path from fromNodeUUID to toNodeUUID and throws\n * an error if we hit ourselves again without hitting a wait\n * @param nodes the entire node map\n * @param fromNodeUUID which node we are originating from\n * @param toNodeUUID where we are trying to go\n * @param path the path we have tried so far\n */\nexport const detectLoops = (\n  nodes: RenderNodeMap,\n  fromNodeUUID: string,\n  toNodeUUID: string,\n  path: string[] = []\n): void => {\n  const fromNode = nodes[fromNodeUUID];\n  const toNode = nodes[toNodeUUID];\n\n  if (fromNodeUUID === toNodeUUID) {\n    throw new Error(\"Flow loop detected, can't point to self\");\n  }\n\n  if (hasLoopSplit(toNode) || hasLoopSplit(fromNode)) {\n    return;\n  }\n\n  if (path.length === 0) {\n    path.push(fromNodeUUID);\n    for (const exit of toNode.node.exits) {\n      if (exit.destination_uuid) {\n        detectLoops(nodes, toNode.node.uuid, exit.destination_uuid, path);\n      }\n    }\n    return;\n  }\n\n  // we're back where we started\n  if (toNodeUUID === path[0]) {\n    throw new Error('Flow loop detected, route through a wait first');\n  }\n\n  // add us to the path\n  path.push(toNodeUUID);\n\n  // follow each of our exits\n  for (const exit of toNode.node.exits) {\n    if (exit.destination_uuid) {\n      detectLoops(nodes, toNodeUUID, exit.destination_uuid, path);\n    }\n  }\n\n  return;\n};\n\nexport const getLocalizations = (\n  node: FlowNode,\n  action: AnyAction,\n  language: Asset,\n  translations?: { [uuid: string]: any }\n): LocalizedObject[] => {\n  const localizations: LocalizedObject[] = [];\n\n  // Account for localized cases\n  if (node.router && node.router.type === RouterTypes.switch) {\n    const router = node.router as SwitchRouter;\n\n    router.cases.forEach(kase =>\n      localizations.push(Localization.translate(kase, language, translations))\n    );\n  }\n\n  if (action) {\n    localizations.push(Localization.translate(action, language, translations));\n    // check for localized template variables]\n    if (action.type === Types.send_msg) {\n      const sendMsgAction = action as SendMsg;\n      if (sendMsgAction.templating) {\n        localizations.push(\n          Localization.translate(sendMsgAction.templating, language, translations)\n        );\n      }\n    }\n  }\n\n  // Account for localized categories\n  if (node.router) {\n    node.router.categories.forEach(category => {\n      if (category.name) {\n        localizations.push(Localization.translate(category, language, translations));\n      }\n    });\n  }\n\n  return localizations;\n};\n\nexport const getUniqueDestinations = (node: FlowNode): string[] => {\n  const destinations: any = {};\n  for (const exit of node.exits) {\n    if (exit.destination_uuid) {\n      destinations[exit.destination_uuid] = true;\n    }\n  }\n  return Object.keys(destinations);\n};\n\nexport const getCurrentDefinition = (\n  definition: FlowDefinition,\n  nodeMap: RenderNodeMap,\n  includeUI: boolean = true\n): FlowDefinition => {\n  const renderNodes = getOrderedNodes(nodeMap);\n  const nodes: FlowNode[] = [];\n  renderNodes.forEach((renderNode: RenderNode) => nodes.push(renderNode.node));\n\n  // tslint:disable-next-line:variable-name\n  const uiNodes: any = {};\n  for (const uuid of Object.keys(nodeMap)) {\n    uiNodes[uuid] = nodeMap[uuid].ui;\n  }\n\n  const result = {\n    ...definition,\n    nodes\n  };\n\n  if (includeUI) {\n    // tslint:disable-next-line:variable-name\n    result._ui = {\n      nodes: uiNodes,\n      stickies: definition._ui.stickies,\n      languages: definition._ui.languages,\n      translation_filters: definition._ui.translation_filters\n    } as UIMetaData;\n  }\n\n  return result;\n};\n\nexport const newPosition = (left: number, top: number): FlowPosition => {\n  return { left, top };\n};\n\nexport const addPosition = (a: FlowPosition, b: FlowPosition): FlowPosition => {\n  const width = a.right - a.left;\n  const height = a.bottom - a.top;\n\n  // we allow dragging out of bounds\n  const top = a.top + b.top;\n  const left = a.left + b.left;\n\n  if (width && height) {\n    return {\n      left,\n      top,\n      right: left + width,\n      bottom: top + height\n    };\n  }\n\n  return { top, left };\n};\n\nexport const subtractPosition = (a: FlowPosition, b: FlowPosition): FlowPosition => {\n  return { left: a.left - b.left, top: a.top - b.top };\n};\n\nexport const getOrderedNodes = (nodes: RenderNodeMap): RenderNode[] => {\n  const sorted: RenderNode[] = [];\n  Object.keys(nodes).forEach((nodeUUID: string) => {\n    sorted.push(nodes[nodeUUID]);\n  });\n  return sorted.sort((a: RenderNode, b: RenderNode) => {\n    let diff = a.ui.position.top - b.ui.position.top;\n    if (diff === 0) {\n      diff = a.ui.position.left - b.ui.position.left;\n    }\n    return diff;\n  });\n};\n\nexport const getCollisions = (\n  nodes: RenderNodeMap,\n  stickies: { [key: string]: StickyNote },\n  box: FlowPosition\n): { [uuid: string]: FlowPosition } => {\n  const collisions: any = {};\n  for (const nodeUUID of Object.keys(nodes)) {\n    const node = nodes[nodeUUID];\n    if (collides(box, node.ui.position)) {\n      collisions[node.node.uuid] = node.ui.position;\n    }\n  }\n\n  for (const uuid in stickies) {\n    const sticky = stickies[uuid];\n    if (collides(box, sticky.position)) {\n      collisions[uuid] = sticky.position;\n    }\n  }\n\n  return collisions;\n};\n\nexport const collides = (a: FlowPosition, b: FlowPosition) => {\n  // don't bother with collision if we don't have full dimensions\n  /* istanbul ignore next */\n  if (!a.bottom || !b.bottom) {\n    return false;\n  }\n\n  return !(b.left > a.right || b.right < a.left || b.top > a.bottom || b.bottom < a.top);\n};\n\n/**\n * Gets the first collsion in the node map returning the original node,\n * the node it collides with and optionally an additional node it\n * collides with if inserting between two nodes\n * @param nodes\n */\nexport const getCollision = (nodes: RenderNodeMap): RenderNode[] => {\n  const sortedNodes = getOrderedNodes(nodes);\n\n  for (let i = 0; i < sortedNodes.length; i++) {\n    const current = sortedNodes[i];\n    if (i + 1 < sortedNodes.length) {\n      for (let j = i + 1; j < sortedNodes.length; j++) {\n        const other = sortedNodes[j];\n        if (collides(current.ui.position, other.ui.position)) {\n          // if the next node collides too, include it\n          // to deal with inserting between two closely\n          // positioned nodes\n          if (j + 1 < sortedNodes.length) {\n            const cascaded = sortedNodes[j + 1];\n            if (collides(other.ui.position, cascaded.ui.position)) {\n              return [current, other, cascaded];\n            }\n          }\n          return [current, other];\n        }\n      }\n    }\n  }\n  return [];\n};\n\nexport const createEmptyNode = (\n  fromNode: RenderNode,\n  fromExitUUID: string,\n  suggestedResultNameCount: number,\n  flowType: FlowTypes\n): RenderNode => {\n  const emptyNode: FlowNode = {\n    uuid: createUUID(),\n    actions: [],\n    exits: [\n      {\n        uuid: createUUID(),\n        destination_uuid: null\n      }\n    ]\n  };\n\n  let type = Types.execute_actions;\n\n  // Add an action next if we are coming from a router\n  if (!fromNode || hasRouter(fromNode)) {\n    const replyType = flowType === FlowTypes.VOICE ? Types.say_msg : Types.send_msg;\n    const replyAction = {\n      uuid: createUUID(),\n      text: '',\n      type: replyType\n    };\n\n    emptyNode.actions.push(replyAction);\n  } else {\n    // Otherwise we are going to a switch\n    const categories: Category[] = [\n      {\n        uuid: createUUID(),\n        name: DefaultExitNames.All_Responses,\n        exit_uuid: emptyNode.exits[0].uuid\n      }\n    ];\n\n    const wait: Wait = { type: WaitTypes.msg };\n    type = Types.wait_for_response;\n    if (flowType === FlowTypes.VOICE) {\n      wait.hint = { type: HintTypes.digits, count: 1 };\n    }\n\n    emptyNode.router = {\n      type: RouterTypes.switch,\n      result_name: getSuggestedResultName(suggestedResultNameCount),\n      default_category_uuid: categories[0].uuid,\n      categories,\n      wait,\n      cases: []\n    } as SwitchRouter;\n  }\n\n  let inboundConnections = {};\n  if (fromNode) {\n    inboundConnections = { [fromExitUUID]: fromNode.node.uuid };\n  }\n\n  return {\n    node: emptyNode,\n    ui: { position: { left: 0, top: 0 }, type },\n    inboundConnections,\n    ghost: true\n  };\n};\n\nexport interface FlowComponents {\n  renderNodeMap: RenderNodeMap;\n  groups: AssetMap;\n  fields: AssetMap;\n  labels: AssetMap;\n  results: AssetMap;\n  warnings: Warnings;\n}\n\nexport const isGroupAction = (actionType: string) => {\n  return (\n    actionType === Types.add_contact_groups ||\n    actionType === Types.remove_contact_groups ||\n    actionType === Types.send_broadcast\n  );\n};\n\n/**\n * This isn't necessarily supported, but lets make a best effort to guess node\n * types from cues within the definition if somebody loads a flow without _ui details.\n * @param node\n */\nexport const guessNodeType = (node: FlowNode) => {\n  // router based nodes\n  if (node.router) {\n    // hybrid nodes\n    if (node.actions.length === 1) {\n      if (node.actions[0].type === Types.call_webhook) {\n        return Types.split_by_webhook;\n      }\n\n      if (node.actions[0].type === Types.transfer_airtime) {\n        return Types.split_by_airtime;\n      }\n\n      if (node.actions[0].type === Types.call_resthook) {\n        return Types.split_by_resthook;\n      }\n\n      if (node.actions[0].type === Types.enter_flow) {\n        return Types.split_by_subflow;\n      }\n    }\n\n    if (node.router.wait) {\n      return Types.wait_for_response;\n    }\n\n    if (node.router.type === RouterTypes.random) {\n      return Types.split_by_random;\n    }\n\n    const switchRouter = getSwitchRouter(node);\n    if (switchRouter) {\n      if (switchRouter.operand === GROUPS_OPERAND) {\n        return Types.split_by_groups;\n      }\n    }\n\n    return Types.split_by_expression;\n  }\n\n  return Types.execute_actions;\n};\n\nexport const generateResultQuery = (resultName: string) => `@run.results.${snakify(resultName)}`;\n\n/**\n * Converts a list of assets to a map keyed by their id\n */\nexport const assetListToMap = (assets: Asset[]): AssetMap => {\n  const assetMap: any = {};\n  for (const asset of assets) {\n    assetMap[asset.id] = asset;\n  }\n  return assetMap;\n};\n\nexport const assetMapToList = (assets: AssetMap): any[] => {\n  return Object.keys(assets).map(key => {\n    const asset = assets[key];\n    return { uuid: asset.id, name: asset.name };\n  });\n};\n\n/**\n * Processes an initial FlowDefinition for details necessary for the editor\n */\nexport const getFlowComponents = (definition: FlowDefinition): FlowComponents => {\n  const renderNodeMap: RenderNodeMap = {};\n  const warnings: Warnings = {};\n  const { nodes, _ui } = definition;\n\n  // initialize our nodes\n  const pointerMap: { [uuid: string]: { [uuid: string]: string } } = {};\n\n  const groups: AssetMap = {};\n  const fields: AssetMap = {};\n  const labels: AssetMap = {};\n  let results: AssetMap = {};\n\n  for (const node of nodes) {\n    if (!node.actions) {\n      node.actions = [];\n    }\n\n    const ui = _ui.nodes[node.uuid];\n    const renderNode: RenderNode = {\n      node,\n      ui,\n      inboundConnections: {}\n    };\n\n    renderNodeMap[node.uuid] = renderNode;\n\n    const resultName = getResultName(node);\n    if (resultName) {\n      results = addResult(resultName, results, { nodeUUID: node.uuid });\n    }\n\n    const type = getType(renderNode);\n\n    // if we are split by group, look at our categories for groups\n    if (type === Types.split_by_groups) {\n      const router = getSwitchRouter(node);\n\n      for (const kase of router.cases) {\n        const groupUUID = kase.arguments[0];\n        const category = router.categories.find((cat: Category) => {\n          return cat.uuid === kase.category_uuid;\n        });\n\n        /* istanbul ignore else */\n        if (category) {\n          groups[groupUUID] = {\n            name: category.name,\n            id: groupUUID,\n            type: AssetType.Group\n          };\n        }\n      }\n    }\n\n    for (const action of node.actions) {\n      if (isGroupAction(action.type)) {\n        const groupsToChange = (action as ChangeGroups).groups;\n        if (groupsToChange) {\n          for (const group of groupsToChange) {\n            groups[group.uuid] = {\n              name: group.name,\n              id: group.uuid,\n              type: AssetType.Group\n            };\n          }\n        }\n      } else if (action.type === Types.set_contact_field) {\n        const fieldAction = action as SetContactField;\n        fields[fieldAction.field.key] = {\n          name: fieldAction.field.name,\n          id: fieldAction.field.key,\n          type: AssetType.Field\n        };\n      } else if (action.type === Types.add_input_labels) {\n        for (const label of (action as AddLabels).labels) {\n          labels[label.uuid] = {\n            name: label.name,\n            id: label.uuid,\n            type: AssetType.Label\n          };\n        }\n      } else if (action.type === Types.set_run_result) {\n        const resultAction = action as SetRunResult;\n        const key = snakify(resultAction.name);\n\n        if (key in results) {\n          results[key].references.push({\n            nodeUUID: node.uuid,\n            actionUUID: action.uuid\n          });\n        } else {\n          results[key] = {\n            name: resultAction.name,\n            id: key,\n            type: AssetType.Result,\n            references: [{ nodeUUID: node.uuid, actionUUID: action.uuid }]\n          };\n        }\n      }\n    }\n\n    for (const exit of node.exits) {\n      if (exit.destination_uuid) {\n        let pointers: { [uuid: string]: string } = pointerMap[exit.destination_uuid];\n\n        if (!pointers) {\n          pointers = {};\n        }\n\n        pointers[exit.uuid] = node.uuid;\n        pointerMap[exit.destination_uuid] = pointers;\n      }\n    }\n  }\n\n  // store our pointers with their associated nodes\n  for (const nodeUUID of Object.keys(pointerMap)) {\n    renderNodeMap[nodeUUID].inboundConnections = pointerMap[nodeUUID];\n  }\n\n  return { renderNodeMap, groups, fields, labels, results, warnings };\n};\n\n/**\n * Extracts contact fields from a list of nodes\n */\nexport const extractContactFields = (nodes: FlowNode[]): Asset[] =>\n  nodes.reduce((fieldList, { actions }) => {\n    actions.forEach(action => {\n      if (action.type === Types.set_contact_field) {\n        fieldList.push(fieldToAsset((action as SetContactField).field));\n      }\n    });\n    return fieldList;\n  }, []);\n\n/** Adds all the items from toAdd if that don't already exist in assets */\nexport const mergeAssetMaps = (assets: AssetMap, toAdd: AssetMap): void => {\n  Object.keys(toAdd).forEach((key: string) => {\n    assets[key] = assets[key] || toAdd[key];\n  });\n};\n\nexport const createFlowIssueMap = (\n  previousIssues: FlowIssueMap,\n  issues: FlowIssue[]\n): FlowIssueMap => {\n  const issueMap: FlowIssueMap = (issues || [])\n    .filter((issue: FlowIssue) => issue.type !== FlowIssueType.LEGACY_EXTRA)\n    .reduce((issueMap: FlowIssueMap, issue: FlowIssue) => {\n      const nodeIssues: FlowIssue[] = issueMap[issue.node_uuid] || [];\n      nodeIssues.push(issue);\n      issueMap[issue.node_uuid] = nodeIssues;\n      return issueMap;\n    }, {});\n\n  for (const [nodeUUID, nodeIssues] of Object.entries(issueMap)) {\n    // would be nice not to use stringify as a deepequals here\n    if (JSON.stringify(previousIssues[nodeUUID]) === JSON.stringify(nodeIssues)) {\n      issueMap[nodeUUID] = previousIssues[nodeUUID];\n    }\n  }\n  return issueMap;\n};\n\nexport const fetchFlowActivity = (\n  endpoint: string,\n  dispatch: DispatchWithState,\n  getState: GetState,\n  uuid: string\n): void => {\n  const {\n    editorState: { simulating, activityInterval, visible }\n  } = getState();\n\n  if (visible) {\n    getActivity(endpoint, uuid).then((activity: Activity) => {\n      // every interval we back off a bit up to 5 minutes\n      if (activity) {\n        const updates: Partial<EditorState> = {\n          liveActivity: activity,\n          activityInterval: Math.min(60000 * 5, activityInterval + 200)\n        };\n\n        if (!simulating) {\n          updates.activity = activity;\n        }\n\n        dispatch(mergeEditorState(updates));\n\n        if (activityTimeout) {\n          window.clearTimeout(activityTimeout);\n        }\n\n        activityTimeout = window.setTimeout(() => {\n          fetchFlowActivity(endpoint, dispatch, getState, uuid);\n        }, activityInterval);\n      }\n    });\n  } else {\n    if (activityTimeout) {\n      window.clearTimeout(activityTimeout);\n    }\n\n    activityTimeout = window.setTimeout(() => {\n      fetchFlowActivity(endpoint, dispatch, getState, uuid);\n    }, 1000);\n  }\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport { Dimensions, FlowPosition } from 'flowTypes';\nimport * as React from 'react';\nimport { newPosition } from 'store/helpers';\n\nimport styles from './CanvasDraggable.module.scss';\nimport { onNextRender } from 'utils';\n\nexport interface CanvasDraggableProps {\n  position: FlowPosition;\n  uuid: string;\n  idx: number;\n  elementCreator: (props: CanvasDraggableProps) => JSX.Element;\n  config?: any;\n  // should our draggable be initialized as dragged\n  dragOnAdd?: boolean;\n\n  selected?: boolean;\n\n  onAnimated?: (uuid: string) => void;\n  updateDimensions?: (uuid: string, position: Dimensions) => void;\n  onDragStart?: (uuid: string, clickedPosition: FlowPosition) => void;\n  onDragStop?: () => void;\n}\n\nexport interface CanvasDraggableState {\n  width?: number;\n  height?: number;\n}\n\nexport class CanvasDraggable extends React.Component<CanvasDraggableProps, CanvasDraggableState> {\n  private ele!: HTMLDivElement;\n\n  constructor(props: CanvasDraggableProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/, 'ref']\n    });\n\n    this.state = {};\n  }\n\n  private ref(ref: HTMLDivElement): any {\n    return (this.ele = ref);\n  }\n\n  public componentDidMount(): void {\n    if (this.ele) {\n      if (this.props.updateDimensions) {\n        const width = this.ele.clientWidth || this.props.position.right - this.props.position.left;\n        const height =\n          this.ele.clientHeight || this.props.position.bottom - this.props.position.top;\n        this.setState({ width, height }, () => {\n          this.props.updateDimensions(this.props.uuid, {\n            width,\n            height\n          });\n        });\n      }\n    }\n  }\n\n  public shouldComponentUpdate(nextProps: CanvasDraggableProps, state: any, context: any): boolean {\n    return (\n      nextProps.position.left !== this.props.position.left ||\n      nextProps.position.top !== this.props.position.top ||\n      nextProps.position.right !== this.props.position.right ||\n      nextProps.position.bottom !== this.props.position.bottom ||\n      nextProps.idx !== this.props.idx ||\n      nextProps.selected !== this.props.selected ||\n      nextProps.config !== this.props.config\n    );\n  }\n\n  public componentDidUpdate(\n    prevProps: CanvasDraggableProps,\n    prevState: CanvasDraggableState\n  ): void {\n    // traceUpdate(this, prevProps, prevState);\n\n    // we want to check our dimensions after our next render\n    onNextRender(() => {\n      if (this.ele) {\n        if (this.ele.clientWidth && this.ele.clientHeight) {\n          if (\n            this.state.width !== this.ele.clientWidth ||\n            this.state.height !== this.ele.clientHeight\n          ) {\n            if (this.props.updateDimensions) {\n              const height = this.ele.clientHeight;\n              const width = this.ele.clientWidth;\n\n              this.setState({ width, height }, () => {\n                this.props.updateDimensions(this.props.uuid, { width, height });\n              });\n            }\n          }\n        }\n      }\n    });\n  }\n\n  private handleMouseUp(event: React.MouseEvent<HTMLDivElement>): void {\n    if (event.nativeEvent.which === 3) {\n      return;\n    }\n    if (this.props.onDragStop) {\n      this.props.onDragStop();\n    }\n  }\n\n  private handleMouseDown(event: React.MouseEvent<HTMLDivElement>) {\n    // ignore clicks in textareas\n    if (!this.props.selected && (event.target as any).tagName.toUpperCase() === 'TEXTAREA') {\n      return;\n    }\n\n    // ignore right clicks\n    if (event.nativeEvent.which === 3) {\n      return;\n    }\n    if (this.props.onDragStart) {\n      this.props.onDragStart(\n        this.props.uuid,\n        newPosition(event.pageX - this.props.position.left, event.pageY - this.props.position.top)\n      );\n    }\n  }\n\n  public render(): JSX.Element {\n    const classes = [styles.draggable];\n\n    if (this.props.selected) {\n      classes.push(styles.selected);\n    }\n\n    const handleAnimated = () => {\n      if (this.props.onAnimated) {\n        this.props.onAnimated(this.props.uuid);\n      }\n    };\n\n    return (\n      <div\n        data-testid={'draggable_' + this.props.uuid}\n        onTransitionEnd={handleAnimated}\n        ref={this.ref}\n        className={classes.join(' ')}\n        style={{\n          left: this.props.position.left,\n          top: this.props.position.top\n        }}\n        onMouseDown={this.handleMouseDown}\n        onMouseUp={this.handleMouseUp}\n      >\n        {this.props.elementCreator(this.props)}\n      </div>\n    );\n  }\n}\n","import { FlowPosition } from 'flowTypes';\nimport { CanvasPositions } from 'store/editor';\nimport {\n  MAX_REFLOW_ATTEMPTS,\n  NODE_SPACING,\n  set,\n  snapPositionToGrid,\n  timeEnd,\n  timeStart\n} from 'utils';\n\nconst mutate = require('immutability-helper');\n\nexport const collides = (a: FlowPosition, b: FlowPosition, fudge: number) => {\n  // don't bother with collision if we don't have full dimensions\n  /* istanbul ignore next */\n  if (!a.bottom || !b.bottom) {\n    return false;\n  }\n\n  a.bottom += fudge;\n\n  return !(b.left > a.right! || b.right! < a.left || b.top > a.bottom || b.bottom < a.top);\n};\n\nexport const getDraggablesInBox = (\n  positions: CanvasPositions,\n  box: FlowPosition\n): { [uuid: string]: FlowPosition } => {\n  const collisions: any = {};\n  for (const nodeUUID of Object.keys(positions)) {\n    const position = positions[nodeUUID];\n    if (collides(box, position, 0)) {\n      collisions[nodeUUID] = position;\n    }\n  }\n  return collisions;\n};\n\ninterface DraggablePosition extends FlowPosition {\n  uuid: string;\n}\n\nexport const getOrderedDraggables = (positions: CanvasPositions): DraggablePosition[] => {\n  const sorted: DraggablePosition[] = [];\n  Object.keys(positions).forEach((uuid: string) => {\n    sorted.push({ ...positions[uuid], uuid });\n  });\n\n  return sorted.sort((a: DraggablePosition, b: DraggablePosition) => {\n    let diff = a.top - b.top;\n    if (diff === 0) {\n      diff = a.left - b.left;\n    }\n    return diff;\n  });\n};\n\n/**\n * Gets the first collsion in the node map returning the original node,\n * the node it collides with and optionally an additional node it\n * collides with if inserting between two nodes\n * @param nodes\n */\nconst getFirstCollision = (\n  positions: CanvasPositions,\n  changed: string[],\n  fudge: number\n): DraggablePosition[] => {\n  const sortedDraggables = getOrderedDraggables(positions);\n\n  for (let i = 0; i < sortedDraggables.length; i++) {\n    const current = sortedDraggables[i];\n\n    if (i + 1 < sortedDraggables.length) {\n      for (let j = i + 1; j < sortedDraggables.length; j++) {\n        const other = sortedDraggables[j];\n\n        if (collides(current, other, fudge)) {\n          // if the next node collides too, include it\n          // to deal with inserting between two closely\n          // positioned nodes\n          if (j + 1 < sortedDraggables.length) {\n            const cascaded = sortedDraggables[j + 1];\n            if (collides(other, cascaded, fudge)) {\n              return [current, other, cascaded];\n            }\n          }\n\n          if (\n            !!changed.find((uuid: string) => other.uuid === uuid) &&\n            !!!changed.find((uuid: string) => current.uuid === uuid)\n          ) {\n            return [other, current];\n          }\n\n          return [current, other];\n        }\n      }\n    }\n  }\n  return [];\n};\n\nconst setTop = (position: FlowPosition, newTop: number) => {\n  return snapPositionToGrid({\n    top: newTop,\n    left: position.left,\n    bottom: newTop + (position.bottom! - position.top),\n    right: position.right\n  });\n};\n\n/**\n * Reflow positions to account for any collisions\n * @param positions\n */\nexport const reflow = (\n  positions: CanvasPositions,\n  fudge: number\n): { positions: CanvasPositions; changed: string[] } => {\n  let newPositions = positions;\n  const changed: string[] = [];\n\n  // if for some reason we can't reflow, don't blow up\n  let attempts = 0;\n\n  timeStart('reflow');\n\n  let collision = getFirstCollision(positions, changed, fudge);\n  while (collision.length > 0 && attempts < MAX_REFLOW_ATTEMPTS) {\n    attempts++;\n    if (collision.length) {\n      const [top, bottom, cascade] = collision;\n      newPositions = mutate(newPositions, {\n        [bottom.uuid]: set(setTop(bottom, top.bottom! + NODE_SPACING))\n      });\n      changed.push(bottom.uuid);\n\n      if (cascade) {\n        // start with the top of the bottom node\n        let cascadeTop = top.bottom! + NODE_SPACING;\n\n        // and add its height\n        cascadeTop += bottom.bottom! - bottom.top;\n        newPositions = mutate(newPositions, {\n          [cascade.uuid]: set(setTop(cascade, cascadeTop))\n        });\n\n        changed.push(cascade.uuid);\n      }\n    }\n\n    collision = getFirstCollision(newPositions, changed, fudge);\n  }\n\n  timeEnd('reflow');\n\n  return { positions: newPositions, changed };\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport { CanvasDraggable, CanvasDraggableProps } from 'components/canvas/CanvasDraggable';\nimport { getDraggablesInBox, reflow } from 'components/canvas/helpers';\nimport { DRAG_THRESHOLD } from 'components/flow/Flow';\nimport { Dimensions, FlowPosition } from 'flowTypes';\nimport mutate from 'immutability-helper';\nimport React from 'react';\nimport { CanvasPositions, DragSelection } from 'store/editor';\nimport { addPosition } from 'store/helpers';\nimport { MergeEditorState } from 'store/thunks';\nimport { COLLISION_FUDGE, snapPositionToGrid, throttle, snapToGrid } from 'utils';\n\nimport styles from './Canvas.module.scss';\n\nexport const CANVAS_PADDING = 300;\nexport const REFLOW_QUIET = 200;\n\nexport interface CanvasProps {\n  uuid: string;\n  dragActive: boolean;\n  draggingNew: boolean;\n  newDragElement: JSX.Element;\n  draggables: CanvasDraggableProps[];\n  mutable: boolean;\n  onLoaded: () => void;\n  onDragging: (draggedUUIDs: string[]) => void;\n  onUpdatePositions: (positions: CanvasPositions) => void;\n  onRemoveNodes: (nodeUUIDs: string[]) => void;\n  onDoubleClick: (position: FlowPosition) => void;\n  mergeEditorState: MergeEditorState;\n}\n\ninterface CanvasState {\n  dragDownPosition: FlowPosition | null;\n  dragUUID: string | null;\n  dragGroup: boolean;\n  dragSelection: DragSelection | null;\n  uuid: string;\n  positions: CanvasPositions;\n  selected: CanvasPositions;\n  height: number;\n}\n\nexport class Canvas extends React.PureComponent<CanvasProps, CanvasState> {\n  private ele!: HTMLDivElement;\n  private isScrolling: any;\n\n  private reflowTimeout: any;\n\n  // when auto scrolling we need to move dragged elements\n  private lastX!: number | null;\n  private lastY!: number | null;\n\n  // did we just select something\n  private justSelected = false;\n\n  private onDragThrottled: (uuids: string[]) => void = throttle(this.props.onDragging, 300);\n  private onMouseThrottled: (event: any) => void = throttle(this.handleMouseMove.bind(this), 10);\n\n  constructor(props: CanvasProps) {\n    super(props);\n\n    let height = document.documentElement.clientHeight;\n\n    const positions: { [uuid: string]: FlowPosition } = {};\n    this.props.draggables.forEach((draggable: CanvasDraggableProps) => {\n      positions[draggable.uuid] = draggable.position;\n      if (draggable.position.bottom) {\n        height = Math.max(height, draggable.position.bottom + CANVAS_PADDING);\n      }\n    });\n\n    this.state = {\n      height,\n      dragDownPosition: null,\n      dragUUID: null,\n      dragGroup: false,\n      dragSelection: null,\n      uuid: this.props.uuid,\n      selected: {},\n      positions\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^render/, /^mark/, /^do/, /^ensure/]\n    });\n  }\n\n  private handleWindowResize(): void {\n    const windowHeight = document.documentElement.clientHeight;\n    this.setState({ height: Math.max(windowHeight, this.state.height) });\n  }\n\n  public componentDidMount(): void {\n    /* istanbul ignore next */\n    window.addEventListener('resize', this.handleWindowResize);\n    document.addEventListener('keydown', this.handleKeyDown);\n\n    this.props.onLoaded();\n  }\n\n  private handleKeyDown(event: any): void {\n    if (this.state.selected && event.key === 'Backspace') {\n      const nodeUUIDs = Object.keys(this.state.selected);\n      if (nodeUUIDs.length > 0) {\n        this.props.onRemoveNodes(Object.keys(this.state.selected));\n      }\n    }\n  }\n\n  public componentWillUnmount(): void {\n    window.removeEventListener('resize', this.handleWindowResize);\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  public componentDidUpdate(prevProps: CanvasProps, prevState: CanvasState): void {\n    // traceUpdate(this, prevProps, prevState);\n\n    let updated = false;\n    let updatedPositions = { ...this.state.positions };\n\n    // are we being given something new\n    this.props.draggables.forEach((draggable: CanvasDraggableProps) => {\n      if (!this.state.positions[draggable.uuid]) {\n        updatedPositions = mutate(updatedPositions, {\n          $merge: { [draggable.uuid]: draggable.position }\n        });\n        updated = true;\n      }\n    });\n\n    // have we removed something\n    Object.keys(updatedPositions).forEach((uuid: string) => {\n      if (\n        !this.props.draggables.find((draggable: CanvasDraggableProps) => draggable.uuid === uuid)\n      ) {\n        updatedPositions = mutate(updatedPositions, { $unset: [[uuid]] } as any);\n        updated = true;\n      }\n    });\n\n    if (updated) {\n      this.setState({ positions: updatedPositions });\n    }\n  }\n\n  public renderSelectionBox(): JSX.Element | null {\n    const drag = this.state.dragSelection;\n\n    if (drag && drag.startX && drag.startY && drag.currentX && drag.currentY) {\n      const left = Math.min(drag.startX, drag.currentX);\n      const top = Math.min(drag.startY, drag.currentY);\n      const width = Math.max(drag.startX, drag.currentX) - left;\n      const height = Math.max(drag.startY, drag.currentY) - top;\n\n      if (this.state.dragSelection && this.state.dragSelection.startX) {\n        return <div className={styles.drag_selection} style={{ left, top, width, height }} />;\n      }\n    }\n\n    return null;\n  }\n\n  private isClickOnCanvas(event: React.MouseEvent<HTMLDivElement>): boolean {\n    // ignore right clicks\n    if (event.nativeEvent.which === 3) {\n      return false;\n    }\n    return (event.target as any).id === 'canvas';\n  }\n\n  private handleMouseDown(event: React.MouseEvent<HTMLDivElement>): void {\n    // ignore right clicks\n    if (event.nativeEvent.which === 3) {\n      return;\n    }\n\n    if (!this.props.mutable) {\n      return;\n    }\n\n    const offset = this.ele.getBoundingClientRect();\n\n    this.justSelected = false;\n    if (this.isClickOnCanvas(event)) {\n      const startX = event.pageX - offset.left;\n      const startY = event.pageY - offset.top - window.scrollY;\n\n      this.setState({\n        dragSelection: { startX, startY, currentX: startX, currentY: startY }\n      });\n    }\n  }\n\n  private handleMouseMove(event: React.MouseEvent<HTMLDivElement>): void {\n    if (!this.props.mutable) {\n      return;\n    }\n\n    if (this.props.draggingNew) {\n      this.lastX = event.pageX;\n      this.lastY = event.pageY;\n      this.updateStateWithScroll(event.clientY, event.pageY);\n      if (this.state.dragUUID) {\n        this.updatePositions(event.pageX, event.pageY, event.clientY, false);\n      }\n      return;\n    }\n\n    if (this.state.dragSelection && this.state.dragSelection.startX) {\n      const drag = this.state.dragSelection;\n\n      if (drag && drag.startX && drag.startY && drag.currentX && drag.currentY) {\n        const left = Math.min(drag.startX, drag.currentX);\n        const top = Math.min(drag.startY, drag.currentY);\n        const right = Math.max(drag.startX, drag.currentX);\n        const bottom = Math.max(drag.startY, drag.currentY);\n\n        const selected = getDraggablesInBox(this.state.positions, {\n          left,\n          top,\n          right,\n          bottom\n        });\n\n        const offset = this.ele.getBoundingClientRect();\n\n        this.setState({\n          dragSelection: {\n            startX: drag.startX,\n            startY: drag.startY,\n            currentX: event.pageX - offset.left,\n            currentY: event.pageY - offset.top - window.scrollY\n          }\n        });\n\n        this.setState({ selected });\n\n        if (Object.keys(selected).length > 0) {\n          this.justSelected = true;\n        }\n      }\n    }\n\n    if (this.state.dragUUID) {\n      this.updatePositions(event.pageX, event.pageY, event.clientY, false);\n    }\n  }\n\n  private scrollCanvas(amount: number): void {\n    if (!this.isScrolling) {\n      this.isScrolling = true;\n\n      let speed = amount;\n      if (window.scrollY + amount < 0) {\n        speed = 0;\n      }\n\n      this.isScrolling = window.setInterval(() => {\n        if (this.lastX && this.lastY) {\n          // as we scroll we need to move our dragged items along with us\n          this.updatePositions(this.lastX, this.lastY + speed, 0, false);\n          window.scrollBy(0, speed);\n        }\n      }, 30);\n    }\n  }\n\n  private handleMouseUpCapture(event: React.MouseEvent<HTMLDivElement>): void {\n    if (!this.props.mutable) {\n      return;\n    }\n\n    // ignore right clicks\n    if (event.nativeEvent.which === 3) {\n      return;\n    }\n\n    this.lastX = null;\n    this.lastY = null;\n    if (this.state.dragUUID) {\n      this.setState({\n        dragDownPosition: null,\n        dragSelection: null,\n        dragUUID: null\n      });\n    }\n\n    if (!this.justSelected) {\n      this.props.mergeEditorState({\n        dragActive: false\n      });\n\n      this.setState({ selected: {} });\n    }\n\n    if (this.state.dragSelection && this.state.dragSelection.startX) {\n      this.setState({\n        dragSelection: {\n          startX: undefined,\n          startY: undefined,\n          currentX: undefined,\n          currentY: undefined\n        }\n      });\n    }\n\n    this.justSelected = false;\n  }\n\n  public handleUpdateDimensions(uuid: string, dimensions: Dimensions): void {\n    if (dimensions.width && dimensions.height) {\n      let pos = this.state.positions[uuid];\n      if (!pos) {\n        pos = this.props.draggables.find((item: CanvasDraggableProps) => item.uuid === uuid)!\n          .position;\n      }\n\n      const newPosition = {\n        left: pos.left,\n        top: pos.top,\n        right: pos.left + dimensions.width,\n        bottom: pos.top + dimensions.height\n      };\n\n      if (newPosition.bottom !== pos.bottom || newPosition.right !== pos.right) {\n        this.setState((prevState: CanvasState) => {\n          const newPositions = mutate(prevState.positions, {\n            $merge: {\n              [uuid]: newPosition\n            }\n          });\n\n          return {\n            positions: newPositions,\n            height: Math.max(newPosition.bottom + CANVAS_PADDING, prevState.height)\n          };\n        }, this.markReflow);\n      }\n    }\n  }\n\n  public ensureCanvasHeight() {\n    let height = this.state.height;\n    Object.keys(this.state.positions).forEach(uuid => {\n      const bottom = this.state.positions[uuid].bottom + CANVAS_PADDING;\n      if (bottom > height) {\n        height = bottom;\n      }\n    });\n\n    if (height > this.state.height) {\n      this.setState({ height });\n    }\n  }\n\n  public doReflow(): void {\n    const reflowPositions = { ...this.state.positions };\n    delete reflowPositions[this.state.dragUUID];\n    const { positions, changed } = reflow(reflowPositions, COLLISION_FUDGE);\n\n    if (changed) {\n      this.setState({ positions });\n\n      if (changed) {\n        this.props.onUpdatePositions(\n          changed.reduce((results: CanvasPositions, uuid: string) => {\n            results[uuid] = positions[uuid];\n            return results;\n          }, {})\n        );\n      }\n    }\n\n    this.props.onDragging(changed);\n  }\n\n  private markReflow(): void {\n    if (this.reflowTimeout) {\n      clearTimeout(this.reflowTimeout);\n    }\n\n    this.reflowTimeout = setTimeout(() => {\n      // only reflow if we aren't dragging\n      if (!this.state.dragUUID) {\n        this.doReflow();\n      }\n    }, REFLOW_QUIET);\n  }\n\n  /**\n   * Updates the state of the canvas, expanding and scrolling as needed\n   * @param windowY the mouse position in the viewport\n   * @param pageY the mouse position in the full canvas\n   * @param otherState optional state to set\n   */\n  private updateStateWithScroll(\n    windowY: number,\n    pageY: number,\n    otherState: Partial<CanvasState> = {}\n  ): void {\n    const viewportHeight = document.documentElement.clientHeight;\n    this.setState(\n      (prevState: CanvasState) => {\n        return {\n          ...(otherState as CanvasState),\n          height: Math.max(pageY + CANVAS_PADDING, prevState.height)\n        };\n      },\n      () => {\n        // check if we need to scroll our canvas\n\n        if (!this.isScrolling && windowY !== 0) {\n          if (windowY + 100 > viewportHeight) {\n            this.scrollCanvas(15);\n          } else if (windowY < 100) {\n            this.scrollCanvas(-15);\n          }\n        }\n        // if we are scrolling but given a clientY then user is mousing\n        else if (windowY !== 0 && (windowY > 100 && windowY + 100 < viewportHeight)) {\n          window.clearInterval(this.isScrolling);\n          this.isScrolling = null;\n        }\n      }\n    );\n  }\n\n  private updatePositions(pageX: number, pageY: number, clientY: number, snap: boolean): void {\n    if (this.state.dragUUID) {\n      const { dragUUID } = this.state;\n\n      // save off the last update, if we scroll on the user's behalf we'll need this\n      this.lastX = pageX;\n      this.lastY = pageY;\n\n      const startPosition = this.props.dragActive\n        ? this.state.selected[dragUUID]\n        : this.state.positions[dragUUID];\n\n      const offset = this.ele.getBoundingClientRect();\n\n      if (this.state.dragDownPosition) {\n        const xd = pageX - offset.left - this.state.dragDownPosition.left - startPosition.left;\n\n        const yd =\n          pageY - offset.top - this.state.dragDownPosition.top - startPosition.top - window.scrollY;\n\n        let lowestNode: number | undefined = 0;\n        if (this.props.dragActive) {\n          const delta = { left: xd, top: yd };\n          const prevState = this.state;\n          const uuids = Object.keys(prevState.selected);\n          let newPositions: { [uuid: string]: FlowPosition } = {};\n\n          uuids.forEach((uuid: string) => {\n            let newPosition = addPosition(prevState.selected[uuid], delta);\n            if (snap) {\n              newPosition = snapPositionToGrid(newPosition);\n            }\n\n            if (newPosition && newPosition.bottom! > lowestNode!) {\n              lowestNode = newPosition.bottom;\n            }\n            newPositions[uuid] = newPosition;\n          });\n\n          newPositions = mutate(prevState.positions, {\n            $merge: newPositions\n          });\n\n          this.updateStateWithScroll(clientY, lowestNode, {\n            positions: newPositions\n          });\n\n          if (uuids.length <= 5) {\n            this.props.onDragging(uuids);\n          } else {\n            this.onDragThrottled(uuids);\n          }\n        } else {\n          if (Math.abs(xd) + Math.abs(yd) > DRAG_THRESHOLD) {\n            let selected = this.state.selected;\n            if (!(this.state.dragUUID in selected)) {\n              selected = { [dragUUID]: this.state.positions[dragUUID] };\n            }\n\n            this.props.mergeEditorState({\n              dragActive: true\n            });\n\n            this.setState({ selected });\n          }\n        }\n      }\n    }\n  }\n\n  private handleDragStart(uuid: string, position: FlowPosition): void {\n    const offset = this.ele.getBoundingClientRect();\n\n    this.setState({\n      dragUUID: uuid,\n      dragDownPosition: {\n        left: position.left - offset.left,\n        top: position.top - offset.top - window.scrollY\n      }\n    });\n  }\n\n  /** Gets all the positions for nodes that were dragged */\n  private getSelectedPositions(): CanvasPositions {\n    return Object.keys(this.state.selected).reduce((result: CanvasPositions, uuid: string) => {\n      result[uuid] = this.state.positions[uuid];\n      return result;\n    }, {});\n  }\n\n  private handleDragStop(): void {\n    if (this.state.dragUUID) {\n      this.updatePositions(this.lastX!, this.lastY!, 0, true);\n    }\n\n    this.props.onUpdatePositions(this.getSelectedPositions());\n    this.setState({\n      dragUUID: null,\n      dragDownPosition: null,\n      dragSelection: null\n    });\n\n    this.markReflow();\n\n    this.props.mergeEditorState({\n      dragActive: false\n    });\n  }\n\n  private handleAnimated(uuid: string): void {\n    this.props.onDragging([uuid]);\n  }\n\n  private handleDoubleClick(event: React.MouseEvent<HTMLDivElement>): void {\n    if (this.isClickOnCanvas(event)) {\n      const offset = this.ele.getBoundingClientRect();\n      this.props.onDoubleClick(\n        snapToGrid(event.pageX - offset.left, event.pageY - offset.top - window.scrollY)\n      );\n    }\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div\n        id=\"canvas-container\"\n        className={styles.canvas_container}\n        onMouseDown={this.handleMouseDown}\n        onMouseMove={this.onMouseThrottled}\n        onMouseUp={this.handleMouseUpCapture}\n        onDoubleClick={this.handleDoubleClick}\n      >\n        <div className={styles.canvas_background}>\n          <div\n            data-testid=\"canvas\"\n            style={{ height: this.state.height }}\n            id=\"canvas\"\n            ref={(ele: HTMLDivElement) => {\n              this.ele = ele;\n            }}\n            className={styles.canvas}\n          >\n            {this.props.newDragElement}\n            {this.props.draggables.map((draggable: CanvasDraggableProps, idx: number) => {\n              const pos = this.state.positions[draggable.uuid] || draggable.position;\n              return (\n                <CanvasDraggable\n                  onAnimated={this.handleAnimated}\n                  key={'draggable_' + draggable.uuid}\n                  uuid={draggable.uuid}\n                  updateDimensions={this.handleUpdateDimensions}\n                  position={pos}\n                  idx={draggable.idx}\n                  selected={!!this.state.selected[draggable.uuid]}\n                  elementCreator={draggable.elementCreator}\n                  onDragStart={this.handleDragStart}\n                  onDragStop={this.handleDragStop}\n                  dragOnAdd={draggable.dragOnAdd}\n                  config={draggable.config}\n                />\n              );\n            })}\n            {this.renderSelectionBox()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport styles from 'components/counter/Counter.module.scss';\nimport * as React from 'react';\nimport { addCommas } from 'utils';\n\nexport interface CounterProps {\n  keepVisible: boolean;\n  containerStyle: string;\n  countStyle: string;\n  count: number;\n  onClick?: () => void;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n}\n\nexport default class Counter extends React.Component<CounterProps> {\n  private ele!: HTMLDivElement;\n\n  constructor(props: CounterProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^get/]\n    });\n  }\n\n  public componentDidMount(): void {\n    this.handleScrollIntoView();\n  }\n\n  public componentDidUpdate(prevProps: CounterProps): void {\n    if (prevProps.count !== this.props.count) {\n      this.handleScrollIntoView();\n    }\n  }\n\n  private handleScrollIntoView(): void {\n    if (!!this.ele) {\n      if (this.props.count > 0 && this.props.keepVisible) {\n        window.setTimeout(() => {\n          window.scrollTo({\n            top: this.ele.getBoundingClientRect().top - 200 + window.scrollY,\n            behavior: 'smooth'\n          });\n        }, 200);\n      }\n    }\n  }\n\n  private handleMouseEvent(event: React.MouseEvent<HTMLDivElement>, callback: () => void): void {\n    event.preventDefault();\n    event.stopPropagation();\n    if (callback) {\n      callback();\n    }\n  }\n\n  private handleMouseEnter(event: React.MouseEvent<HTMLDivElement>): void {\n    this.handleMouseEvent(event, this.props.onMouseEnter!);\n  }\n\n  private handleMouseLeave(event: React.MouseEvent<HTMLDivElement>): void {\n    this.handleMouseEvent(event, this.props.onMouseLeave!);\n  }\n\n  private handleClick(event: React.MouseEvent<HTMLDivElement>): void {\n    this.handleMouseEvent(event, this.props.onClick!);\n  }\n\n  public render(): JSX.Element | null {\n    const count = addCommas(this.props.count);\n    return (\n      <div\n        ref={(ele: HTMLDivElement) => {\n          this.ele = ele;\n        }}\n        className={\n          styles.counter +\n          ' ' +\n          this.props.containerStyle +\n          ' ' +\n          (this.props.onClick ? styles.clickable : '') +\n          ' ' +\n          (this.props.count > 0 ? styles.visible : '')\n        }\n        onClick={this.handleClick}\n        data-spec=\"counter-outter\"\n      >\n        <div\n          onMouseEnter={this.handleMouseEnter}\n          onMouseLeave={this.handleMouseLeave}\n          className={this.props.countStyle}\n          data-spec=\"counter-inner\"\n        >\n          {count}\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { createClickHandler } from 'utils';\n\nimport styles from './TitleBar.module.scss';\nimport { fakePropType } from 'config/ConfigProvider';\nimport i18n from 'config/i18n';\n\nexport interface TitleBarProps {\n  title: string;\n  onRemoval(event: React.MouseEvent<HTMLElement>): any;\n  __className?: string;\n  showRemoval?: boolean;\n  showMove?: boolean;\n  onMoveUp?(event: React.MouseEvent<HTMLElement>): any;\n  shouldCancelClick?: () => boolean;\n}\n\ninterface TitleBarState {\n  confirmingRemoval: boolean;\n}\n\nexport const confirmationTime = 2000;\n\nexport const titlebarContainerSpecId = 'titlebar-container';\nexport const titlebarSpecId = 'titlebar';\nexport const moveIconSpecId = 'move-icon';\nexport const moveSpecId = 'move';\nexport const removeIconSpecId = 'remove-icon';\nexport const confirmationSpecId = 'confirmation';\nexport const confirmRemovalSpecId = 'confirm-removal';\n\n/**\n * Simple title bar with confirmation removal\n */\nexport default class TitleBar extends React.Component<TitleBarProps, TitleBarState> {\n  private confirmationTimeout: number;\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: TitleBarProps) {\n    super(props);\n\n    this.state = {\n      confirmingRemoval: false\n    };\n\n    this.handleConfirmRemoval = this.handleConfirmRemoval.bind(this);\n  }\n\n  public componentWillUnmount(): void {\n    if (this.confirmationTimeout) {\n      window.clearTimeout(this.confirmationTimeout);\n    }\n  }\n\n  public handleMouseUpCapture(event: React.MouseEvent<HTMLElement>): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  public handleConfirmRemoval(event: React.MouseEvent<HTMLElement>): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    this.setState({\n      confirmingRemoval: true\n    });\n\n    this.confirmationTimeout = window.setTimeout(\n      () =>\n        this.setState({\n          confirmingRemoval: false\n        }),\n      confirmationTime\n    );\n  }\n\n  private getMoveArrow(): JSX.Element {\n    let moveArrow: JSX.Element = null;\n\n    if (this.props.showMove && this.context.config.mutable) {\n      moveArrow = (\n        <div\n          className={styles.up_button}\n          {...createClickHandler(\n            this.props.onMoveUp,\n            this.props.shouldCancelClick,\n            this.handleMouseUpCapture\n          )}\n          data-testid={moveIconSpecId}\n        >\n          <span className=\"fe-arrow-up\" />\n        </div>\n      );\n    } else {\n      moveArrow = <div className={styles.up_button} data-spec={moveSpecId} />;\n    }\n\n    return moveArrow;\n  }\n\n  private getRemove(): JSX.Element {\n    let remove: JSX.Element = (\n      <div className={styles.remove_button} data-testid={removeIconSpecId}></div>\n    );\n\n    if (this.props.showRemoval && this.context.config.mutable) {\n      remove = (\n        <div\n          className={styles.remove_button}\n          {...createClickHandler(\n            this.handleConfirmRemoval,\n            this.props.shouldCancelClick,\n            this.handleMouseUpCapture\n          )}\n          data-testid={removeIconSpecId}\n        >\n          <span className=\"fe-x\" />\n        </div>\n      );\n    }\n\n    return remove;\n  }\n\n  private getConfirmationEl(): JSX.Element {\n    let confirmation: JSX.Element;\n\n    if (this.state.confirmingRemoval && this.context.config.mutable) {\n      confirmation = (\n        <div className={styles.remove_confirm} data-spec={confirmationSpecId}>\n          <div className={styles.up_button} data-spec={moveSpecId} />\n          <div className={styles.titletext}>{i18n.t('removal_confirmation', 'Remove?')}</div>\n          <div\n            className={styles.remove_button}\n            {...createClickHandler(\n              this.props.onRemoval,\n              this.props.shouldCancelClick,\n              this.handleMouseUpCapture\n            )}\n            data-testid={confirmRemovalSpecId}\n          >\n            <span className=\"fe-x\" />\n          </div>\n        </div>\n      );\n    }\n\n    return confirmation;\n  }\n\n  public render(): JSX.Element {\n    const confirmation: JSX.Element = this.getConfirmationEl();\n    const moveArrow: JSX.Element = this.getMoveArrow();\n    const remove: JSX.Element = this.getRemove();\n    return (\n      <div className={styles.titlebar} data-spec={titlebarContainerSpecId}>\n        <div className={`${this.props.__className} ${styles.normal}`} data-spec={titlebarSpecId}>\n          {moveArrow}\n          <div className={styles.titletext}>{this.props.title}</div>\n          {remove}\n        </div>\n        {confirmation}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './MountScroll.module.scss';\n\nconst cx: any = classNames.bind(styles);\n\ninterface MountScrollProps {\n  pulseAfterScroll?: boolean;\n}\n\ninterface MountScrollState {\n  pulse: boolean;\n}\n\nexport default class MountScroll extends React.Component<MountScrollProps, MountScrollState> {\n  private ele!: HTMLDivElement;\n  private handleScroll: () => void;\n\n  constructor(props: MountScrollProps) {\n    super(props);\n\n    this.state = {\n      pulse: false\n    };\n  }\n\n  public componentDidMount(): void {\n    const handleScrollCompleted = this.handleScrollCompleted.bind(this);\n\n    let timer: number = null;\n    this.handleScroll = () => {\n      if (timer !== null) {\n        window.clearTimeout(timer);\n      }\n      timer = window.setTimeout(() => {\n        handleScrollCompleted();\n        window.removeEventListener('scroll', this.handleScroll);\n      }, 50);\n    };\n\n    window.addEventListener('scroll', this.handleScroll);\n    this.handleScrollIntoView();\n  }\n\n  public componentWillUnmount(): void {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  private handleScrollCompleted(): void {\n    this.setState({ pulse: true });\n  }\n\n  private handleScrollIntoView(): void {\n    if (!!this.ele) {\n      const scrollTo = this.ele.getBoundingClientRect().top - 200 + window.scrollY;\n\n      if (scrollTo !== window.scrollY) {\n        const atBottom = window.innerHeight + window.scrollY >= document.body.scrollHeight - 2;\n        if (atBottom && scrollTo > window.scrollY) {\n          this.handleScrollCompleted();\n        } else {\n          window.setTimeout(() => {\n            window.scrollTo({\n              top: scrollTo,\n              behavior: 'smooth'\n            });\n          }, 0);\n        }\n      } else {\n        this.handleScrollCompleted();\n      }\n    }\n  }\n\n  public render(): JSX.Element | null {\n    const classes = cx({\n      [styles.wrapper]: true,\n      [styles.pulse]: this.state.pulse\n    });\n\n    return (\n      <div\n        className={classes}\n        ref={(ele: HTMLDivElement) => {\n          this.ele = ele;\n        }}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport shared from 'components/shared.module.scss';\nimport TitleBar from 'components/titlebar/TitleBar';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Types } from 'config/interfaces';\nimport { getTypeConfig } from 'config/typeConfigs';\nimport { Action, AnyAction, Endpoints, LocalizationMap, FlowIssue } from 'flowTypes';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Asset, RenderNode, AssetStore } from 'store/flowContext';\nimport AppState from 'store/state';\nimport {\n  ActionAC,\n  DispatchWithState,\n  moveActionUp,\n  OnOpenNodeEditor,\n  onOpenNodeEditor,\n  removeAction\n} from 'store/thunks';\nimport { createClickHandler, getLocalization } from 'utils';\n\nimport styles from './Action.module.scss';\nimport { hasIssues } from 'components/flow/helpers';\nimport MountScroll from 'components/mountscroll/MountScroll';\n\nexport interface ActionWrapperPassedProps {\n  first: boolean;\n  action: AnyAction;\n  localization: LocalizationMap;\n  selected: boolean;\n  issues: FlowIssue[];\n  render: (action: AnyAction, endpoints: Endpoints) => React.ReactNode;\n}\n\nexport interface ActionWrapperStoreProps {\n  assetStore: AssetStore;\n  renderNode: RenderNode;\n  language: Asset;\n  translating: boolean;\n  onOpenNodeEditor: OnOpenNodeEditor;\n  removeAction: ActionAC;\n  moveActionUp: ActionAC;\n  scrollToAction: string;\n}\n\nexport type ActionWrapperProps = ActionWrapperPassedProps & ActionWrapperStoreProps;\n\nexport const actionContainerSpecId = 'action-container';\nexport const actionOverlaySpecId = 'action-overlay';\nexport const actionInteractiveDivSpecId = 'interactive-div';\nexport const actionBodySpecId = 'action-body';\n\nconst cx: any = classNames.bind({ ...shared, ...styles });\n\n// Note: this needs to be a ComponentClass in order to work w/ react-flip-move\nexport class ActionWrapper extends React.Component<ActionWrapperProps> {\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: ActionWrapperProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^on/, /^handle/]\n    });\n  }\n\n  public handleActionClicked(event: React.MouseEvent<HTMLElement>): void {\n    const target = event.target as any;\n\n    const showAdvanced =\n      target && target.attributes && target.getAttribute('data-advanced') === 'true';\n\n    this.props.onOpenNodeEditor({\n      originalNode: this.props.renderNode,\n      originalAction: this.props.action,\n      showAdvanced\n    });\n  }\n\n  public handleRemoval(event: React.MouseEvent<HTMLDivElement>): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.props.removeAction(this.props.renderNode.node.uuid, this.props.action);\n  }\n\n  public handleMoveUp(event: React.MouseEvent<HTMLDivElement>): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.props.moveActionUp(this.props.renderNode.node.uuid, this.props.action);\n  }\n\n  public getAction(): Action {\n    // if we are translating, us our localized version\n    if (this.props.translating) {\n      const localization = getLocalization(\n        this.props.action,\n        this.props.localization,\n        this.props.language\n      );\n      return localization.getObject() as AnyAction;\n    }\n\n    return this.props.action;\n  }\n\n  private getClasses(): string {\n    const localizedKeys = [];\n    let missingLocalization = false;\n\n    if (this.props.translating) {\n      if (\n        this.props.action.type === Types.send_msg ||\n        this.props.action.type === Types.send_broadcast ||\n        this.props.action.type === Types.say_msg\n      ) {\n        localizedKeys.push('text');\n      }\n\n      if (this.props.action.type === Types.send_email) {\n        localizedKeys.push('subject');\n      }\n\n      if (localizedKeys.length !== 0) {\n        const localization = getLocalization(\n          this.props.action,\n          this.props.localization,\n          this.props.language\n        );\n\n        if (localization.isLocalized()) {\n          for (const key of localizedKeys) {\n            if (!(key in localization.localizedKeys)) {\n              missingLocalization = true;\n              break;\n            }\n          }\n        } else {\n          missingLocalization = true;\n        }\n      }\n    }\n\n    const notLocalizable = this.props.translating && localizedKeys.length === 0;\n\n    return cx({\n      [styles.action]: true,\n      [styles.has_router]:\n        this.props.renderNode.node.hasOwnProperty('router') &&\n        this.props.renderNode.node.router !== null,\n      [styles.translating]: this.props.translating,\n      [styles.not_localizable]: notLocalizable,\n      [styles.missing_localization]: missingLocalization,\n      [styles.localized]: !notLocalizable && !missingLocalization\n    });\n  }\n\n  public render(): JSX.Element {\n    const { name } = getTypeConfig(this.props.action.type);\n\n    const classes = this.getClasses();\n    const actionToInject = this.getAction();\n\n    let titleBarClass = (shared as any)[this.props.action.type] || shared.missing;\n    const actionClass = (styles as any)[this.props.action.type] || styles.missing;\n    const showRemoval = !this.props.translating;\n    const showMove = !this.props.first && !this.props.translating;\n\n    if (hasIssues(this.props.issues, this.props.translating, this.props.language)) {\n      titleBarClass = shared.missing;\n    }\n\n    const events = this.context.config.mutable\n      ? createClickHandler(this.handleActionClicked, () => this.props.selected)\n      : {};\n\n    const body = (\n      <>\n        <TitleBar\n          __className={titleBarClass}\n          title={name}\n          onRemoval={this.handleRemoval}\n          showRemoval={showRemoval}\n          showMove={showMove}\n          onMoveUp={this.handleMoveUp}\n          shouldCancelClick={() => this.props.selected}\n        />\n        <div className={styles.body + ' ' + actionClass} data-spec={actionBodySpecId}>\n          {this.props.render(actionToInject, this.context.config.endpoints)}\n        </div>\n      </>\n    );\n    return (\n      <div\n        id={`action-${this.props.action.uuid}`}\n        className={classes}\n        data-spec={actionContainerSpecId}\n      >\n        <div className={styles.overlay} data-spec={actionOverlaySpecId} />\n        <div {...events} data-spec={actionInteractiveDivSpecId}>\n          {this.props.scrollToAction && this.props.scrollToAction === this.props.action.uuid ? (\n            <MountScroll pulseAfterScroll={true}>{body}</MountScroll>\n          ) : (\n            body\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: {\n    assetStore,\n    definition: { localization }\n  },\n  editorState: { language, translating, scrollToAction }\n}: AppState) => ({\n  scrollToAction,\n  assetStore,\n  language,\n  translating,\n  localization\n});\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      onOpenNodeEditor,\n      removeAction,\n      moveActionUp\n    },\n    dispatch\n  );\n\nconst ConnectedActionWrapper = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { forwardRef: true }\n)(ActionWrapper);\n\nexport default ConnectedActionWrapper;\n","import * as React from 'react';\n\nimport styles from './DragHelper.module.scss';\nimport { Trans } from 'react-i18next';\n\ninterface DragHelperState {\n  visible: boolean;\n}\n\nexport default class DragHelper extends React.Component<{}, DragHelperState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      visible: false\n    };\n  }\n\n  public componentDidMount(): void {\n    window.setTimeout(() => {\n      if (!this.state.visible) {\n        this.setState({ visible: true });\n      }\n    }, 100);\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div className={styles.drag_helper + ' ' + (this.state.visible ? styles.visible : '')}>\n        <div className={styles.arrow}>\n          <div className={styles.tail} />\n          <div className={styles.head} />\n        </div>\n        <div className={styles.help_text}>\n          <Trans i18nKey=\"drag_helper\">\n            To connect nodes, <span className={styles.bold}>drag</span> from the red circle.\n          </Trans>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Exit } from 'flowTypes';\n\nexport const getExitActivityKey = (exit: Exit) => {\n  return exit.uuid + ':' + exit.destination_uuid;\n};\n","import * as React from 'react';\nimport { range } from 'utils';\n\nimport styles from './Loading.module.scss';\n\nexport interface LoadingProps {\n  size: number;\n  units: number;\n  color: string;\n  square?: boolean;\n}\n\ninterface Color {\n  r: number;\n  g: number;\n  b: number;\n}\n\ninterface LoadingState {\n  color: Color;\n}\n\nconst hexToRgb = (hex: string): Color => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n      }\n    : null;\n};\n\nexport default class Loading extends React.Component<LoadingProps, LoadingState> {\n  constructor(props: LoadingProps) {\n    super(props);\n\n    this.state = {\n      color: hexToRgb(props.color)\n    };\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div\n        className={styles.loading}\n        style={{\n          width: this.props.size * this.props.units * 2,\n          height: this.props.size\n        }}\n      >\n        {range(0, this.props.units).map((num: number) => (\n          <div\n            key={`ball_${num}`}\n            style={{\n              borderRadius: this.props.square ? '0' : '50%',\n              width: this.props.size,\n              height: this.props.size,\n              margin: this.props.size / 3,\n              animationDelay: `-${1 - num * (1 / this.props.units)}s`,\n              background: `rgba(${this.state.color.r},${this.state.color.g},${\n                this.state.color.b\n              }, ${1 - num * (1 / this.props.units)})`\n            }}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport interface PortalProps {\n  id?: string;\n}\n\nexport class Portal extends React.Component<PortalProps> {\n  private el: HTMLDivElement = null;\n  private portalRoot: HTMLElement = null;\n\n  constructor(props: PortalProps) {\n    super(props);\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    window.setTimeout(() => {\n      this.portalRoot = document.getElementById(this.props.id || 'portal-root');\n      if (this.portalRoot) {\n        this.portalRoot.appendChild(this.el);\n      }\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    if (this.portalRoot) {\n      this.el.remove();\n    }\n  }\n\n  componentDidUpdate(prevProps: PortalProps) {\n    if (this.props.id && prevProps.id !== this.props.id) {\n      window.setTimeout(() => {\n        this.portalRoot = document.getElementById(this.props.id || 'portal-root');\n        this.portalRoot.appendChild(this.el);\n      }, 100);\n    }\n  }\n\n  render() {\n    return ReactDOM.createPortal(this.props.children, this.el);\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport Counter from 'components/counter/Counter';\nimport DragHelper from 'components/draghelper/DragHelper';\nimport { getExitActivityKey } from 'components/flow/exit/helpers';\nimport Loading from 'components/loading/Loading';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Cancel, getRecentMessages } from 'external';\nimport { Category, Exit, FlowNode, LocalizationMap } from 'flowTypes';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { RecentMessage } from 'store/editor';\nimport { Asset } from 'store/flowContext';\nimport AppState from 'store/state';\nimport { DisconnectExit, disconnectExit, DispatchWithState } from 'store/thunks';\nimport { createClickHandler, getLocalization, renderIf } from 'utils';\n\nimport * as moment from 'moment';\nimport styles from './Exit.module.scss';\nimport { Portal } from 'components/Portal';\n\nexport interface RenderCategory extends Category {\n  missing: boolean;\n}\n\nexport interface ExitPassedProps {\n  exit: Exit;\n  categories: Category[];\n  node: FlowNode;\n  showDragHelper: boolean;\n  plumberMakeSource: (id: string) => void;\n  plumberRemove: (id: string) => void;\n  plumberConnectExit: (\n    node: FlowNode,\n    exit: Exit,\n    onConnection: (activityId: string, recentMessagesId: string) => void\n  ) => void;\n  plumberUpdateClass: (\n    node: FlowNode,\n    exit: Exit,\n    className: string,\n    confirmDelete: boolean\n  ) => void;\n}\n\nexport interface ExitStoreProps {\n  translating: boolean;\n  dragging: boolean;\n  language: Asset;\n  localization: LocalizationMap;\n  disconnectExit: DisconnectExit;\n  segmentCount: number;\n  recentMessages: RecentMessage[];\n}\n\nexport type ExitProps = ExitPassedProps & ExitStoreProps;\n\nexport interface ExitState {\n  confirmDelete: boolean;\n  recentMessages: RecentMessage[];\n  fetchingRecentMessages: boolean;\n  showDragHelper: boolean;\n  activityId: string;\n  recentMessagesId: string;\n}\n\nconst cx: any = classNames.bind(styles);\nexport class ExitComp extends React.PureComponent<ExitProps, ExitState> {\n  private timeout: number;\n  private hideDragHelper: number;\n  private pendingMessageFetch: Cancel = {};\n  private ele: HTMLDivElement;\n\n  constructor(props: ExitProps) {\n    super(props);\n\n    this.state = {\n      confirmDelete: false,\n      recentMessages: null,\n      fetchingRecentMessages: false,\n      showDragHelper: props.showDragHelper,\n      activityId: null,\n      recentMessagesId: null\n    };\n\n    bindCallbacks(this, {\n      include: [/^on/, /^get/, /^handle/, /^connect/]\n    });\n  }\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  public getSourceId(): string {\n    return `${this.props.node.uuid}:${this.props.exit.uuid}`;\n  }\n\n  public handleDisconnect(): void {\n    this.setState({ showDragHelper: false });\n  }\n\n  public componentDidMount(): void {\n    this.props.plumberMakeSource(this.getSourceId());\n\n    if (this.ele) {\n      this.ele.addEventListener('disconnect', this.handleDisconnect);\n    }\n\n    if (this.props.exit.destination_uuid) {\n      this.connect();\n    }\n  }\n\n  public componentDidUpdate(prevProps: ExitProps): void {\n    if (this.props.exit.destination_uuid !== prevProps.exit.destination_uuid) {\n      this.connect();\n      if (this.state.confirmDelete) {\n        this.setState({ confirmDelete: false });\n      }\n    }\n\n    if (this.state.showDragHelper && prevProps.showDragHelper && !this.props.showDragHelper) {\n      this.setState({ showDragHelper: false });\n    }\n\n    this.props.plumberUpdateClass(\n      this.props.node,\n      this.props.exit,\n      'confirm-delete',\n      this.state.confirmDelete\n    );\n  }\n\n  public componentWillUnmount(): void {\n    if (this.props.exit.destination_uuid) {\n      this.props.plumberRemove(this.getSourceId());\n    }\n\n    if (this.ele) {\n      this.ele.removeEventListener('disconnect', this.handleDisconnect);\n    }\n  }\n\n  private handleMouseDown(event: React.MouseEvent<HTMLElement>): void {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  private handleClick(event: React.MouseEvent<HTMLElement>): void {\n    if (!this.props.translating) {\n      if (this.props.exit.destination_uuid) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.setState(\n          {\n            confirmDelete: true\n          },\n          () => {\n            this.timeout = window.setTimeout(() => {\n              this.setState({\n                confirmDelete: false\n              });\n            }, 2000);\n          }\n        );\n      } else {\n        event.preventDefault();\n        event.stopPropagation();\n        if (!this.state.showDragHelper) {\n          this.setState({ showDragHelper: true }, () => {\n            if (this.hideDragHelper) {\n              window.clearTimeout(this.hideDragHelper);\n            }\n            this.hideDragHelper = window.setTimeout(() => {\n              this.setState({ showDragHelper: false });\n            }, 3000);\n          });\n        }\n      }\n    }\n  }\n\n  private onDisconnect(event: React.MouseEvent<HTMLElement>): void {\n    if (this.timeout) {\n      window.clearTimeout(this.timeout);\n    }\n\n    if (this.hideDragHelper) {\n      window.clearTimeout(this.hideDragHelper);\n    }\n\n    this.props.disconnectExit(this.props.node.uuid, this.props.exit.uuid);\n  }\n\n  private connect(): void {\n    this.props.plumberConnectExit(\n      this.props.node,\n      this.props.exit,\n      (activityId: string, recentMessagesId: string) => {\n        this.setState({ activityId, recentMessagesId });\n      }\n    );\n  }\n\n  private handleShowRecentMessages(): void {\n    if (this.props.recentMessages) {\n      this.setState({ recentMessages: this.props.recentMessages });\n      return;\n    }\n\n    this.setState({ fetchingRecentMessages: true }, () => {\n      getRecentMessages(\n        this.context.config.endpoints.recents,\n        this.props.exit,\n        this.pendingMessageFetch\n      )\n        .then((recentMessages: RecentMessage[]) => {\n          this.setState({ recentMessages, fetchingRecentMessages: false });\n        })\n        .catch(() => {\n          // we may have been canceled\n        });\n    });\n  }\n\n  private handleHideRecentMessages(): void {\n    if (this.pendingMessageFetch.reject) {\n      this.pendingMessageFetch.reject();\n      this.pendingMessageFetch = {};\n    }\n\n    this.setState({ fetchingRecentMessages: false, recentMessages: null });\n  }\n\n  private getSegmentCount(): JSX.Element {\n    // Only exits with a destination have activity\n    if (this.props.exit.destination_uuid && this.state.activityId) {\n      const key = `${this.props.exit.uuid}-label`;\n      return (\n        <Portal id={this.state.activityId}>\n          <div style={{ position: 'relative' }}>\n            <Counter\n              key={key}\n              count={this.props.segmentCount}\n              containerStyle={styles.activity}\n              countStyle={styles.count}\n              keepVisible={false}\n              onMouseEnter={this.handleShowRecentMessages}\n              onMouseLeave={this.handleHideRecentMessages}\n            />\n          </div>\n        </Portal>\n      );\n    }\n    return null;\n  }\n\n  public getName(): { name: string; localized?: boolean } {\n    if (this.props.translating) {\n      let name: string = '';\n      let delim: string = '';\n\n      let localized: boolean = false;\n\n      this.props.categories.forEach((category: Category) => {\n        const localization = getLocalization(\n          category,\n          this.props.localization,\n          this.props.language\n        );\n\n        localized = localized || 'name' in localization.localizedKeys;\n        const localizedObject = localization.getObject() as Category;\n        name += delim + localizedObject.name;\n        delim = ', ';\n      });\n\n      return { name, localized };\n    } else {\n      const names: string[] = [];\n      this.props.categories.forEach((cat: Category) => {\n        names.push(cat.name);\n      });\n\n      return {\n        name: names.join(', ')\n      };\n    }\n  }\n\n  private getRecentMessages(): JSX.Element {\n    if (this.state.fetchingRecentMessages || this.state.recentMessages !== null) {\n      const recentMessages = this.state.recentMessages || [];\n      const hasRecents = recentMessages.length !== 0;\n\n      const recentStyles = [styles.recent_messages];\n\n      let title = 'Recent Messages';\n      if (!hasRecents && !this.state.fetchingRecentMessages) {\n        title = 'No Recent Messages';\n        recentStyles.push(styles.no_recents);\n      }\n\n      return (\n        <Portal id={this.state.recentMessagesId}>\n          <div className={recentStyles.join(' ')}>\n            <div className={styles.title}>{title}</div>\n            {recentMessages.map((recentMessage: RecentMessage, idx: number) => (\n              <div key={'recent_' + idx} className={styles.message}>\n                <div className={styles.text}>{recentMessage.text}</div>\n                <div className={styles.sent}>{moment.utc(recentMessage.sent).fromNow()}</div>\n              </div>\n            ))}\n            {this.state.recentMessages === null ? (\n              <div className={styles.loading}>\n                <Loading size={10} units={6} color=\"#999999\" />\n              </div>\n            ) : null}\n          </div>\n        </Portal>\n      );\n    }\n    return null;\n  }\n\n  public render(): JSX.Element {\n    const { name, localized } = this.getName();\n\n    const nameStyle = name ? styles.name : '';\n    const connected = this.props.exit.destination_uuid ? ' jtk-connected' : '';\n    const dragNodeClasses = cx(styles.endpoint, connected);\n    const confirmDelete =\n      this.state.confirmDelete && this.props.exit.hasOwnProperty('destination_uuid');\n    const confirm: JSX.Element =\n      confirmDelete && this.context.config.mutable ? (\n        <div\n          className={styles.confirm_x + ' fe-x'}\n          {...createClickHandler(this.onDisconnect, () => this.props.dragging)}\n        />\n      ) : null;\n    const exitClasses: string = cx({\n      [styles.exit]: true,\n      'plumb-exit': true,\n      [styles.translating]: this.props.translating,\n      [styles.unnamed_exit]: name == null,\n      [styles.missing_localization]: name && this.props.translating && !localized,\n      [styles.confirm_delete]: confirmDelete\n    });\n\n    const activity = this.getSegmentCount();\n    const recents = this.getRecentMessages();\n\n    const events = this.context.config.mutable\n      ? createClickHandler(\n          this.handleClick,\n          () => {\n            return this.props.dragging;\n          },\n          this.handleMouseDown\n        )\n      : {};\n\n    return (\n      <div className={exitClasses}>\n        {name ? <div className={nameStyle}>{name}</div> : null}\n        <div\n          ref={(ref: HTMLDivElement) => (this.ele = ref)}\n          {...events}\n          id={`${this.props.node.uuid}:${this.props.exit.uuid}`}\n          className={dragNodeClasses}\n        >\n          {confirm}\n        </div>\n        {activity}\n        {recents}\n        {renderIf(this.state.showDragHelper)(<DragHelper />)}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (\n  {\n    flowContext: {\n      definition: { localization }\n    },\n    editorState: { translating, language, dragActive, activity }\n  }: AppState,\n  props: ExitPassedProps\n) => {\n  // see if we have some passed in (simulated) messages\n  let recentMessages: RecentMessage[] = null;\n  const key = getExitActivityKey(props.exit);\n  if (key in (activity.recentMessages || {})) {\n    recentMessages = activity.recentMessages[key];\n  }\n\n  const segmentCount = activity.segments[getExitActivityKey(props.exit)] || 0;\n  return {\n    dragging: dragActive,\n    segmentCount,\n    translating,\n    language,\n    localization,\n    recentMessages\n  };\n};\n\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators({ disconnectExit }, dispatch);\n\nconst ConnectedExit = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExitComp);\n\nexport default ConnectedExit;\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport Counter from 'components/counter/Counter';\nimport ActionWrapper from 'components/flow/actions/action/Action';\nimport ExitComp from 'components/flow/exit/Exit';\nimport {\n  getCategoriesForExit,\n  getResultName,\n  getVisibleActions,\n  filterIssuesForAction\n} from 'components/flow/node/helpers';\nimport { getSwitchRouter } from 'components/flow/routers/helpers';\nimport shared from 'components/shared.module.scss';\nimport TitleBar from 'components/titlebar/TitleBar';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { Types } from 'config/interfaces';\nimport { getType, getTypeConfig } from 'config/typeConfigs';\nimport { AnyAction, Exit, FlowNode, FlowIssue } from 'flowTypes';\nimport * as React from 'react';\nimport FlipMove from 'react-flip-move';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { DebugState } from 'store/editor';\nimport { AssetMap, RenderNode, Asset } from 'store/flowContext';\nimport AppState from 'store/state';\nimport {\n  DispatchWithState,\n  MergeEditorState,\n  mergeEditorState,\n  OnAddToNode,\n  onAddToNode,\n  OnOpenNodeEditor,\n  onOpenNodeEditor,\n  RemoveNode,\n  removeNode\n} from 'store/thunks';\nimport { ClickHandler, createClickHandler } from 'utils';\n\nimport styles from './Node.module.scss';\nimport { hasIssues } from '../helpers';\nimport MountScroll from 'components/mountscroll/MountScroll';\n\nexport interface NodePassedProps {\n  nodeUUID: string;\n  plumberMakeTarget: (id: string) => void;\n  plumberRecalculate: (id: string) => void;\n  plumberMakeSource: (id: string) => void;\n  plumberRemove: (id: string) => void;\n  plumberConnectExit: (\n    node: FlowNode,\n    exit: Exit,\n    onConnection: (activityId: string, recentMessagesId: string) => void\n  ) => void;\n  plumberUpdateClass: (\n    node: FlowNode,\n    exit: Exit,\n    className: string,\n    confirmDelete: boolean\n  ) => void;\n  startingNode: boolean;\n  onlyNode: boolean;\n  selected: boolean;\n  ghostRef?: any;\n  ghost?: boolean;\n}\n\nexport interface NodeStoreProps {\n  results: AssetMap;\n  language: Asset;\n  languages: AssetMap;\n  activeCount: number;\n  translating: boolean;\n  simulating: boolean;\n  debug: DebugState;\n  renderNode: RenderNode;\n  issues: FlowIssue[];\n  onAddToNode: OnAddToNode;\n  onOpenNodeEditor: OnOpenNodeEditor;\n  removeNode: RemoveNode;\n  mergeEditorState: MergeEditorState;\n  scrollToNode: string;\n  scrollToAction: string;\n}\n\nexport type NodeProps = NodePassedProps & NodeStoreProps;\n\nconst cx: any = classNames.bind({ ...shared, ...styles });\n\nconst EMPTY: any[] = [];\n/**\n * A single node in the rendered flow\n */\nexport class NodeComp extends React.PureComponent<NodeProps> {\n  public ele: HTMLDivElement;\n  private firstAction: any;\n  private clicking: boolean;\n  private events: ClickHandler;\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: NodeProps, context: any) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/Ref$/, /^on/, /^get/, /^handle/]\n    });\n\n    this.events = context.config.mutable\n      ? createClickHandler(this.onClick, this.handleShouldCancelClick)\n      : {};\n  }\n\n  private handleShouldCancelClick(): boolean {\n    return this.props.selected;\n  }\n\n  private eleRef(ref: HTMLDivElement): HTMLDivElement {\n    return (this.ele = ref);\n  }\n\n  private getGhostListener(): any {\n    return (e: MouseEvent) => {\n      if (this.ele) {\n        let canvas = this.ele.parentElement;\n        if (this.ele.parentElement.parentElement) {\n          canvas = this.ele.parentElement.parentElement;\n        }\n\n        const canvasBounds = canvas.getBoundingClientRect();\n\n        // move our ghost node into position\n        const width = this.ele.getBoundingClientRect().width;\n        const left = e.pageX - width / 2 - 15 - canvasBounds.left;\n        const top = e.pageY - canvasBounds.top - window.scrollY;\n        const style = this.ele.style;\n        style.left = left + 'px';\n        style.top = top + 'px';\n\n        // Hide ourselves if there's a drop target\n        style.visibility = document.querySelector('.plumb-drop-hover') ? 'hidden' : 'visible';\n      }\n    };\n  }\n\n  public componentDidMount(): void {\n    // Make ourselves a target\n    this.props.plumberMakeTarget(this.props.renderNode.node.uuid);\n\n    // Move our drag node around as necessary\n    if (this.props.ghost) {\n      // We store our listener on the window so flow can remove it\n      // this is a bit hacky but allows us to remove our dependency on jquery\n      // TODO: rework ghost node to manage its location like other nodes\n      const ghostListener: any = this.getGhostListener();\n      (window as any).ghostListener = ghostListener;\n      document.addEventListener('mousemove', ghostListener);\n    }\n  }\n\n  public componentDidUpdate(prevProps: any): void {\n    // traceUpdate(this, prevProps);\n\n    // when our exits change, we need to recalculate the endpoints\n    if (!this.props.ghost) {\n      try {\n        this.props.plumberRecalculate(this.props.renderNode.node.uuid);\n        for (const exit of this.props.renderNode.node.exits) {\n          this.props.plumberRecalculate(this.props.renderNode.node.uuid + ':' + exit.uuid);\n        }\n      } catch (error) {\n        // console.log(error);\n      }\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.props.plumberRemove(this.props.renderNode.node.uuid);\n  }\n\n  /* istanbul ignore next */\n  private handleUUIDClicked(event: React.MouseEvent<HTMLElement>): void {\n    const selection = window.getSelection();\n    const range = document.createRange();\n    range.selectNodeContents(event.currentTarget);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    document.execCommand('copy');\n    selection.removeAllRanges();\n    console.log(event.currentTarget.textContent + ' copied to clipboard.');\n  }\n\n  private handleAddToNode(): void {\n    this.props.onAddToNode(this.props.renderNode.node);\n  }\n\n  // Applies only to router nodes;\n  // ./Action/Action handles click logic for Action nodes.\n  private onClick(event: React.MouseEvent<HTMLElement>): void {\n    this.props.onOpenNodeEditor({\n      originalNode: this.props.renderNode\n    });\n  }\n\n  private handleRemoval(event: React.MouseEvent<HTMLElement>): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.props.removeNode(this.props.renderNode.node);\n  }\n\n  private getExits(): JSX.Element[] {\n    if (this.props.renderNode.node.exits) {\n      return this.props.renderNode.node.exits.map((exit: Exit, idx: number) => (\n        <ExitComp\n          key={exit.uuid}\n          node={this.props.renderNode.node}\n          categories={getCategoriesForExit(this.props.renderNode, exit)}\n          exit={exit}\n          showDragHelper={this.props.onlyNode && idx === 0}\n          plumberMakeSource={this.props.plumberMakeSource}\n          plumberRemove={this.props.plumberRemove}\n          plumberConnectExit={this.props.plumberConnectExit}\n          plumberUpdateClass={this.props.plumberUpdateClass}\n        />\n      ));\n    }\n    return [];\n  }\n\n  private isSelected(): boolean {\n    return this.props.selected;\n  }\n\n  private isStartNodeVisible(): boolean {\n    return this.props.startingNode;\n  }\n\n  /* istanbul ignore next */\n  private renderDebug(): JSX.Element {\n    if (this.props.debug) {\n      if (this.props.debug.showUUIDs) {\n        return (\n          <span\n            id={`uuid-${this.props.renderNode.node.uuid}`}\n            onClick={this.handleUUIDClicked}\n            className={styles.uuid}\n          >\n            {this.props.renderNode.node.uuid}\n          </span>\n        );\n      }\n    }\n  }\n\n  public render(): JSX.Element {\n    const actions: JSX.Element[] = [];\n\n    let actionList: JSX.Element = null;\n    if (this.props.renderNode.node.actions) {\n      // Save the first reference off to manage our clicks\n      let firstRef: { ref: (ref: any) => any } | {} = {\n        ref: (ref: any) => (this.firstAction = ref)\n      };\n\n      getVisibleActions(this.props.renderNode).forEach((action: AnyAction, idx: number) => {\n        const actionConfig = getTypeConfig(action.type);\n\n        const issues: FlowIssue[] = filterIssuesForAction(\n          this.props.nodeUUID,\n          action,\n          this.props.issues\n        );\n\n        if (actionConfig.hasOwnProperty('component') && actionConfig.component) {\n          const { component: ActionComponent } = actionConfig;\n          if (actionConfig.massageForDisplay) {\n            actionConfig.massageForDisplay(action);\n          }\n\n          actions.push(\n            <ActionWrapper\n              {...firstRef}\n              key={action.uuid}\n              renderNode={this.props.renderNode}\n              selected={this.props.selected}\n              action={action}\n              first={idx === 0}\n              issues={issues}\n              render={(anyAction: AnyAction) => {\n                return (\n                  <ActionComponent\n                    {...anyAction}\n                    languages={this.props.languages}\n                    issues={issues}\n                  />\n                );\n              }}\n            />\n          );\n        }\n\n        firstRef = {};\n      });\n\n      actionList =\n        actions.length > 0 ? (\n          <FlipMove enterAnimation=\"fade\" leaveAnimation=\"fade\" duration={300} easing=\"ease-out\">\n            {actions}\n          </FlipMove>\n        ) : null;\n    }\n\n    let header: JSX.Element = null;\n    let addActions: JSX.Element = null;\n    let summary: JSX.Element = null;\n\n    // Router node display logic\n    const type = getType(this.props.renderNode);\n    if (type !== Types.execute_actions) {\n      const config = getTypeConfig(type);\n      let title: string = config.name;\n\n      const switchRouter = getSwitchRouter(this.props.renderNode.node);\n      if (switchRouter) {\n        if (type === Types.split_by_contact_field && this.props.renderNode.ui.config.operand.name) {\n          title = `Split by ${this.props.renderNode.ui.config.operand.name}`;\n        }\n      }\n\n      const resultName = getResultName(this.props.renderNode.node);\n      if (resultName) {\n        summary = (\n          <div {...this.events} className={styles.save_result}>\n            <div className={styles.save_as}>Save as </div>\n            <div className={styles.result_name}>{resultName}</div>\n          </div>\n        );\n      }\n\n      if (\n        title === null &&\n        (type === Types.split_by_run_result || type === Types.split_by_run_result_delimited)\n      ) {\n        title = `Split by ${this.props.results[this.props.renderNode.ui.config.operand.id].name}`;\n      }\n\n      if (title === null) {\n        title = config.name;\n      }\n\n      if (!this.props.renderNode.node.actions || !this.props.renderNode.node.actions.length) {\n        // Router headers are introduced here while action headers are introduced in ./Action/Action\n        header = (\n          // Wrap in a relative parent so it honors node clipping\n          <div style={{ position: 'relative' }}>\n            <div {...this.events}>\n              <TitleBar\n                __className={\n                  (shared as any)[\n                    hasIssues(this.props.issues, this.props.translating, this.props.language)\n                      ? 'missing'\n                      : config.type\n                  ]\n                }\n                showRemoval={!this.props.translating}\n                onRemoval={this.handleRemoval}\n                shouldCancelClick={this.handleShouldCancelClick}\n                title={title}\n              />\n            </div>\n          </div>\n        );\n      }\n    } else {\n      // Don't show add actions option if we are translating\n      if (!this.props.translating && this.context.config.mutable) {\n        addActions = (\n          <div\n            className={styles.add}\n            {...createClickHandler(this.handleAddToNode, this.handleShouldCancelClick)}\n          >\n            <span className=\"fe-add\" />\n          </div>\n        );\n      }\n    }\n\n    const exits: JSX.Element[] = this.getExits();\n\n    const classes = cx({\n      'plumb-drag': true,\n      [styles.ghost]: this.props.ghost,\n      [styles.flow_start]: this.isStartNodeVisible(),\n      [styles.selected]: this.isSelected(),\n      [styles.immutable]: !this.context.config.mutable\n    });\n\n    const uuid: JSX.Element = this.renderDebug();\n\n    const body = (\n      <div className={styles.node}>\n        {this.isStartNodeVisible() ? (\n          <div className={styles.flow_start_message}>Flow Start</div>\n        ) : null}\n\n        {uuid}\n        <Counter\n          count={this.props.activeCount}\n          containerStyle={styles.active}\n          countStyle={''}\n          keepVisible={this.props.simulating}\n          onClick={() => {\n            if (this.context.config.onActivityClicked) {\n              this.context.config.onActivityClicked(this.props.nodeUUID, this.props.activeCount);\n            }\n          }}\n        />\n\n        <div className={styles.cropped}>\n          {header}\n          {actionList}\n          {summary}\n        </div>\n\n        <div className={`${styles.exit_table}`}>\n          <div className={styles.exits} {...this.events}>\n            {exits}\n          </div>\n          {addActions}\n        </div>\n      </div>\n    );\n\n    const renderedNode = (\n      <div\n        id={this.props.renderNode.node.uuid}\n        className={`${styles.node_container} ${classes}`}\n        ref={this.eleRef}\n      >\n        {!this.props.scrollToAction &&\n        this.props.scrollToNode &&\n        this.props.scrollToNode === this.props.nodeUUID ? (\n          <MountScroll pulseAfterScroll={true}>{body}</MountScroll>\n        ) : (\n          body\n        )}\n      </div>\n    );\n    return renderedNode;\n  }\n}\n\nconst mapStateToProps = (\n  {\n    flowContext: {\n      nodes,\n      issues,\n      assetStore: {\n        results: { items: results },\n        languages: { items: languages }\n      }\n    },\n    editorState: {\n      translating,\n      debug,\n      ghostNode,\n      simulating,\n      activity,\n      language,\n      scrollToAction,\n      scrollToNode\n    }\n  }: AppState,\n  props: NodePassedProps\n) => {\n  let renderNode: RenderNode = null;\n\n  // if we match our ghost node use that\n  if (ghostNode && ghostNode.node.uuid === props.nodeUUID) {\n    renderNode = ghostNode;\n  }\n\n  // otherwise look up our node from the list\n  else if (props.nodeUUID in nodes) {\n    renderNode = nodes[props.nodeUUID];\n  }\n\n  if (!renderNode) {\n    throw Error(\"Couldn't find node for \" + props.nodeUUID);\n  }\n\n  const activeCount = activity.nodes[props.nodeUUID] || 0;\n\n  // only set our scroll flags if they affect us\n  const scrollNode = scrollToNode && scrollToNode === props.nodeUUID ? scrollToNode : null;\n  const scrollAction = scrollToAction && scrollNode ? scrollToAction : null;\n\n  return {\n    issues: (issues || {})[props.nodeUUID] || EMPTY,\n    results,\n    language,\n    languages,\n    activeCount,\n    translating,\n    debug,\n    renderNode,\n    simulating,\n    scrollToNode: scrollNode,\n    scrollToAction: scrollAction\n  };\n};\n\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      onAddToNode,\n      onOpenNodeEditor,\n      removeNode,\n      mergeEditorState\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { forwardRef: true }\n)(NodeComp);\n","import Dialog, { ButtonSet } from 'components/dialog/Dialog';\nimport { MediaPlayer } from 'components/mediaplayer/MediaPlayer';\nimport Modal from 'components/modal/Modal';\nimport styles from 'components/simulator/LogEvent.module.scss';\nimport { Types } from 'config/interfaces';\nimport { Flow, Group, Label } from 'flowTypes';\nimport * as React from 'react';\nimport { createUUID, getURNPath } from 'utils';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\n\nconst MAP_THUMB = require('static/images/map.jpg');\n\ninterface MsgProps {\n  text: string;\n  uuid: string;\n  urn: string;\n  attachments?: string[];\n  quick_replies?: string[];\n}\n\ninterface WebRequestLog {\n  url: string;\n  request: string;\n  response: string;\n}\n\ninterface ClassifierIntent {\n  name: string;\n  confidence: number;\n}\n\ninterface ClassifierEntity {\n  value: string;\n  confidence: number;\n}\n\nexport interface EventProps {\n  step_uuid: string;\n  uuid?: string;\n  created_on?: string;\n  type?: string;\n  field?: { key: string; name: string };\n  field_uuid?: string;\n  result_name?: string;\n  text?: string;\n  name?: string;\n  value?: string | { text: string };\n  body?: string;\n  addresses?: string[];\n  to?: string[];\n  subject?: string;\n  url?: string;\n  status?: string;\n  status_code?: number;\n  request?: string;\n  response?: string;\n  resthook?: string;\n  base_language?: string;\n  language?: string;\n  translations?: { [lang: string]: { [text: string]: string } };\n  groups?: Group[];\n  flow?: Flow;\n  groups_added?: Group[];\n  groups_removed?: Group[];\n  labels?: Label[];\n  msg?: MsgProps;\n  http_logs?: WebRequestLog[];\n  extra?: any;\n  urns?: string[];\n  service?: string;\n  classifier?: { uuid: string; name: string };\n  ticketer?: { uuid: string; name: string };\n}\n\ninterface FlowEvent {\n  step_uuid: string;\n  type: string;\n}\n\ninterface AirtimeTransferEvent extends FlowEvent {\n  actual_amount: number;\n  desired_amount: number;\n  currency: string;\n  http_logs: WebRequestLog[];\n  recipient: string;\n  sender: string;\n}\n\ninterface LogEventState {\n  detailsVisible: boolean;\n}\n\nexport enum Direction {\n  MT,\n  MO\n}\n\nconst getStyleForDirection = (direction: Direction): string => {\n  return direction === Direction.MO ? styles.msg_received : styles.send_msg;\n};\n\nconst renderError = (error: string): JSX.Element => {\n  return (\n    <div className={styles.error}>\n      <span>Error: {error}</span>\n    </div>\n  );\n};\n\nconst renderInfo = (info: string): JSX.Element => {\n  // localized text can have html entities, so this isn't as dangerous as it looks\n  return (\n    <div key={info} className={styles.info}>\n      <span dangerouslySetInnerHTML={{ __html: info }} />\n    </div>\n  );\n};\n\nconst renderAttachment = (attachment: string): JSX.Element => {\n  const idx = attachment.indexOf(':');\n  if (idx > -1) {\n    const type = attachment.substr(0, idx);\n    const url = attachment.substr(idx + 1);\n    if (type.startsWith('audio')) {\n      return (\n        <div className={styles.audio_attachment}>\n          <div className={styles.media_player}>\n            <MediaPlayer url={url} />\n          </div>\n          <div className={styles.audio_text}>Audio Recording</div>\n        </div>\n      );\n    } else if (type.startsWith('image')) {\n      return <img src={url} alt=\"Attachment\" />;\n    } else if (type.startsWith('geo')) {\n      return <img src={MAP_THUMB} alt=\"Attachment\" />;\n    } else if (type.startsWith('video')) {\n      return (\n        <div className={styles.video_attachment}>\n          <video controls={true} src={url} />\n        </div>\n      );\n    }\n  }\n  return null;\n};\n\nconst renderMessage = (text: string, attachments: string[], direction: Direction): JSX.Element => {\n  const attaches = attachments || [];\n  return (\n    <div className={getStyleForDirection(direction)}>\n      {attaches.map((attachment: string) => (\n        <div key={text + attachment}>{renderAttachment(attachment)}</div>\n      ))}\n      {text\n        ? text.split('\\n').map((item, key) => {\n            return (\n              <div key={createUUID()} className={styles.msg_text}>\n                {item}\n              </div>\n            );\n          })\n        : null}\n    </div>\n  );\n};\n\n/**\n * Viewer for log events\n */\nexport default class LogEvent extends React.Component<EventProps, LogEventState> {\n  constructor(props: EventProps) {\n    super(props);\n    this.state = {\n      detailsVisible: false\n    };\n\n    this.showDetails = this.showDetails.bind(this);\n    this.getButtons = this.getButtons.bind(this);\n  }\n\n  private getButtons(): ButtonSet {\n    return {\n      primary: {\n        name: 'Ok',\n        onClick: () => {\n          this.setState({ detailsVisible: false });\n        }\n      }\n    };\n  }\n\n  private showDetails(): void {\n    this.setState({ detailsVisible: true });\n  }\n\n  private renderGroupsChanged(): JSX.Element {\n    let parts: string[] = [];\n    if (this.props.groups_added) {\n      const info = i18n.t('simulator.added_to_group', 'Added to ');\n      parts.push(info + this.renderValueList(this.props.groups_added.map(group => group.name)));\n    }\n    if (this.props.groups_removed) {\n      const info = i18n.t('simulator.removed_from_group', 'Removed from ');\n      parts.push(info + this.renderValueList(this.props.groups_removed.map(group => group.name)));\n    }\n\n    return renderInfo(parts.join('. '));\n  }\n\n  private renderLabelsAdded(): JSX.Element {\n    let info = i18n.t('simulator.input_labels_added', 'Message labeled with ');\n\n    return renderInfo(info + this.renderValueList(this.props.labels.map(label => label.name)));\n  }\n\n  private renderEmailSent(): JSX.Element {\n    const recipients = this.props.to || this.props.addresses;\n    return this.renderClickable(\n      <div className={styles.info + ' ' + styles.email}>\n        <Trans\n          i18nKey=\"simulator.sent_email.summary\"\n          values={{ recipients: this.renderValueList(recipients), subject: this.props.subject }}\n        >\n          Sent email to [[recipients]] with subject \"[[subject]]\"\n        </Trans>\n      </div>,\n      <Dialog\n        title={i18n.t('simulator.sent_email.title', 'Email Details')}\n        headerClass={Types.send_email}\n        buttons={this.getButtons()}\n        noPadding={true}\n      >\n        <div className={styles.email_details}>\n          <div className={styles.to}>\n            {i18n.t('email.to', 'To')}: {this.renderValueList(recipients)}\n          </div>\n          <div className={styles.subject}>\n            {i18n.t('email.subject', 'Subject')}: {this.props.subject}\n          </div>\n          <div className={styles.body}>{this.props.body}</div>\n        </div>\n      </Dialog>\n    );\n  }\n\n  private renderHTTPRequest(headerClass: Types, log: WebRequestLog): JSX.Element {\n    return this.renderClickable(\n      <div className={styles.info + ' ' + styles.webhook}>\n        <span>Called {log.url}</span>\n      </div>,\n      <Dialog\n        title={i18n.t('simulator.httplog_dialog', 'HTTP Request Details')}\n        headerClass={headerClass}\n        buttons={this.getButtons()}\n        noPadding={true}\n      >\n        <div className={styles.webhook_details}>\n          <div className={''}>{log.request}</div>\n          <div className={styles.response}>{log.response}</div>\n        </div>\n      </Dialog>\n    );\n  }\n\n  private renderWebhook(headerClass: Types): JSX.Element {\n    if (this.props.http_logs) {\n      return (\n        <>\n          {this.props.http_logs.map((log: WebRequestLog) => {\n            return this.renderHTTPRequest(headerClass, log);\n          })}\n        </>\n      );\n    }\n    if (this.props.url) {\n      return this.renderHTTPRequest(headerClass, this.props as WebRequestLog);\n    }\n  }\n\n  private renderClickable(element: JSX.Element, details: JSX.Element): JSX.Element {\n    return (\n      <div key={this.props.step_uuid}>\n        <div className={styles.has_detail} onClick={this.showDetails}>\n          {element}\n        </div>\n        <Modal show={this.state.detailsVisible}>\n          <div className={styles.event_viewer}>{details}</div>\n        </Modal>\n      </div>\n    );\n  }\n\n  private renderClassification(): JSX.Element {\n    return (\n      <table className={styles.classification}>\n        <tbody>\n          {(this.props.extra.intents || []).map((intent: ClassifierIntent) => (\n            <tr key={intent.name + intent.confidence}>\n              <td>{intent.name}</td>\n              <td>intent</td>\n              <td>{intent.confidence.toFixed(3)}</td>\n            </tr>\n          ))}\n\n          {Object.keys(this.props.extra.entities || []).map((key: string) => {\n            const entities = this.props.extra.entities[key];\n            return entities.map((entity: ClassifierEntity) =>\n              key !== entity.value ? (\n                <tr key={entity.value + entity.confidence}>\n                  <td>{entity.value}</td>\n                  <td>{key}</td>\n                  <td>{entity.confidence.toFixed(3)}</td>\n                </tr>\n              ) : null\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  }\n\n  public renderLogEvent(): JSX.Element {\n    if (this.props.extra && this.props.extra.intents) {\n      return this.renderClassification();\n    }\n\n    switch (this.props.type) {\n      case 'msg_received':\n        return renderMessage(this.props.msg.text, this.props.msg.attachments, Direction.MO);\n      case 'msg_created':\n        return renderMessage(this.props.msg.text, this.props.msg.attachments, Direction.MT);\n      case 'ivr_created':\n        return renderMessage(this.props.msg.text, this.props.msg.attachments, Direction.MT);\n      case 'error':\n        return renderError(this.props.text);\n      case 'failure':\n        return renderError(this.props.text);\n      case 'msg_wait':\n        return renderInfo(i18n.t('simulator.msg_wait', 'Waiting for reply'));\n      case 'contact_groups_changed':\n        return this.renderGroupsChanged();\n      case 'contact_urns_changed':\n        return renderInfo('Added a URN for the contact');\n      case 'contact_field_changed':\n        const value = this.getValue(this.props.value);\n        if (value !== '') {\n          return renderInfo(\n            i18n.t('simulator.contact_field_changed', 'Set contact \"[[field]]\" to \"[[value]]\"', {\n              field: this.props.field.name,\n              value: this.getValue(this.props.value)\n            })\n          );\n        } else {\n          return renderInfo(\n            i18n.t('simulator.contact_field_cleared', 'Cleared contact \"[[field]]\"', {\n              field: this.props.field.name\n            })\n          );\n        }\n      case 'run_result_changed':\n        return renderInfo(\n          i18n.t('simulator.run_result_changed', 'Set result \"[[field]]\" to \"[[value]]\"', {\n            field: this.props.name,\n            value: this.getValue(this.props.value)\n          })\n        );\n      case 'contact_name_changed':\n        return renderInfo(\n          i18n.t('simulator.contact_name_changed', 'Set contact name to \"[[name]]\"', {\n            name: this.props.name\n          })\n        );\n      case 'email_created':\n      case 'email_sent':\n        return this.renderEmailSent();\n      case 'broadcast_created':\n        return renderMessage(\n          this.props.translations[this.props.base_language].text,\n          this.props.msg ? this.props.msg.attachments : [],\n          Direction.MT\n        );\n      case 'resthook_called':\n        return renderInfo(\n          i18n.t('simulator.resthook_called', 'Triggered flow event \"[[resthook]]\"', {\n            resthook: this.props.resthook\n          })\n        );\n      case 'service_called':\n        if (this.props.service === 'classifier') {\n          return this.renderWebhook(Types.call_classifier);\n        }\n        break;\n      case 'webhook_called':\n        return this.renderWebhook(Types.call_webhook);\n      case 'flow_entered':\n        return renderInfo(\n          i18n.t('simulator.flow_entered', 'Entered flow \"[[flow]]\"', {\n            flow: this.props.flow.name\n          })\n        );\n      case 'session_triggered':\n        return renderInfo(\n          i18n.t('simulator.session_triggered', 'Started somebody else in \"[[flow]]\"', {\n            flow: this.props.flow.name\n          })\n        );\n      case 'contact_language_changed':\n        return renderInfo(\n          i18n.t('simulator.contact_language_changed', 'Set preferred language to \"[[language]]\"', {\n            language: this.props.language\n          })\n        );\n      case 'info':\n        return renderInfo(this.props.text);\n      case 'input_labels_added':\n        return this.renderLabelsAdded();\n      case 'environment_refreshed':\n        return null;\n      case 'ticket_opened':\n        return renderInfo(\n          i18n.t('simulator.ticket_opened', 'Ticket opened with subject \"[[subject]]\"', {\n            subject: this.props.subject\n          })\n        );\n      case 'airtime_transferred':\n        const event = this.props as AirtimeTransferEvent;\n        return (\n          <>\n            {this.renderWebhook(Types.transfer_airtime)}\n\n            {renderInfo(\n              i18n.t(\n                'simulator.airtime_transferred',\n                'Transferred [[amount]] [[currency]] to [[recipient]]',\n                {\n                  amount: event.actual_amount,\n                  currency: event.currency,\n                  recipient: getURNPath(event.recipient)\n                }\n              )\n            )}\n          </>\n        );\n    }\n\n    // should only get here if we are get an unexpected event\n    console.log('Simulator render missing', this.props);\n    return null;\n  }\n\n  public render(): JSX.Element {\n    return <div className={styles.evt}>{this.renderLogEvent()}</div>;\n  }\n\n  /**\n   * Helper to render a list of values with each value quoted\n   */\n  private renderValueList(values: string[]): string {\n    let text = '';\n    let delim = '';\n    values.forEach(value => {\n      text += `${delim}\"${value}\"`;\n      delim = ', ';\n    });\n    return text;\n  }\n\n  /**\n   * Helper for value fields which can be an object (contact_field_changed) or string (run_result_changed)\n   */\n  private getValue(value: string | { text: string } | null): string {\n    if (!value) {\n      return '';\n    } else if (typeof value === 'string') {\n      return value;\n    }\n    return value.text;\n  }\n}\n","import * as React from 'react';\nimport ReactModal from 'react-modal';\n\ninterface CustomStyles {\n  content: { [cssProperty: string]: string | number };\n}\n\nexport interface ModalProps {\n  show: boolean;\n  onClose?(): void;\n\n  onModalOpen?: any;\n  width?: string;\n}\n\n// A base modal for displaying messages or performing single button actions\nexport default class Modal extends React.Component<ModalProps> {\n  public render(): JSX.Element {\n    const customStyles: CustomStyles = {\n      content: {\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: '40px',\n        bottom: 'initial',\n        padding: 'none',\n        borderRadius: 'none',\n        outline: 'none',\n        width: this.props.width ? this.props.width : '700px',\n        border: 'none'\n      }\n    };\n    return (\n      <ReactModal\n        ariaHideApp={false}\n        isOpen={this.props.show}\n        onAfterOpen={this.props.onModalOpen}\n        onRequestClose={this.props.onClose}\n        style={customStyles}\n        shouldCloseOnOverlayClick={false}\n        contentLabel=\"Modal\"\n      >\n        {this.props.children}\n      </ReactModal>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport { getDraggedFrom } from 'components/helpers';\nimport Modal from 'components/modal/Modal';\nimport { Type } from 'config/interfaces';\nimport { Action, AnyAction, FlowDefinition, FlowIssue } from 'flowTypes';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { UpdateUserAddingAction } from 'store/actionTypes';\nimport { Asset, AssetStore, RenderNode } from 'store/flowContext';\nimport { NodeEditorSettings, updateUserAddingAction } from 'store/nodeEditor';\nimport AppState from 'store/state';\nimport {\n  AddAsset,\n  addAsset,\n  DispatchWithState,\n  GetState,\n  HandleTypeConfigChange,\n  handleTypeConfigChange,\n  LocalizationUpdates,\n  MergeEditorState,\n  mergeEditorState,\n  NoParamsAC,\n  onUpdateAction,\n  OnUpdateAction,\n  OnUpdateLocalizations,\n  onUpdateLocalizations,\n  OnUpdateRouter,\n  onUpdateRouter,\n  resetNodeEditingState\n} from 'store/thunks';\nimport { CompletionSchema } from 'utils/completion';\nimport { LocalizationFormProps } from 'components/flow/props';\n\nexport type UpdateLocalizations = (language: string, changes: LocalizationUpdates) => void;\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nexport interface NodeEditorPassedProps {\n  plumberConnectExit: Function;\n  helpArticles: { [key: string]: string };\n}\n\nexport interface NodeEditorStoreProps {\n  assetStore: AssetStore;\n  addAsset: AddAsset;\n  language: Asset;\n  definition: FlowDefinition;\n  translating: boolean;\n  typeConfig: Type;\n  settings: NodeEditorSettings;\n  nodes: { [uuid: string]: RenderNode };\n  handleTypeConfigChange: HandleTypeConfigChange;\n  resetNodeEditingState: NoParamsAC;\n  issues: FlowIssue[];\n  mergeEditorState: MergeEditorState;\n  onUpdateLocalizations: OnUpdateLocalizations;\n  onUpdateAction: OnUpdateAction;\n  onUpdateRouter: OnUpdateRouter;\n  updateUserAddingAction: UpdateUserAddingAction;\n  completionSchema: CompletionSchema;\n}\n\nexport type NodeEditorProps = NodeEditorPassedProps & NodeEditorStoreProps;\n\nexport interface FormProps {\n  // our two ways of updating\n  updateRouter(renderNode: RenderNode): void;\n  updateAction(action: AnyAction): void;\n\n  addAsset(assetType: string, asset: Asset): void;\n  completionSchema: CompletionSchema;\n\n  assetStore: AssetStore;\n  issues: FlowIssue[];\n  helpArticles: { [key: string]: string };\n\n  nodeSettings?: NodeEditorSettings;\n  typeConfig?: Type;\n  onTypeChange?(config: Type): void;\n  onClose?(canceled: boolean): void;\n}\n\n/* export interface LocalizationProps {\n  nodeSettings?: NodeEditorSettings;\n  typeConfig?: Type;\n  onClose?(canceled: boolean): void;\n\n  issues: FlowIssue[];\n  updateLocalizations: UpdateLocalizations;\n  language: Asset;\n}*/\n\nexport class NodeEditor extends React.Component<NodeEditorProps> {\n  constructor(props: NodeEditorProps) {\n    super(props);\n\n    bindCallbacks(this, {\n      include: [/^close/, /^update/, /^handle/]\n    });\n  }\n\n  private updateLocalizations(language: string, changes: LocalizationUpdates) {\n    this.props.onUpdateLocalizations(language, changes);\n  }\n\n  public close(canceled: boolean): void {\n    // Make sure we re-wire the old connection\n    if (canceled) {\n      const dragPoint = getDraggedFrom(this.props.settings.originalNode);\n      if (dragPoint) {\n        const renderNode = this.props.nodes[dragPoint.nodeUUID];\n        for (const exit of renderNode.node.exits) {\n          if (exit.uuid === dragPoint.exitUUID) {\n            // TODO: should this just be taking literal uuids instead of objects?\n            this.props.plumberConnectExit(renderNode.node, exit);\n            break;\n          }\n        }\n      }\n    }\n\n    this.props.resetNodeEditingState();\n    this.props.updateUserAddingAction(false);\n  }\n\n  private updateAction(\n    action: Action,\n    onUpdated?: (dispatch: DispatchWithState, getState: GetState) => void\n  ): void {\n    this.props.onUpdateAction(action, onUpdated);\n  }\n\n  private updateRouter(renderNode: RenderNode): void {\n    this.props.onUpdateRouter(renderNode);\n  }\n\n  private handleAddAsset(assetType: string, asset: Asset): void {\n    this.props.addAsset(assetType, asset);\n  }\n\n  public render(): JSX.Element {\n    if (this.props.settings) {\n      const { typeConfig } = this.props;\n\n      // see if we should use the localization form\n      if (this.props.translating) {\n        const { localization: LocalizationForm } = typeConfig;\n\n        if (LocalizationForm) {\n          const localizationProps: LocalizationFormProps = {\n            updateLocalizations: this.updateLocalizations,\n            nodeSettings: this.props.settings,\n            onClose: this.close,\n            language: this.props.language,\n            helpArticles: this.props.helpArticles,\n            issues: this.props.issues.filter(\n              (issue: FlowIssue) => issue.language === this.props.language.id\n            )\n          };\n\n          return (\n            <Modal width=\"600px\" show={true}>\n              <LocalizationForm {...{ ...localizationProps }} />\n            </Modal>\n          );\n        }\n      }\n\n      const { form: Form } = typeConfig;\n\n      const formProps: FormProps = {\n        assetStore: this.props.assetStore,\n        completionSchema: this.props.completionSchema,\n        addAsset: this.handleAddAsset,\n        updateAction: this.updateAction,\n        updateRouter: this.updateRouter,\n        nodeSettings: this.props.settings,\n        helpArticles: this.props.helpArticles,\n        issues: this.props.issues.filter((issue: FlowIssue) => !issue.language),\n        typeConfig: this.props.typeConfig,\n        onTypeChange: this.props.handleTypeConfigChange,\n        onClose: this.close\n      };\n\n      return (\n        <Modal width=\"600px\" show={true}>\n          <Form {...{ ...formProps }} />\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: { definition, nodes, assetStore, issues },\n  editorState: { language, translating, completionSchema },\n  nodeEditor: { typeConfig, settings }\n}: AppState) => {\n  const filteredIssues = (issues[settings.originalNode.node.uuid] || []).filter(\n    (issue: FlowIssue) =>\n      !settings.originalAction || settings.originalAction.uuid === issue.action_uuid\n  );\n\n  return {\n    issues: filteredIssues,\n    language,\n    definition,\n    nodes,\n    translating,\n    typeConfig,\n    settings,\n    assetStore,\n    completionSchema\n  };\n};\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      addAsset,\n      resetNodeEditingState,\n      mergeEditorState,\n      handleTypeConfigChange,\n      onUpdateLocalizations,\n      onUpdateAction,\n      onUpdateRouter,\n      updateUserAddingAction\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NodeEditor);\n","import { EventProps } from 'components/simulator/LogEvent';\nimport { FlowDefinition } from 'flowTypes';\nimport { AssetStore, AssetType } from 'store/flowContext';\nimport { assetMapToList } from 'store/helpers';\nimport { createUUID } from 'utils';\n\nexport const DEFAULT_KEY = '__default__';\n\nconst SIMULATOR_CHANNEL = {\n  uuid: createUUID(),\n  name: 'Simulator',\n  address: '+12065550000',\n  schemes: ['tel'],\n  roles: ['send', 'receive']\n};\n\ninterface SimAsset {\n  type: AssetType;\n  url: string;\n  content: any;\n}\n\nexport const getTime = (): string => {\n  const now = new Date();\n  const mins = now.getMinutes();\n  let minStr = '' + mins;\n  if (mins < 10) {\n    minStr = '0' + mins;\n  }\n  return Math.abs(12 - now.getHours()) + ':' + minStr;\n};\n\nexport const getSimulationAssets = (assets: AssetStore, flow: FlowDefinition): any => {\n  const simAssets: SimAsset[] = [];\n\n  // our group set asset\n  simAssets.push({\n    type: AssetType.Group,\n    url: assets.groups.endpoint,\n    content: assetMapToList(assets.groups.items)\n  });\n\n  // our fields\n  simAssets.push({\n    type: AssetType.Field,\n    url: assets.fields.endpoint,\n    content: assetMapToList(assets.fields.items)\n  });\n\n  // our labels\n  simAssets.push({\n    type: AssetType.Label,\n    url: assets.labels.endpoint,\n    content: assetMapToList(assets.labels.items)\n  });\n\n  // our channels\n  simAssets.push({\n    type: AssetType.Channel,\n    url: assets.channels.endpoint,\n    content: [SIMULATOR_CHANNEL]\n  });\n\n  simAssets.push({\n    type: AssetType.Flow,\n    url: assets.flows.endpoint + `${flow.uuid}/`,\n    content: flow\n  });\n\n  const payload = {\n    assets: simAssets,\n    asset_server: {\n      type_urls: {\n        [AssetType.Flow]: assets.flows.endpoint,\n        [AssetType.Field]: assets.fields.endpoint,\n        [AssetType.Channel]: assets.channels.endpoint,\n        [AssetType.Group]: assets.groups.endpoint,\n        [AssetType.Label]: assets.labels.endpoint\n      }\n    }\n  };\n\n  return payload;\n};\n\nexport const isMessage = (event: EventProps): boolean => {\n  return !!['msg_created', 'msg_received', 'ivr_created'].find(type => type === event.type);\n};\n\nexport const isMT = (event: EventProps): boolean => {\n  return !!['msg_created', 'ivr_created'].find(type => type === event.type);\n};\n\nexport const hasPopulatedKey = (obj: any): boolean => {\n  if (obj) {\n    Object.keys(obj).forEach((key: string) => {\n      return true;\n    });\n  }\n  return false;\n};\n\nexport const pruneEmpty = (obj: any): any => {\n  if (typeof obj === 'object') {\n    Object.keys(obj).forEach((key: string) => {\n      if (\n        !obj[key] ||\n        (Object.keys(obj[key]).length === 1 && obj[key].hasOwnProperty(DEFAULT_KEY))\n      ) {\n        delete obj[key];\n      } else {\n        pruneEmpty(obj[key]);\n\n        // now see if we have any new leaves\n        if (obj[key] !== null && typeof obj[key] === 'object') {\n          if (Object.keys(obj[key]).length === 0) {\n            delete obj[key];\n          }\n        }\n      }\n    });\n  }\n\n  return obj;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as axios from 'axios';\nimport { getTime, isMessage, isMT } from 'components/simulator/helpers';\nimport LogEvent, { EventProps } from 'components/simulator/LogEvent';\nimport ContextExplorer from './ContextExplorer';\nimport styles from 'components/simulator/Simulator.module.scss';\nimport { ConfigProviderContext, fakePropType } from 'config/ConfigProvider';\nimport { getURL } from 'external';\nimport { FlowDefinition, Group, Wait } from 'flowTypes';\nimport update from 'immutability-helper';\nimport { ReactNode } from 'react';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Activity, RecentMessage } from 'store/editor';\nimport { AssetStore, RenderNodeMap, Asset } from 'store/flowContext';\nimport { getCurrentDefinition } from 'store/helpers';\nimport AppState from 'store/state';\nimport { DispatchWithState, MergeEditorState } from 'store/thunks';\nimport { createUUID } from 'utils';\nimport { PopTabType } from 'config/interfaces';\n\nconst MESSAGE_DELAY_MS = 200;\n\nconst MAP_THUMB = require('static/images/map.jpg');\nconst IMAGE_A = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_image_a.jpg';\nconst IMAGE_B = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_image_b.jpg';\nconst IMAGE_C = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_image_c.jpg';\nconst AUDIO_A = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_audio_a.mp3';\nconst VIDEO_A = 'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_video_a.mp4';\n\nconst VIDEO_A_THUMB =\n  'https://s3.amazonaws.com/floweditor-assets.temba.io/simulator/sim_video_a_thumb.jpg';\n\ninterface PostMessage {\n  text: string;\n  uuid: string;\n  urn: string;\n  attachments: string[];\n}\n\ninterface Message {\n  text: string;\n  inbound: boolean;\n}\n\nexport interface SimulatorStoreProps {\n  nodes: RenderNodeMap;\n  definition: FlowDefinition;\n  assetStore: AssetStore;\n\n  activity: Activity;\n\n  language: Asset;\n\n  // TODO: take away responsibility of simulator for resetting this\n  liveActivity: Activity;\n}\n\nexport interface SimulatorPassedProps {\n  mergeEditorState: MergeEditorState;\n  onToggled: (visible: boolean, tab: PopTabType) => void;\n  popped: string;\n}\n\nexport type SimulatorProps = SimulatorStoreProps & SimulatorPassedProps;\n\nenum DrawerType {\n  audio = 'audio',\n  images = 'images',\n  videos = 'videos',\n  location = 'location',\n  digit = 'digit',\n  digits = 'digits',\n  quickReplies = 'quickReplies'\n}\n\ninterface SimulatorState {\n  visible: boolean;\n  session?: Session;\n  context?: any;\n  contact: Contact;\n  channel: string;\n  events: EventProps[];\n  active: boolean;\n  time: string;\n\n  keypadEntry: string;\n\n  quickReplies?: string[];\n\n  // are we currently simulating a sprint\n  sprinting: boolean;\n\n  // is our drawer open\n  drawerOpen: boolean;\n\n  // what type of drawer are we looking at\n  drawerType?: DrawerType;\n\n  // how tall our drawer is\n  drawerHeight: number;\n\n  // is our attachment type selection open\n  attachmentOptionsVisible: boolean;\n\n  // if we can see our context explorer\n  contextExplorerVisible: boolean;\n\n  // are we at a wait hint, ie, a forced attachment\n  waitingForHint: boolean;\n}\n\ninterface Contact {\n  uuid: string;\n  urns: string[];\n  fields: {};\n  groups: Group[];\n}\n\ninterface Step {\n  arrived_on: Date;\n  uuid: string;\n  exit_uuid: string;\n  node_uuid: string;\n}\n\ninterface Run {\n  path: Step[];\n  flow_uuid: string;\n  status: string;\n  events?: EventProps[];\n  wait?: Wait;\n}\n\ninterface RunContext {\n  contact: Contact;\n  session: Session;\n  context?: any;\n  events: EventProps[];\n}\n\ninterface Session {\n  runs: Run[];\n  contact: Contact;\n  input?: any;\n  wait?: Wait;\n}\n\n/**\n * Our dev console for simulating or testing expressions\n */\nexport class Simulator extends React.Component<SimulatorProps, SimulatorState> {\n  private debug: Session[] = [];\n  private flows: FlowDefinition[] = [];\n  private currentFlow: string;\n  private inputBox: HTMLInputElement;\n\n  private drawerEle: HTMLDivElement;\n\n  // marks the bottom of our chat\n  private bottom: any;\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: SimulatorProps, context: ConfigProviderContext) {\n    super(props);\n    this.state = {\n      active: false,\n      visible: false,\n      events: [],\n      contact: {\n        uuid: createUUID(),\n        urns: ['tel:+12065551212'],\n        fields: {},\n        groups: []\n      },\n      keypadEntry: '',\n      drawerHeight: 0,\n      channel: createUUID(),\n      time: getTime(),\n      waitingForHint: false,\n      drawerOpen: false,\n      attachmentOptionsVisible: false,\n      contextExplorerVisible: false,\n      sprinting: false\n    };\n    this.bottomRef = this.bottomRef.bind(this);\n    this.inputBoxRef = this.inputBoxRef.bind(this);\n    this.currentFlow = this.props.definition.uuid;\n\n    bindCallbacks(this, {\n      include: [/^on/, /^get/, /^handle/]\n    });\n  }\n\n  private bottomRef(ref: any): void {\n    return (this.bottom = ref);\n  }\n\n  private inputBoxRef(ref: any): void {\n    this.inputBox = ref;\n  }\n\n  private updateActivity(recentMessages: { [key: string]: RecentMessage[] } = {}): void {\n    if (this.state.session) {\n      let lastExit: string = null;\n      const paths: { [key: string]: number } = {};\n      const active: { [nodeUUID: string]: number } = {};\n      let activeFlow: string;\n\n      for (const run of this.state.session.runs) {\n        let finalStep: Step = null;\n\n        for (const step of run.path) {\n          if (lastExit) {\n            const key = lastExit + ':' + step.node_uuid;\n            let pathCount = paths[key];\n            if (!pathCount) {\n              pathCount = 0;\n            }\n            paths[key] = ++pathCount;\n          }\n          lastExit = step.exit_uuid;\n          finalStep = step;\n        }\n\n        if (run.status === 'waiting' && finalStep) {\n          let count = active[finalStep.node_uuid];\n          if (!count) {\n            count = 0;\n          }\n          active[finalStep.node_uuid] = ++count;\n          activeFlow = run.flow_uuid;\n        }\n      }\n\n      // if we are resetting, clear our recent messages\n      const simulatedMessages = this.state.session.input\n        ? this.props.activity.recentMessages || {}\n        : {};\n\n      for (const key in recentMessages) {\n        let messages = simulatedMessages[key] || [];\n        messages = recentMessages[key].concat(messages);\n        simulatedMessages[key] = messages;\n      }\n\n      const activity: Activity = {\n        segments: paths,\n        nodes: active,\n        recentMessages: simulatedMessages\n      };\n\n      this.props.mergeEditorState({ activity });\n\n      if (activeFlow && activeFlow !== this.currentFlow) {\n        this.currentFlow = activeFlow;\n      }\n    }\n  }\n\n  private updateEvents(\n    events: EventProps[],\n    session: Session,\n    recentMessages: { [key: string]: RecentMessage[] },\n    callback: () => void\n  ): void {\n    if (events && events.length > 0) {\n      const toAdd = [];\n\n      let quickReplies: string[] = null;\n\n      let messageFound = false;\n      while (events.length > 0 && !messageFound) {\n        const event = events.shift();\n\n        if (isMessage(event)) {\n          messageFound = true;\n\n          // if it's a message add it to our recent messages\n          let fromUUID = '';\n          let toUUID = '';\n\n          // work backwards, since our events are recent\n          for (let i = session.runs.length - 1; i >= 0; i--) {\n            const path = session.runs[i].path;\n\n            // start at the penultimate node since we have nowhere to render recent messages for the last node\n            for (let j = path.length - 2; j >= 0; j--) {\n              if (path[j].uuid === event.step_uuid) {\n                fromUUID = path[j].exit_uuid;\n                toUUID = path[j + 1].node_uuid;\n                break;\n              }\n            }\n\n            if (fromUUID && toUUID) {\n              const key = `${fromUUID}:${toUUID}`;\n              const msg: RecentMessage = {\n                sent: event.created_on,\n                text: event.msg.text\n              };\n\n              if (key in recentMessages) {\n                recentMessages[key].unshift(msg);\n              } else {\n                recentMessages[key] = [msg];\n              }\n            }\n          }\n\n          if (isMT(event)) {\n            // save off any quick replies we might have\n            if (event.msg.quick_replies) {\n              quickReplies = event.msg.quick_replies;\n            }\n          }\n        }\n\n        toAdd.push(event);\n      }\n\n      const newEvents = update(this.state.events, {\n        $push: toAdd\n      }) as EventProps[];\n      const newState: Partial<SimulatorState> = { events: newEvents };\n\n      if (quickReplies !== null) {\n        newState.quickReplies = quickReplies;\n      }\n\n      this.scrollToBottom();\n\n      this.setState(newState as SimulatorState, () => {\n        if (events.length === 0) {\n          callback();\n        } else {\n          window.setTimeout(() => {\n            this.updateEvents(events, session, recentMessages, callback);\n          }, MESSAGE_DELAY_MS);\n        }\n      });\n    } else {\n      callback();\n    }\n  }\n\n  private updateRunContext(runContext: RunContext, msg?: PostMessage): void {\n    const wasJustActive = this.state.active || (runContext.events && runContext.events.length > 0);\n    this.setState({ quickReplies: [] }, () => {\n      if (!runContext.events || (runContext.events.length === 0 && msg)) {\n        const runs = runContext.session.runs;\n        const run = runs[runs.length - 1];\n        const step = run.path[run.path.length - 1];\n\n        runContext.events = [\n          {\n            msg: {\n              uuid: createUUID(),\n              urn: this.state.contact.urns[0],\n              text: msg.text,\n              attachments: msg.attachments\n            },\n            type: 'msg_created',\n            created_on: new Date().toISOString(),\n            step_uuid: step.uuid\n          }\n        ];\n      }\n\n      const newlyRecentMessages = {};\n\n      this.updateEvents(runContext.events, runContext.session, newlyRecentMessages, () => {\n        let active = false;\n        for (const run of runContext.session.runs) {\n          if (run.status === 'waiting') {\n            active = true;\n            break;\n          }\n        }\n\n        let newEvents = this.state.events;\n        if (!active && wasJustActive) {\n          newEvents = update(this.state.events, {\n            $push: [\n              {\n                type: 'info',\n                text: 'Exited flow',\n                created_on: new Date()\n              } as any\n            ]\n          }) as EventProps[];\n        }\n\n        const waitingForHint =\n          runContext.session &&\n          runContext.session.wait &&\n          runContext.session.wait.hint !== undefined;\n\n        let drawerType = null;\n        if (waitingForHint) {\n          switch (runContext.session.wait.hint.type) {\n            case 'audio':\n              drawerType = DrawerType.audio;\n              break;\n            case 'video':\n              drawerType = DrawerType.videos;\n              break;\n            case 'image':\n              drawerType = DrawerType.images;\n              break;\n            case 'location':\n              drawerType = DrawerType.location;\n              break;\n            case 'digits':\n              drawerType = DrawerType.digit;\n              if (runContext.session.wait.hint.count !== 1) {\n                drawerType = DrawerType.digits;\n              }\n              break;\n            default:\n              console.log('Unknown hint', runContext.session.wait.hint.type);\n          }\n        }\n\n        let drawerOpen = waitingForHint;\n\n        // if we have quick replies, open our drawe with attachment options\n        if (!drawerType && this.hasQuickReplies()) {\n          drawerType = DrawerType.quickReplies;\n          drawerOpen = true;\n        }\n\n        this.setState(\n          {\n            active,\n            context: runContext.context,\n            sprinting: false,\n            session: runContext.session,\n            events: newEvents,\n            drawerOpen,\n            drawerType,\n            waitingForHint\n          },\n          () => {\n            this.updateActivity(newlyRecentMessages);\n            this.handleFocusUpdate();\n          }\n        );\n      });\n    });\n  }\n\n  private startFlow(): void {\n    const now = new Date().toISOString();\n    const contact: any = {\n      uuid: createUUID(),\n      urns: ['tel:+12065551212'],\n      fields: {},\n      groups: [],\n      created_on: now\n    };\n\n    // use the current displayed language when simulating\n    if (this.props.language) {\n      contact.language = this.props.language.id;\n    }\n\n    // reset our events and contact\n    this.setState(\n      {\n        sprinting: true,\n        drawerOpen: false,\n        attachmentOptionsVisible: false,\n        events: []\n      },\n      () => {\n        const body: any = {\n          contact: this.state.contact,\n          flow: getCurrentDefinition(this.props.definition, this.props.nodes, false),\n          trigger: {\n            type: 'manual',\n            environment: {\n              date_format: 'DD-MM-YYYY',\n              time_format: 'hh:mm',\n              timezone: 'America/New_York',\n              languages: []\n            },\n            contact,\n            flow: {\n              uuid: this.props.definition.uuid,\n              name: this.props.definition.name\n            },\n            params: {},\n            triggered_on: now\n          }\n        };\n\n        axios.default\n          .post(getURL(this.context.config.endpoints.simulateStart), JSON.stringify(body, null, 2))\n          .then((response: axios.AxiosResponse) => {\n            this.updateRunContext(response.data as RunContext);\n          });\n      }\n    );\n  }\n\n  private resume(text: string, attachment?: string): void {\n    if (!text && !attachment) {\n      return;\n    }\n\n    if (text === '\\\\debug') {\n      console.log(JSON.stringify(this.debug, null, 2));\n      return;\n    }\n\n    if (text === '\\\\recalc') {\n      console.log('recal..');\n      // this.props.plumberRepaint();\n      return;\n    }\n\n    this.setState({ sprinting: true, attachmentOptionsVisible: false, drawerOpen: false }, () => {\n      const now = new Date().toISOString();\n\n      const msg: PostMessage = {\n        text,\n        uuid: createUUID(),\n        urn: this.state.session.contact.urns[0],\n        attachments: attachment ? [attachment] : []\n      };\n\n      const body: any = {\n        flow: getCurrentDefinition(this.props.definition, this.props.nodes, false),\n        session: this.state.session,\n        resume: {\n          type: 'msg',\n          msg,\n          resumed_on: now,\n          contact: this.state.session.contact\n        }\n      };\n\n      axios.default\n        .post(getURL(this.context.config.endpoints.simulateResume), JSON.stringify(body, null, 2))\n        .then((response: axios.AxiosResponse) => {\n          this.updateRunContext(response.data as RunContext, msg);\n        })\n        .catch(error => {\n          if (error.response.status) {\n          }\n          const events = update(this.state.events, {\n            $push: [\n              {\n                type: 'error',\n                text:\n                  error.response.status > 499\n                    ? 'Server error, try again later'\n                    : error.response.data.error\n              } as any\n            ]\n          }) as EventProps[];\n          this.setState({ events });\n        });\n    });\n  }\n\n  private onReset(event: any): void {\n    this.startFlow();\n  }\n\n  private scrollToBottom(delay?: number): void {\n    const wait = delay || 0;\n    if (this.bottom) {\n      window.setTimeout(() => {\n        if (this.bottom) {\n          this.bottom.scrollIntoView(false);\n        }\n      }, wait);\n    }\n  }\n\n  public componentDidUpdate(prevProps: SimulatorProps, prevState: SimulatorState): void {\n    if (this.drawerEle !== null) {\n      if (\n        prevState.drawerHeight !== this.drawerEle.clientHeight ||\n        prevState.drawerOpen !== this.state.drawerOpen\n      ) {\n        this.setState({ drawerHeight: this.drawerEle.clientHeight }, () => {\n          this.scrollToBottom(800);\n        });\n      }\n    }\n  }\n\n  private onKeyUp(event: any): void {\n    if (event.key === 'Enter') {\n      const ele = event.target;\n      const text = ele.value;\n      ele.value = '';\n      this.resume(text);\n    }\n  }\n\n  private onToggle(event: any): void {\n    const newVisible = !this.state.visible;\n\n    this.props.onToggled(newVisible, PopTabType.SIMULATOR);\n\n    this.props.mergeEditorState({ simulating: newVisible });\n\n    this.setState({ visible: newVisible, contextExplorerVisible: false }, () => {\n      // clear our viewing definition\n      if (!this.state.visible) {\n        window.setTimeout(() => {\n          this.props.mergeEditorState({ activity: this.props.liveActivity });\n        }, 500);\n      } else {\n        this.updateActivity();\n\n        // start our flow if we haven't already\n        if (this.state.events.length === 0) {\n          this.startFlow();\n        }\n\n        this.handleFocusUpdate();\n      }\n    });\n  }\n\n  private handleFocusUpdate(): void {\n    if (this.inputBox) {\n      this.inputBox.focus();\n    }\n  }\n\n  private sendAttachment(attachment: string): void {\n    this.setState({ drawerOpen: false, attachmentOptionsVisible: false }, () => {\n      window.setTimeout(() => {\n        this.resume(null, attachment);\n      }, 200);\n    });\n  }\n\n  private getImageDrawer(): JSX.Element {\n    return (\n      <div className={styles.drawer_items}>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('image/jpeg:' + IMAGE_A);\n          }}\n        >\n          <img src={IMAGE_A} alt=\"Attachment\" />\n        </div>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('image/jpeg:' + IMAGE_B);\n          }}\n        >\n          <img src={IMAGE_B} alt=\"Attachment\" />\n        </div>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('image/jpeg:' + IMAGE_C);\n          }}\n        >\n          <img src={IMAGE_C} alt=\"Attachment\" />\n        </div>\n      </div>\n    );\n  }\n\n  public getLocationDrawer(): JSX.Element {\n    return (\n      <div\n        className={styles.map_thumb}\n        onClick={() => {\n          this.sendAttachment('geo:2.904194,-79.003418');\n        }}\n      >\n        <img src={MAP_THUMB} alt=\"Attachment\" />\n      </div>\n    );\n  }\n\n  private getAudioDrawer(): JSX.Element {\n    return (\n      <div\n        className={styles.audio_picker}\n        onClick={() => {\n          this.sendAttachment('audio/mp3:' + AUDIO_A);\n        }}\n      >\n        <div className={styles.audio_icon + ' fe-mic'} />\n        <div className={styles.audio_message}>Upload Audio</div>\n      </div>\n    );\n  }\n\n  private getVideoDrawer(): JSX.Element {\n    return (\n      <div className={styles.drawer_items}>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('video/mp4:' + VIDEO_A);\n          }}\n        >\n          <img src={VIDEO_A_THUMB} alt=\"Attachment\" />\n        </div>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('video/mp4:' + VIDEO_A);\n          }}\n        >\n          <img src={VIDEO_A_THUMB} alt=\"Attachment\" />\n        </div>\n        <div\n          className={styles.drawer_item}\n          onClick={() => {\n            this.sendAttachment('video/mp4:' + VIDEO_A);\n          }}\n        >\n          <img src={VIDEO_A_THUMB} alt=\"Attachment\" />\n        </div>\n      </div>\n    );\n  }\n\n  private getQuickRepliesDrawer(): JSX.Element {\n    return (\n      <div className={styles.quick_replies}>\n        {this.state.quickReplies.map(reply => (\n          <div\n            className={styles.quick_reply}\n            onClick={() => {\n              this.resume(reply);\n            }}\n            key={`reply_${reply}`}\n          >\n            {reply}\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  private handleKeyPress(btn: string, multiple: boolean): void {\n    if (!multiple) {\n      this.resume(btn);\n    } else {\n      if (btn === '#') {\n        this.resume(this.state.keypadEntry);\n        this.setState({ keypadEntry: '' });\n      } else {\n        this.setState((prevState: SimulatorState) => {\n          return { keypadEntry: prevState.keypadEntry += btn };\n        });\n      }\n    }\n  }\n\n  private getKeyRow(keys: string[], multiple: boolean): JSX.Element {\n    return (\n      <div className={styles.row}>\n        {keys.map((key: string) => {\n          return (\n            <div\n              key={'btn_' + key}\n              onClick={() => {\n                this.handleKeyPress(key, multiple);\n              }}\n              className={styles.key}\n            >\n              {key}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  private getKeypadDrawer(multiple: boolean): JSX.Element {\n    return (\n      <div className={styles.keypad}>\n        {multiple ? <div className={styles.keypad_entry}>{this.state.keypadEntry}</div> : null}\n        <div className={styles.keys}>\n          {this.getKeyRow(['1', '2', '3'], multiple)}\n          {this.getKeyRow(['4', '5', '6'], multiple)}\n          {this.getKeyRow(['7', '8', '9'], multiple)}\n          {this.getKeyRow(['*', '0', '#'], multiple)}\n        </div>\n      </div>\n    );\n  }\n\n  private getDrawerContents(): JSX.Element {\n    switch (this.state.drawerType) {\n      case DrawerType.location:\n        return this.getLocationDrawer();\n      case DrawerType.audio:\n        return this.getAudioDrawer();\n      case DrawerType.images:\n        return this.getImageDrawer();\n      case DrawerType.videos:\n        return this.getVideoDrawer();\n      case DrawerType.quickReplies:\n        return this.getQuickRepliesDrawer();\n      case DrawerType.digits:\n      case DrawerType.digit:\n        return this.getKeypadDrawer(this.state.drawerType === DrawerType.digits);\n    }\n    return null;\n  }\n\n  private handleDrawerRef(ref: HTMLDivElement): HTMLDivElement {\n    return (this.drawerEle = ref);\n  }\n\n  public getDrawer(): JSX.Element {\n    const style: any = {};\n\n    if (this.state.drawerOpen) {\n      style.bottom = 50;\n\n      // are we being forced open\n      if (this.state.waitingForHint) {\n        style.bottom = 25;\n        style.zIndex = 150;\n        style.paddingBottom = 10;\n      }\n    } else {\n      style.bottom = -this.state.drawerHeight;\n    }\n\n    return (\n      <div\n        ref={this.handleDrawerRef}\n        style={style}\n        className={\n          styles.drawer +\n          ' ' +\n          (this.state.drawerOpen ? styles.drawer_visible : '') +\n          ' ' +\n          (this.state.attachmentOptionsVisible ? '' : styles.forced)\n        }\n      >\n        {this.getDrawerContents()}\n      </div>\n    );\n  }\n\n  private hasQuickReplies(): boolean {\n    return (this.state.quickReplies || []).length > 0;\n  }\n\n  private handleHideAttachments(): void {\n    this.setState(\n      {\n        attachmentOptionsVisible: false,\n        drawerOpen: false\n      },\n      () => {\n        if (this.hasQuickReplies()) {\n          window.setTimeout(() => {\n            this.showAttachmentDrawer(DrawerType.quickReplies);\n          }, 300);\n        }\n      }\n    );\n  }\n\n  private getAttachmentButton(icon: string, drawerType: DrawerType): JSX.Element {\n    return (\n      <div\n        className={icon}\n        onClick={() => {\n          this.showAttachmentDrawer(drawerType);\n        }}\n      />\n    );\n  }\n\n  private getAttachmentOptions(): JSX.Element {\n    return (\n      <div\n        className={\n          styles.attachment_buttons +\n          ' ' +\n          (this.state.attachmentOptionsVisible ? styles.visible : '')\n        }\n      >\n        <div className=\"fe-x\" onClick={this.handleHideAttachments} />\n        {this.getAttachmentButton('fe-picture2', DrawerType.images)}\n        {this.getAttachmentButton('fe-video', DrawerType.videos)}\n        {this.getAttachmentButton('fe-mic', DrawerType.audio)}\n        {this.getAttachmentButton('fe-map-marker', DrawerType.location)}\n      </div>\n    );\n  }\n\n  private handleContextExplorerClose(): void {\n    this.setState({ contextExplorerVisible: false });\n  }\n\n  private getContextExplorer(): JSX.Element {\n    return (\n      <ContextExplorer\n        visible={this.state.contextExplorerVisible}\n        onClose={this.handleContextExplorerClose}\n        contents={this.state.context}\n      />\n    );\n  }\n\n  private handleHideAttachmentDrawer(): void {\n    this.setState({ drawerOpen: false });\n  }\n\n  private showAttachmentDrawer(drawerType: DrawerType): void {\n    // if we are already open but a different type, hide ourselves and reopen with the new type\n    if (this.state.drawerOpen) {\n      // if that type is already open, its a noop\n      if (drawerType === this.state.drawerType) {\n        return;\n      }\n\n      this.handleHideAttachmentDrawer();\n      window.setTimeout(() => {\n        this.showAttachmentDrawer(drawerType);\n      }, 300);\n    } else {\n      this.setState((prevState: SimulatorState) => {\n        return { drawerOpen: true, drawerType };\n      });\n    }\n  }\n\n  public render(): ReactNode {\n    const messages: JSX.Element[] = [];\n    for (const event of this.state.events) {\n      messages.push(<LogEvent {...event} key={event.type + '_' + String(event.created_on)} />);\n    }\n\n    const hidden = this.props.popped && this.props.popped !== PopTabType.SIMULATOR;\n    const simHidden = hidden || !this.state.visible ? styles.sim_hidden : '';\n    const tabHidden = hidden || this.state.visible ? styles.tab_hidden : '';\n\n    const messagesStyle: any = {\n      height: 366 - (this.state.drawerOpen ? this.state.drawerHeight - 20 : 0)\n    };\n\n    // if attachments are forced open, account for missing attachment choice panel\n    if (this.state.drawerOpen && this.state.waitingForHint) {\n      messagesStyle.height += 25;\n    }\n\n    return (\n      <div id=\"sim_container\" className={styles.sim_container}>\n        <div>\n          <div id=\"simulator\" className={styles.simulator + ' ' + simHidden} key={'sim'}>\n            {this.getContextExplorer()}\n\n            <div className={styles.screen}>\n              <div className={styles.header}>\n                <div className={styles.close + ' fe-x'} onClick={this.onToggle} />\n              </div>\n              <div className={styles.messages} style={messagesStyle}>\n                {messages}\n                <div\n                  id=\"bottom\"\n                  style={{ float: 'left', clear: 'both', marginTop: 20 }}\n                  ref={this.bottomRef}\n                />\n              </div>\n              <div className={styles.controls}>\n                <input\n                  ref={this.inputBoxRef}\n                  type=\"text\"\n                  onKeyUp={this.onKeyUp}\n                  disabled={this.state.sprinting}\n                  placeholder={this.state.active ? 'Enter message' : 'Press home to start again'}\n                />\n                <div className={styles.show_attachments_button}>\n                  <div\n                    className=\"fe-paperclip\"\n                    onClick={() => {\n                      this.setState({\n                        attachmentOptionsVisible: true,\n                        drawerOpen: false\n                      });\n                    }}\n                  />\n                </div>\n              </div>\n              {this.getAttachmentOptions()}\n              {this.getDrawer()}\n              <div className={styles.footer}>\n                {!this.state.contextExplorerVisible ? (\n                  <div className={styles.show_context_button}>\n                    <div\n                      className=\"context-button\"\n                      onClick={() => {\n                        this.setState({\n                          contextExplorerVisible: true\n                        });\n                      }}\n                    >\n                      <span className=\"fe-at-sign\"></span>\n                    </div>\n                  </div>\n                ) : (\n                  <div className={styles.show_context_button}>\n                    <div\n                      className=\"context-button\"\n                      onClick={() => {\n                        this.setState({\n                          contextExplorerVisible: false\n                        });\n                      }}\n                    >\n                      <span className=\"fe-x\"></span>\n                    </div>\n                  </div>\n                )}\n\n                <span\n                  className={\n                    styles.reset + ' ' + (this.state.active ? styles.active : styles.inactive)\n                  }\n                  onClick={this.onReset}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={styles.simulator_tab + ' ' + tabHidden} onClick={this.onToggle}>\n          <div className={styles.simulator_tab_icon + ' fe-smartphone'} />\n          <div className={styles.simulator_tab_text}>\n            Run in\n            <br />\n            Simulator\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: { definition, nodes, assetStore },\n  editorState: { liveActivity, activity, language }\n}: AppState) => ({\n  liveActivity,\n  activity,\n  assetStore,\n  definition,\n  nodes,\n  language\n});\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) => bindActionCreators({}, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Simulator);\n","import * as React from 'react';\nimport styles from './ContextExplorer.module.scss';\nimport { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport { copyToClipboard } from 'utils';\nimport i18n from 'config/i18n';\nimport { Trans } from 'react-i18next';\nimport { DEFAULT_KEY, pruneEmpty } from './helpers';\n\nconst cx: any = classNames.bind(styles);\n\nconst EXCLUDED_PATHS: { [path: string]: boolean } = {\n  'parent.run': true,\n  'child.run': true,\n  legacy_extra: true\n};\n\ntype PathStep = number | string;\n\nexport interface ContextExplorerProps {\n  visible: boolean;\n  onClose: () => void;\n  contents: any;\n}\n\ninterface ContextExplorerState {\n  opened: {};\n  expression: string;\n  messageVisible: boolean;\n  message: string;\n  showEmpty: boolean;\n}\n\nexport default class ContextExplorer extends React.Component<\n  ContextExplorerProps,\n  ContextExplorerState\n> {\n  constructor(props: ContextExplorerProps) {\n    super(props);\n    this.state = {\n      opened: {},\n      expression: null,\n      messageVisible: false,\n      showEmpty: false,\n      message: null\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  private handleHide(): void {\n    this.props.onClose();\n  }\n\n  private isOpen(path: PathStep[]): boolean {\n    let openState: any = this.state.opened;\n    for (const step of path) {\n      openState = openState[step];\n      if (!openState) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private handleCopyPath(key: PathStep, prevPath: PathStep[]) {\n    const path: PathStep[] = [...prevPath, key];\n    const expression = '@' + path.join('.');\n    copyToClipboard(expression);\n    this.setState({ expression, messageVisible: true, message: null }, () => {\n      window.setTimeout(() => {\n        if (this.state.expression === expression) {\n          this.setState({ messageVisible: false });\n        }\n      }, 1500);\n    });\n  }\n\n  private handleToggleHide(): void {\n    const message = this.state.showEmpty\n      ? i18n.t('context_explorer.hide_empty', 'Showing keys with values')\n      : i18n.t('context_explorer.show_empty', 'Showing all keys');\n    this.setState(\n      { showEmpty: !this.state.showEmpty, message, expression: null, messageVisible: true },\n      () => {\n        window.setTimeout(() => {\n          if (this.state.message === message) {\n            this.setState({ messageVisible: false });\n          }\n        }, 1000);\n      }\n    );\n  }\n\n  private handlePathClick(key: PathStep, prevPath: PathStep[]) {\n    const opened = { ...this.state.opened };\n    const path: PathStep[] = [...prevPath, key];\n\n    let openPath: any = opened;\n    while (path.length > 0) {\n      const next = path.shift();\n\n      let closing = false;\n      // if it's the last one, check if toggling\n      if (path.length === 0) {\n        if (openPath[next]) {\n          closing = true;\n        }\n      }\n\n      if (closing) {\n        delete openPath[next];\n      } else {\n        const existing = openPath[next] || {};\n        // make sure it exists\n        openPath[next] = existing;\n      }\n\n      // dive down\n      openPath = openPath[next];\n    }\n\n    this.setState({ opened });\n  }\n\n  private renderContextNode(name: string, value: any, path: PathStep[]): JSX.Element {\n    if (!name) {\n      return null;\n    }\n\n    const newPath = [...path, name];\n    if (EXCLUDED_PATHS[newPath.join('.')]) {\n      return null;\n    }\n\n    const valueType = typeof value;\n    let text = valueType !== 'object' ? value : '';\n    let hasChildren = value && valueType === 'object' && Object.keys(value).length > 0;\n\n    if (value && value.hasOwnProperty(DEFAULT_KEY)) {\n      text = value[DEFAULT_KEY];\n      if (Object.keys(value).length === 1) {\n        hasChildren = false;\n      }\n    }\n\n    const isOpen = this.isOpen(newPath);\n\n    const arrowStyles = cx({\n      [styles.arrow_right]: true,\n      [styles.has_children]: hasChildren,\n      [styles.open]: isOpen\n    });\n    const keyStyles = cx({ [styles.key]: true, [styles.has_children]: hasChildren });\n    const keySummary = Array.isArray(value) ? `[${value.length}]` : null;\n\n    const onClick = (evt: React.MouseEvent<HTMLDivElement>) => {\n      if (evt.shiftKey) {\n        this.handleCopyPath(name, path);\n      } else {\n        if (hasChildren) {\n          this.handlePathClick(name, path);\n        }\n      }\n    };\n\n    return (\n      <div key={name + path.length}>\n        <div\n          className={styles.row}\n          style={{ marginLeft: path.length * 10 + 'px' }}\n          onClick={onClick}\n        >\n          <div className={arrowStyles}>›</div>\n          <div className={keyStyles}>\n            {name}\n            <div className={styles.key_summary}>{keySummary}</div>\n            <div\n              className={styles.clipboard + ' fe-clipboard-empty'}\n              onClick={(evt: React.MouseEvent<HTMLDivElement>) => {\n                evt.stopPropagation();\n                this.handleCopyPath(name, path);\n              }}\n            ></div>\n          </div>\n          <div className={styles.str_value}>{text}</div>\n        </div>\n        {isOpen ? this.renderProperties(value, newPath) : null}\n      </div>\n    );\n  }\n\n  private renderProperties(value: any, path: PathStep[] = []): JSX.Element {\n    if (!value) {\n      return null;\n    }\n\n    return (\n      <>\n        {Object.keys(value).map((key: string) => {\n          // don't show default key as a property\n          if (key !== DEFAULT_KEY) {\n            return this.renderContextNode(key, value[key], path);\n          }\n          return null;\n        })}\n      </>\n    );\n  }\n\n  public render(): JSX.Element {\n    let context = this.props.contents;\n    if (this.props.contents && !this.state.showEmpty) {\n      context = pruneEmpty(JSON.parse(JSON.stringify(this.props.contents)));\n    }\n\n    let message = null;\n    if (this.state.message || this.state.expression) {\n      if (this.state.message) {\n        message = this.state.message;\n      } else if (this.state.expression) {\n        message = (\n          <Trans\n            i18nKey=\"context_explorer.copied_expression\"\n            values={{ expression: this.state.expression }}\n          >\n            Copied <span className={styles.expression}>[[expression]]</span> to clipboard\n          </Trans>\n        );\n      }\n    }\n\n    const messageStyle = cx({\n      [styles.message]: true,\n      [styles.visible]: this.state.messageVisible\n    });\n\n    return (\n      <div className={styles.context_explorer + ' ' + (this.props.visible ? styles.visible : '')}>\n        <div className={messageStyle}>{message}</div>\n        <div className={styles.panel}>{this.renderProperties(context)}</div>\n        <div className={styles.footer}>\n          <div\n            className={styles.empty_toggle}\n            onClick={() => {\n              this.handleToggleHide();\n            }}\n          >\n            <div className={this.state.showEmpty ? 'fe-eye' : 'fe-eye-crossed'}></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport { FlowDefinition, StickyNote } from 'flowTypes';\nimport * as React from 'react';\nimport TextareaAutosize from 'react-autosize-textarea/lib';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { DragEvent } from 'services/Plumber';\nimport AppState from 'store/state';\nimport { DispatchWithState, UpdateSticky, updateSticky } from 'store/thunks';\nimport { CONFIRMATION_TIME, QUIET_NOTE, snapToGrid } from 'utils';\n\nimport styles from './Sticky.module.scss';\nimport i18n from 'config/i18n';\n\ntype DragFunction = (event: DragEvent) => void;\nexport const STICKY_SPEC_ID: string = 'sticky-container';\nexport const STICKY_TITLE = i18n.t('sticky.title', 'New Note');\nexport const STICKY_BODY = i18n.t('sticky.body', '...');\n\nexport interface StickyPassedProps {\n  uuid: string;\n  sticky: StickyNote;\n  selected: boolean;\n}\n\nexport interface StickyStoreProps {\n  definition: FlowDefinition;\n  updateSticky: UpdateSticky;\n}\n\nexport type StickyProps = StickyPassedProps & StickyStoreProps;\n\n/**\n * We have internal state to track as the user types so\n * we can debounce updates to the store.\n */\ninterface StickyState {\n  title: string;\n  body: string;\n  color: string;\n  showConfirmation: boolean;\n}\n\nconst COLOR_OPTIONS: any = {\n  yellow: styles.yellow,\n  blue: styles.blue,\n  green: styles.green,\n  purple: styles.purple,\n  gray: styles.gray\n};\n\nexport class Sticky extends React.Component<StickyProps, StickyState> {\n  private dragging = false;\n  private ele: HTMLDivElement;\n  private debounceTextChanges: number;\n  private showConfirmation: number;\n\n  public DEFUALT_TITLE = 'New Note';\n  public DEFUALT_BODY = '...';\n\n  constructor(props: StickyProps & StickyStoreProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^on/, /^get/, /^is/, /^handle/]\n    });\n\n    this.state = {\n      title: this.props.sticky.title,\n      body: this.props.sticky.body,\n      color: this.props.sticky.color,\n      showConfirmation: false\n    };\n  }\n\n  private isSelected(): boolean {\n    return this.props.selected;\n  }\n\n  private onRef(ref: HTMLDivElement): HTMLDivElement {\n    return (this.ele = ref);\n  }\n\n  public componentWillUnmount(): void {\n    if (this.showConfirmation) {\n      window.clearTimeout(this.showConfirmation);\n    }\n\n    if (this.debounceTextChanges) {\n      window.clearTimeout(this.debounceTextChanges);\n    }\n  }\n\n  public handleDrag(event: DragEvent): void {\n    // noop\n  }\n\n  public handleDragStop(event: DragEvent): void {\n    // snap us to the same grid\n    const { left, top } = snapToGrid(event.finalPos[0], event.finalPos[1]);\n    this.ele.style.left = `${left}px`;\n    this.ele.style.top = `${top}px`;\n\n    this.props.sticky.position = { left, top };\n    this.props.updateSticky(this.props.uuid, this.props.sticky);\n  }\n\n  private onUpdateText(): void {\n    if (this.debounceTextChanges) {\n      window.clearTimeout(this.debounceTextChanges);\n    }\n\n    this.debounceTextChanges = window.setTimeout(() => {\n      const updated = { ...this.props.sticky };\n      updated.title = this.state.title;\n      updated.body = this.state.body;\n      this.props.updateSticky(this.props.uuid, updated);\n      this.debounceTextChanges = null;\n    }, QUIET_NOTE);\n  }\n\n  private handleChangeTitle(event: React.FormEvent<HTMLTextAreaElement>): void {\n    this.setState({ title: event.currentTarget.value });\n    this.onUpdateText();\n  }\n\n  private handleChangeBody(event: React.FormEvent<HTMLTextAreaElement>): void {\n    this.setState({ body: event.currentTarget.value });\n    this.onUpdateText();\n  }\n\n  public handleClickRemove(event: React.MouseEvent<HTMLDivElement>): void {\n    if (this.state.showConfirmation) {\n      this.props.updateSticky(this.props.uuid, null);\n    } else {\n      this.setState({ showConfirmation: true });\n      this.showConfirmation = window.setTimeout(() => {\n        this.setState({ showConfirmation: false });\n      }, CONFIRMATION_TIME);\n    }\n  }\n\n  private handleChangeColor(color: string): void {\n    this.props.sticky.color = color;\n    this.props.updateSticky(this.props.uuid, this.props.sticky);\n    this.setState({ color });\n  }\n\n  private handleSelectForValue(element: HTMLTextAreaElement, text: string): void {\n    if (element.value === text) {\n      window.setTimeout(() => {\n        element.select();\n      }, 0);\n    }\n  }\n\n  private handleTitleFocused(e: React.FocusEvent<HTMLTextAreaElement>): void {\n    this.handleSelectForValue(e.currentTarget, STICKY_TITLE);\n  }\n\n  private handleBodyFocused(e: React.FocusEvent<HTMLTextAreaElement>): void {\n    this.handleSelectForValue(e.currentTarget, STICKY_BODY);\n  }\n\n  private getColorChooser(): JSX.Element {\n    return (\n      <div className={styles.color_chooser_container}>\n        <div className={styles.color_chooser}>\n          {Object.keys(COLOR_OPTIONS).map((color: string) => {\n            return (\n              <div\n                key={this.props.uuid + color}\n                onClick={() => {\n                  this.handleChangeColor(color);\n                }}\n                className={styles.color_option + ' ' + COLOR_OPTIONS[color]}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    // add our removal class if necessary\n    const titleClasses = [styles.title_wrapper];\n    if (this.state.showConfirmation) {\n      titleClasses.push(styles.removal);\n    }\n\n    const containerClasses = [styles.sticky_container];\n    if (!this.props.sticky.color) {\n      this.props.sticky.color = 'yellow';\n    }\n\n    const stickyClasses = [styles.sticky];\n    if (this.isSelected()) {\n      stickyClasses.push(styles.selected);\n    }\n\n    containerClasses.push(COLOR_OPTIONS[this.props.sticky.color]);\n    const colorChooser = this.getColorChooser();\n\n    return (\n      <div\n        key={this.props.uuid}\n        className={containerClasses.join(' ')}\n        data-spec={STICKY_SPEC_ID}\n        ref={this.onRef}\n        id={this.props.uuid}\n      >\n        <div className={stickyClasses.join(' ')}>\n          <div className={titleClasses.join(' ')}>\n            <div className={styles.remove_button} onClick={this.handleClickRemove}>\n              <span className=\"fe-x\" />\n            </div>\n            <div className={styles.confirmation}>Remove?</div>\n            <TextareaAutosize\n              className={styles.title}\n              value={this.state.title}\n              onChange={this.handleChangeTitle}\n              onFocusCapture={this.handleTitleFocused}\n            />\n          </div>\n          <div className={styles.body_wrapper}>\n            <TextareaAutosize\n              className={styles.body}\n              value={this.state.body}\n              onChange={this.handleChangeBody}\n              onFocusCapture={this.handleBodyFocused}\n            />\n            {colorChooser}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({ flowContext: { definition } }: AppState) => ({\n  definition\n});\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) => {\n  return bindActionCreators({ updateSticky }, dispatch);\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { forwardRef: false }\n)(Sticky);\n","import { Exit, FlowNode } from 'flowTypes';\nimport { GRID_SIZE, timeStart, timeEnd, debounce } from 'utils';\n\n// TODO: Remove use of Function\n// tslint:disable:ban-types\nconst {\n  jsPlumb: { importDefaults }\n} = require('../../node_modules/jsplumb/dist/js/jsplumb');\nexport interface DragEvent {\n  el: Element;\n  pos: number[];\n  finalPos: number[];\n  e: MouseEvent;\n  clientX: number;\n  clientY: number;\n  target: Element;\n}\n\nexport interface PendingConnections {\n  [id: string]: {\n    source: string;\n    target: string;\n    className: string;\n    slot: number;\n    totalSlots: number;\n    onConnected: (activityId: string, recentMessagesId: string) => void;\n  };\n}\n\nexport const REPAINT_DURATION = 600;\n\nconst connectorOverlays = [\n  [\n    'Label',\n    {\n      label: '',\n      location: 12,\n      id: 'activity'\n    }\n  ],\n  [\n    'Label',\n    {\n      label: '',\n      location: 20,\n      id: 'recent_messages'\n    }\n  ]\n];\n\nexport const TARGET_DEFAULTS = {\n  anchor: ['Continuous', { shape: 'Rectangle', faces: ['top', 'left', 'right'] }],\n  endpoint: [\n    'Rectangle',\n    {\n      width: 23,\n      height: 23,\n      cssClass: 'plumb-endpoint',\n      hoverClass: 'plumb-endpoint-hover'\n    }\n  ],\n  dropOptions: {\n    tolerance: 'touch',\n    hoverClass: 'plumb-drop-hover',\n    isTarget: false\n  },\n  dragAllowedWhenFull: false,\n  deleteEndpointsOnEmpty: true,\n  isTarget: false\n};\n\nexport const SOURCE_DEFAULTS = {\n  anchor: 'BottomCenter',\n  maxConnections: 1,\n  dragAllowedWhenFull: false,\n  deleteEndpointsOnEmpty: true,\n  isSource: true\n};\n\nexport const getAnchor = (sourceEle: any, targetEle: any): any[] => {\n  return [\n    'Continuous',\n    {\n      shape: 'Dot',\n      faces:\n        sourceEle.getBoundingClientRect().bottom + GRID_SIZE / 3 <\n        targetEle.getBoundingClientRect().top\n          ? ['top']\n          : ['right', 'left']\n    }\n  ];\n};\n\nconst defaultConnector = [\n  'Flowchart',\n  {\n    stub: 12,\n    midpoint: 0.75,\n    alwaysRespectStubs: false,\n    gap: [0, 5],\n    cornerRadius: 3\n  }\n];\n\n/* istanbul ignore next */\nexport default class Plumber {\n  public jsPlumb: any;\n\n  // we batch up connections to apply them together\n  private pendingConnections: PendingConnections = {};\n  private pendingConnectionTimeout: any;\n\n  private animateInterval: any = null;\n\n  private onLoadFunction: () => void = null;\n\n  constructor() {\n    this.jsPlumb = importDefaults({\n      DragOptions: { cursor: 'pointer', zIndex: 1000 },\n      DropOptions: { tolerance: 'touch', hoverClass: 'plumb-hover' },\n      Endpoint: 'Rectangle',\n      EndpointStyle: { strokeStyle: 'transparent' },\n      PaintStyle: { strokeWidth: 3.5 },\n      ConnectionsDetachable: true,\n      Connector: defaultConnector,\n      ConnectionOverlays: [\n        [\n          'PlainArrow',\n          {\n            location: 0.999,\n            width: 12,\n            length: 12,\n            cssClass: 'jtk-arrow'\n          }\n        ]\n      ]\n    });\n\n    this.debug = this.debug.bind(this);\n    this.setSourceEnabled = this.setSourceEnabled.bind(this);\n    this.makeSource = this.makeSource.bind(this);\n    this.makeTarget = this.makeTarget.bind(this);\n    this.connectExit = this.connectExit.bind(this);\n    this.setDragSelection = this.setDragSelection.bind(this);\n    this.clearDragSelection = this.clearDragSelection.bind(this);\n    this.removeFromDragSelection = this.removeFromDragSelection.bind(this);\n    this.cancelDurationRepaint = this.cancelDurationRepaint.bind(this);\n    this.remove = this.remove.bind(this);\n    this.handlePendingConnections = this.handlePendingConnections.bind(this);\n    this.checkForPendingConnections = this.checkForPendingConnections.bind(this);\n    this.connect = this.connect.bind(this);\n    this.bind = this.bind.bind(this);\n    this.repaint = this.repaint.bind(this);\n    this.recalculate = this.recalculate.bind(this);\n    this.reset = this.reset.bind(this);\n    this.updateClass = this.updateClass.bind(this);\n    this.rerouteAnchors = this.rerouteAnchors.bind(this);\n  }\n\n  public setContainer(containerId: string) {\n    this.jsPlumb.setContainer(containerId);\n  }\n\n  public debug(): any {\n    return this.jsPlumb;\n  }\n\n  public setSourceEnabled(uuid: string, enabled: boolean): void {\n    this.jsPlumb.setSourceEnabled(uuid, enabled);\n  }\n\n  public makeSource(uuid: string): any {\n    return this.jsPlumb.makeSource(uuid, SOURCE_DEFAULTS);\n  }\n\n  public makeTarget(uuid: string): void {\n    this.jsPlumb.makeTarget(uuid, TARGET_DEFAULTS);\n  }\n\n  public connectExit(\n    node: FlowNode,\n    exit: Exit,\n    onConnection: (activityId: string, recentMessagesId: string) => void,\n    className: string = null\n  ): void {\n    this.connect(\n      `${node.uuid}:${exit.uuid}`,\n      exit.destination_uuid,\n      onConnection,\n      className,\n      node.exits.findIndex((e: Exit) => e.uuid === exit.uuid),\n      node.exits.length\n    );\n  }\n\n  public updateClass(node: FlowNode, exit: Exit, className: string, add: boolean): void {\n    const source = `${node.uuid}:${exit.uuid}`;\n    const connection = this.jsPlumb.select({ source });\n    if (add) {\n      connection.addClass(className);\n    } else {\n      connection.removeClass(className);\n    }\n  }\n\n  public removeFromDragSelection(uuid: string): void {\n    this.jsPlumb.removeFromDragSelection(uuid);\n  }\n\n  public setDragSelection(selected: { [uuid: string]: boolean }): void {\n    this.cancelDurationRepaint();\n    this.jsPlumb.clearDragSelection();\n\n    Object.keys(selected).forEach(uuid => this.jsPlumb.addToDragSelection(uuid));\n  }\n\n  public clearDragSelection(): void {\n    this.jsPlumb.clearDragSelection();\n  }\n\n  public cancelDurationRepaint(): void {\n    if (this.animateInterval) {\n      window.clearInterval(this.animateInterval);\n      this.animateInterval = null;\n    }\n  }\n\n  private handlePendingConnections(): void {\n    const targets: { [id: string]: boolean } = {};\n\n    const batch = Object.keys(this.pendingConnections).length;\n    if (batch > 1) {\n      timeStart('Batched ' + batch + ' connections');\n    }\n\n    this.jsPlumb.batch(() => {\n      for (const key in this.pendingConnections) {\n        if (this.pendingConnections.hasOwnProperty(key)) {\n          const connection = this.pendingConnections[key];\n          const { source, target, className, slot, totalSlots } = connection;\n\n          const anchors = target\n            ? [\n                'Bottom',\n                getAnchor(document.getElementById(source), document.getElementById(target))\n              ]\n            : [];\n\n          if (source != null) {\n            // any existing connections for our source need to be deleted\n            this.jsPlumb.select({ source }).delete({ fireEvent: false });\n\n            const start = totalSlots < 5 ? 0.75 : 0.35;\n            let midpoint = start + slot * 0.15;\n            const exitMiddle = totalSlots / 2;\n            if (slot > exitMiddle) {\n              midpoint = start - 0.05 + (totalSlots - slot) * 0.15;\n            }\n\n            // add reasonable boundaries for midpoints\n            midpoint = Math.max(Math.min(0.9, midpoint), 0.1);\n\n            const connector: any = [...defaultConnector];\n            connector[1].midpoint = midpoint;\n\n            // now make our new connection\n            if (target != null) {\n              const plumbConnect = this.jsPlumb.connect({\n                source,\n                target,\n                anchors,\n                fireEvent: false,\n                cssClass: className,\n                detachable: !className,\n                overlays: connectorOverlays,\n                connector\n              });\n\n              const activityElement = plumbConnect.getOverlays()['activity'].getElement();\n              const recentsElement = plumbConnect.getOverlays()['recent_messages'].getElement();\n              activityElement.classList.add('jtk-activity');\n              recentsElement.classList.add('jtk-recents');\n\n              connection.onConnected(activityElement.id, recentsElement.id);\n            }\n          }\n\n          if (target != null) {\n            targets[target] = true;\n          }\n\n          delete this.pendingConnections[key];\n        }\n      }\n    }, false);\n\n    if (batch > 1) {\n      timeEnd('Batched ' + batch + ' connections');\n    }\n\n    // fire our callback for who is embedding us\n    if (this.onLoadFunction) {\n      this.onLoadFunction();\n      this.onLoadFunction = null;\n    }\n  }\n\n  public triggerLoaded(onLoad: () => void): void {\n    if (onLoad) {\n      if (Object.keys(this.pendingConnections).length === 0) {\n        onLoad();\n      }\n      this.onLoadFunction = onLoad;\n    }\n  }\n\n  private checkForPendingConnections(): void {\n    if (this.pendingConnectionTimeout) {\n      window.clearTimeout(this.pendingConnectionTimeout);\n    }\n\n    this.pendingConnectionTimeout = window.setTimeout(() => {\n      this.handlePendingConnections();\n    }, 0);\n  }\n\n  public connect(\n    source: string,\n    target: string,\n    onConnected: (activityId: string, recentMessagesId: string) => void,\n    className: string = null,\n    slot: number = 0,\n    totalSlots: number = 0\n  ): void {\n    this.pendingConnections[`${source}:${target}:${className}`] = {\n      source,\n      target,\n      className,\n      slot,\n      totalSlots,\n      onConnected\n    };\n    this.checkForPendingConnections();\n  }\n\n  public bind(event: string, onEvent: Function): void {\n    return this.jsPlumb.bind(event, onEvent);\n  }\n\n  public repaint(uuid?: string): void {\n    if (!uuid) {\n      this.jsPlumb.recalculateOffsets();\n      this.jsPlumb.repaintEverything();\n    } else {\n      this.jsPlumb.recalculateOffsets(uuid);\n      this.jsPlumb.repaint(uuid);\n    }\n  }\n\n  public remove(uuid: string): void {\n    if (this.jsPlumb.isSource(uuid)) {\n      this.jsPlumb.unmakeSource(uuid);\n      this.jsPlumb.remove(uuid);\n    } else if (this.jsPlumb.isTarget(uuid)) {\n      this.jsPlumb.deleteConnectionsForElement(uuid);\n    }\n  }\n\n  /**\n   *\n   * Reroutes the connections for actively moving nodes. We try to direct\n   * connections as much as possible.\n   * @param elements the targets and sources that ar moving around\n   */\n  public rerouteAnchors(elements: Element[]): void {\n    elements.forEach((ele: Element) => {\n      const uuid = ele.id;\n      const connections = this.jsPlumb\n        .getConnections({ target: uuid })\n        .concat(this.jsPlumb.getConnections({ source: uuid }));\n      for (const c of connections) {\n        c.endpoints[1].setAnchor(getAnchor(c.endpoints[0].element, c.endpoints[1].element));\n      }\n    });\n  }\n\n  public revalidate(elements: Element[]): void {\n    this.jsPlumb.revalidate(elements);\n\n    // reroute our anchors but only after we stop moving for a bit\n    debounce(this.rerouteAnchors, 200, () => {\n      this.rerouteAnchors(elements);\n    });\n  }\n\n  public recalculate(uuid: string): void {\n    window.setTimeout(() => {\n      this.jsPlumb.revalidate(uuid);\n    }, 100);\n  }\n\n  public reset(): void {\n    this.jsPlumb.reset();\n  }\n\n  public getPlumb(): any {\n    return this.jsPlumb;\n  }\n}\n","import { FlowStoreProps } from 'components/flow/Flow';\nimport { DebugState } from 'store/editor';\n\nconst mutate = require('immutability-helper');\n\n/* istanbul ignore next */\nexport default class Debug {\n  private props: FlowStoreProps;\n  private state: DebugState;\n\n  constructor(props: FlowStoreProps, initial: DebugState) {\n    this.props = props;\n    this.state = initial || { showUUIDs: false };\n  }\n\n  public showUUIDs(): DebugState {\n    const updated = mutate(this.state, { $merge: { showUUIDs: true } });\n    this.props.mergeEditorState({ debug: updated });\n    return updated;\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Button from 'components/button/Button';\nimport { Canvas } from 'components/canvas/Canvas';\nimport { CanvasDraggableProps } from 'components/canvas/CanvasDraggable';\nimport Node from 'components/flow/node/Node';\nimport { getDraggedFrom } from 'components/helpers';\nimport NodeEditor from 'components/nodeeditor/NodeEditor';\nimport Simulator from 'components/simulator/Simulator';\nimport Sticky, { STICKY_BODY, STICKY_TITLE } from 'components/sticky/Sticky';\nimport { ConfigProviderContext, fakePropType } from 'config/ConfigProvider';\nimport { FlowDefinition, FlowMetadata, FlowPosition } from 'flowTypes';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Plumber from 'services/Plumber';\nimport { DragSelection, DebugState } from 'store/editor';\nimport { RenderNode } from 'store/flowContext';\nimport { createEmptyNode, detectLoops, getOrderedNodes } from 'store/helpers';\nimport { NodeEditorSettings } from 'store/nodeEditor';\nimport AppState from 'store/state';\nimport {\n  ConnectionEvent,\n  DispatchWithState,\n  mergeEditorState,\n  MergeEditorState,\n  NoParamsAC,\n  onConnectionDrag,\n  OnConnectionDrag,\n  OnOpenNodeEditor,\n  onOpenNodeEditor,\n  onRemoveNodes,\n  OnRemoveNodes,\n  OnUpdateCanvasPositions,\n  onUpdateCanvasPositions,\n  resetNodeEditingState,\n  UpdateConnection,\n  updateConnection,\n  updateSticky,\n  UpdateSticky\n} from 'store/thunks';\nimport {\n  createUUID,\n  isRealValue,\n  NODE_PADDING,\n  renderIf,\n  snapToGrid,\n  timeEnd,\n  timeStart\n} from 'utils';\nimport Debug from 'utils/debug';\n\nimport styles from './Flow.module.scss';\nimport { Trans } from 'react-i18next';\nimport { PopTabType } from 'config/interfaces';\nimport i18n from 'config/i18n';\n\ndeclare global {\n  interface Window {\n    fe: any;\n  }\n}\n\nexport interface FlowStoreProps {\n  ghostNode: RenderNode;\n  debug: DebugState;\n  translating: boolean;\n  popped: string;\n  dragActive: boolean;\n\n  mergeEditorState: MergeEditorState;\n\n  definition: FlowDefinition;\n  nodes: { [uuid: string]: RenderNode };\n  metadata: FlowMetadata;\n  nodeEditorSettings: NodeEditorSettings;\n\n  updateConnection: UpdateConnection;\n  onOpenNodeEditor: OnOpenNodeEditor;\n  onUpdateCanvasPositions: OnUpdateCanvasPositions;\n  onRemoveNodes: OnRemoveNodes;\n  resetNodeEditingState: NoParamsAC;\n  onConnectionDrag: OnConnectionDrag;\n  updateSticky: UpdateSticky;\n}\n\nexport interface Translations {\n  [uuid: string]: any;\n}\n\nexport const DRAG_THRESHOLD = 3;\nexport const REPAINT_TIMEOUT = 500;\nexport const GHOST_POSITION_INITIAL = { left: -1000, top: -1000 };\n\nexport const nodeSpecId = 'node';\nexport const nodesContainerSpecId = 'node-container';\nexport const ghostNodeSpecId = 'ghost-node';\nexport const dragSelectSpecId = 'drag-select';\n\nexport const isDraggingBack = (event: ConnectionEvent) => {\n  return event.suspendedElementId === event.targetId && event.source !== null;\n};\n\nexport const getDragStyle = (drag: DragSelection) => {\n  const left = Math.min(drag.startX, drag.currentX);\n  const top = Math.min(drag.startY, drag.currentY);\n  const width = Math.max(drag.startX, drag.currentX) - left;\n  const height = Math.max(drag.startY, drag.currentY) - top;\n  return {\n    left,\n    top,\n    width,\n    height\n  };\n};\n\nexport class Flow extends React.PureComponent<FlowStoreProps, {}> {\n  private Plumber: Plumber;\n  private nodeContainerUUID: string;\n\n  // Refs\n  private ghost: any;\n\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: FlowStoreProps, context: ConfigProviderContext) {\n    super(props, context);\n\n    this.nodeContainerUUID = createUUID();\n\n    this.Plumber = new Plumber();\n\n    /* istanbul ignore next */\n    if (context.config.debug) {\n      window.fe = new Debug(props, this.props.debug);\n    }\n\n    bindCallbacks(this, {\n      include: [/Ref$/, /^on/, /^is/, /^get/, /^handle/]\n    });\n\n    timeStart('Loaded Flow');\n  }\n\n  private ghostRef(ref: any): any {\n    return (this.ghost = ref);\n  }\n\n  public componentDidMount(): void {\n    this.Plumber.bind('connection', (event: ConnectionEvent) =>\n      this.props.updateConnection(event.sourceId, event.targetId)\n    );\n    this.Plumber.bind('beforeDrag', (event: ConnectionEvent) => {\n      this.beforeConnectionDrag(event);\n    });\n\n    this.Plumber.bind('connectionDrag', (event: ConnectionEvent) => {\n      this.props.onConnectionDrag(event, this.context.config.flowType);\n    });\n\n    this.Plumber.bind('connectionDragStop', (event: ConnectionEvent) =>\n      this.onConnectorDrop(event)\n    );\n    this.Plumber.bind(\n      'beforeStartDetach',\n      (event: ConnectionEvent) => !this.props.translating && this.context.config.mutable\n    );\n    this.Plumber.bind('beforeDetach', (event: ConnectionEvent) => true);\n    this.Plumber.bind('beforeDrop', (event: ConnectionEvent) => this.onBeforeConnectorDrop(event));\n    this.Plumber.triggerLoaded(this.context.config.onLoad);\n\n    timeEnd('Loaded Flow');\n  }\n\n  public componentWillUnmount(): void {\n    this.Plumber.reset();\n  }\n\n  /**\n   * Called right before a connector is dropped onto a new node\n   */\n  private onBeforeConnectorDrop(event: ConnectionEvent): boolean {\n    this.props.resetNodeEditingState();\n    const fromNodeUUID = event.sourceId.split(':')[0];\n    try {\n      detectLoops(this.props.nodes, fromNodeUUID, event.targetId);\n    } catch {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Called the moment a connector is done dragging, whether it is dropped on an\n   * existing node or on to empty space.\n   */\n  private onConnectorDrop(event: ConnectionEvent): boolean {\n    const ghostNode = this.props.ghostNode;\n    // Don't show the node editor if we a dragging back to where we were\n    if (isRealValue(ghostNode) && !isDraggingBack(event)) {\n      // Wire up the drag from to our ghost node\n      this.Plumber.recalculate(ghostNode.node.uuid);\n\n      const dragPoint = getDraggedFrom(ghostNode);\n\n      this.Plumber.connect(\n        dragPoint.nodeUUID + ':' + dragPoint.exitUUID,\n        ghostNode.node.uuid,\n        connection => {}\n      );\n\n      // Save our position for later\n      const { left, top } = (this.ghost &&\n        snapToGrid(this.ghost.ele.offsetLeft, this.ghost.ele.offsetTop)) || { left: 0, top: 0 };\n\n      this.props.ghostNode.ui.position = { left, top };\n\n      let originalAction = null;\n      if (ghostNode.node.actions && ghostNode.node.actions.length === 1) {\n        originalAction = ghostNode.node.actions[0];\n      }\n\n      // Bring up the node editor\n      this.props.onOpenNodeEditor({\n        originalNode: ghostNode,\n        originalAction\n      });\n    }\n\n    if (isDraggingBack(event)) {\n      this.props.mergeEditorState({ ghostNode: null });\n    }\n\n    /* istanbul ignore next */\n    document.removeEventListener('mousemove', (window as any).ghostListener);\n\n    return true;\n  }\n\n  private beforeConnectionDrag(event: ConnectionEvent): boolean {\n    if (event.source) {\n      event.source.dispatchEvent(new Event('disconnect'));\n    }\n    return !this.props.translating;\n  }\n\n  private handleStickyCreation(props: CanvasDraggableProps) {\n    const stickyMap = this.props.definition._ui.stickies || {};\n    const uuid = props.uuid;\n    return <Sticky key={uuid} uuid={uuid} sticky={stickyMap[uuid]} selected={props.selected} />;\n  }\n\n  private handleNodeCreation(props: CanvasDraggableProps) {\n    const onlyNode = Object.keys(this.props.nodes).length === 1;\n    return (\n      <Node\n        onlyNode={onlyNode}\n        startingNode={props.idx === 0}\n        selected={props.selected}\n        key={props.uuid}\n        data-spec={nodeSpecId}\n        nodeUUID={props.uuid}\n        plumberMakeTarget={this.Plumber.makeTarget}\n        plumberRemove={this.Plumber.remove}\n        plumberRecalculate={this.Plumber.recalculate}\n        plumberMakeSource={this.Plumber.makeSource}\n        plumberConnectExit={this.Plumber.connectExit}\n        plumberUpdateClass={this.Plumber.updateClass}\n      />\n    );\n  }\n\n  private getNodes(): CanvasDraggableProps[] {\n    return getOrderedNodes(this.props.nodes).map((renderNode: RenderNode, idx: number) => {\n      return {\n        uuid: renderNode.node.uuid,\n        position: renderNode.ui.position,\n        elementCreator: this.handleNodeCreation,\n        config: renderNode,\n        idx\n      };\n    });\n  }\n\n  private getStickies(): CanvasDraggableProps[] {\n    const stickyMap = this.props.definition._ui.stickies || {};\n    return Object.keys(stickyMap).map((uuid: string, idx: number) => {\n      return {\n        uuid,\n        elementCreator: this.handleStickyCreation,\n        position: stickyMap[uuid].position,\n        idx\n      };\n    });\n  }\n\n  private getDragNode(): JSX.Element {\n    return isRealValue(this.props.ghostNode) ? (\n      <div\n        data-spec={ghostNodeSpecId}\n        key={this.props.ghostNode.node.uuid}\n        style={{ position: 'absolute', display: 'block', visibility: 'hidden' }}\n      >\n        <Node\n          onlyNode={false}\n          selected={false}\n          startingNode={false}\n          ref={this.ghostRef}\n          ghost={true}\n          nodeUUID={this.props.ghostNode.node.uuid}\n          plumberMakeTarget={this.Plumber.makeTarget}\n          plumberRemove={this.Plumber.remove}\n          plumberRecalculate={this.Plumber.recalculate}\n          plumberMakeSource={this.Plumber.makeSource}\n          plumberConnectExit={this.Plumber.connectExit}\n          plumberUpdateClass={this.Plumber.updateClass}\n        />\n      </div>\n    ) : null;\n  }\n\n  private getSimulator(): JSX.Element {\n    return renderIf(this.context.config.endpoints && this.context.config.endpoints.simulateStart)(\n      <Simulator\n        key=\"simulator\"\n        popped={this.props.popped}\n        mergeEditorState={this.props.mergeEditorState}\n        onToggled={(visible: boolean, tab: PopTabType) => {\n          this.props.mergeEditorState({\n            popped: visible ? tab : null\n          });\n        }}\n      />\n    );\n  }\n\n  private getNodeEditor(): JSX.Element {\n    return renderIf(this.props.nodeEditorSettings !== null)(\n      <NodeEditor\n        key=\"node-editor\"\n        helpArticles={this.context.config.help}\n        plumberConnectExit={this.Plumber.connectExit}\n      />\n    );\n  }\n\n  // TODO: this should be a callback from the canvas\n  private handleDoubleClick(position: FlowPosition): void {\n    const { left, top } = position;\n    this.props.updateSticky(createUUID(), {\n      position: snapToGrid(left - 90 + NODE_PADDING, top - 40),\n      title: STICKY_TITLE,\n      body: STICKY_BODY\n    });\n  }\n\n  private getEmptyFlow(): JSX.Element {\n    return (\n      <div key=\"create_node\" className={styles.empty_flow}>\n        <Trans i18nKey=\"empty_flow_message\">\n          <h1>Let's get started</h1>\n          <div>\n            We recommend starting your flow by sending a message. This message will be sent to\n            anybody right after they join the flow. This is your chance to send a single message or\n            ask them a question.\n          </div>\n        </Trans>\n\n        <Button\n          name={i18n.t('buttons.create_message', 'Create Message')}\n          onClick={() => {\n            const emptyNode = createEmptyNode(null, null, 1, this.context.config.flowType);\n            this.props.onOpenNodeEditor({\n              originalNode: emptyNode,\n              originalAction: emptyNode.node.actions[0]\n            });\n          }}\n        />\n      </div>\n    );\n  }\n\n  /* \n  public componentDidUpdate(prevProps: FlowStoreProps): void {\n    traceUpdate(this, prevProps);\n  }\n  */\n\n  public handleDragging(uuids: string[]): void {\n    uuids.forEach((uuid: string) => {\n      try {\n        const ele = document.getElementById(uuid);\n        const exits = ele.querySelectorAll('.jtk-connected');\n        this.Plumber.revalidate([ele, ...exits]);\n      } catch (error) {}\n    });\n  }\n\n  public handleCanvasLoaded(): void {\n    this.Plumber.setContainer('canvas');\n  }\n\n  public render(): JSX.Element {\n    const nodes = this.getNodes();\n\n    const draggables = this.getStickies().concat(nodes);\n\n    return (\n      <div>\n        {nodes.length === 0 ? this.getEmptyFlow() : <>{this.getSimulator()}</>}\n        {this.getNodeEditor()}\n\n        <Canvas\n          mutable={this.context.config.mutable}\n          draggingNew={!!this.props.ghostNode && !this.props.nodeEditorSettings}\n          newDragElement={this.getDragNode()}\n          onDragging={this.handleDragging}\n          uuid={this.nodeContainerUUID}\n          dragActive={this.props.dragActive}\n          mergeEditorState={this.props.mergeEditorState}\n          onRemoveNodes={this.props.onRemoveNodes}\n          draggables={draggables}\n          onDoubleClick={this.handleDoubleClick}\n          onUpdatePositions={this.props.onUpdateCanvasPositions}\n          onLoaded={this.handleCanvasLoaded}\n        ></Canvas>\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({\n  flowContext: { definition, metadata, nodes },\n  editorState: { ghostNode, debug, translating, popped, dragActive },\n  // tslint:disable-next-line: no-shadowed-variable\n  nodeEditor: { settings }\n}: AppState) => {\n  return {\n    nodeEditorSettings: settings,\n    definition,\n    nodes,\n    metadata,\n    ghostNode,\n    debug,\n    translating,\n    popped,\n    dragActive\n  };\n};\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      mergeEditorState,\n      resetNodeEditingState,\n      onConnectionDrag,\n      onOpenNodeEditor,\n      onUpdateCanvasPositions,\n      onRemoveNodes,\n      updateConnection,\n      updateSticky\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Flow);\n","import { desnake } from 'utils';\nimport i18next from 'i18next';\nimport { Translation, TranslationType, TranslationBundle } from './TranslatorTab';\n\nexport enum TranslationState {\n  COMPLETE = 'complete',\n  MISSING = 'missing'\n}\n\nexport const getMergedByType = (\n  bundle: TranslationBundle,\n  state: TranslationState,\n  type: TranslationType\n) => {\n  return bundle.translations\n    .filter(translation => {\n      switch (state) {\n        case TranslationState.COMPLETE:\n          return !!translation.to && translation.type === type;\n        case TranslationState.MISSING:\n          return !translation.to && translation.type === type;\n      }\n      return true;\n    })\n    .map(translation => (translation as any)[state === TranslationState.MISSING ? 'from' : 'to'])\n    .join(', ');\n};\n\nexport const findTranslations = (\n  type: TranslationType,\n  localizeableKeys: string[],\n  localizable: any,\n  localization: { [uuid: string]: any }\n): Translation[] => {\n  const translations: Translation[] = [];\n\n  localizeableKeys.forEach((attribute: string) => {\n    let keys = attribute.split('.');\n    let from = localizable as any;\n    let to: any = [];\n\n    while (keys.length > 0 && from) {\n      if (keys.length > 0 && from['uuid']) {\n        to = (localization || {})[from['uuid']];\n      }\n\n      const path = keys.shift();\n      if (to) {\n        to = to[path];\n      }\n      from = from[path];\n    }\n\n    if (from) {\n      if (to) {\n        to = to.join(', ');\n      }\n\n      if (Array.isArray(from)) {\n        from = from\n          .map((obj: any) => {\n            if (obj['name']) {\n              return obj['name'];\n            }\n            if (obj['arguments']) {\n              return obj['arguments'].join(' ');\n            }\n            return obj;\n          })\n          .join(', ');\n      }\n\n      if (from) {\n        translations.push({\n          type,\n          attribute,\n          from,\n          to\n        });\n      }\n    }\n  });\n\n  return translations;\n};\n\nexport const getFriendlyAttribute = (attribute: string) => {\n  if (attribute === 'categories') {\n    return i18next.t('translation.attributes.categories', 'Categories');\n  }\n\n  if (attribute === 'cases') {\n    return i18next.t('translation.attributes.cases', 'Rules');\n  }\n\n  if (attribute === 'text') {\n    return i18next.t('translation.attributes.text', 'Message');\n  }\n\n  if (attribute === 'quick_replies') {\n    return i18next.t('translation.attributes.quick_relpies', 'Quick Replies');\n  }\n\n  if (attribute === 'templating.variables') {\n    return i18next.t('translation.attributes.templates', 'Template Variables');\n  }\n\n  if (attribute === 'subject') {\n    return i18next.t('translation.attributes.subject', 'Subject');\n  }\n\n  if (attribute === 'body') {\n    return i18next.t('translation.attributes.body', 'Body');\n  }\n\n  return desnake(attribute);\n};\n\nexport const getBundleKey = (bundle: TranslationBundle) => {\n  return bundle.node_uuid + bundle.action_uuid;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport { ConfigProviderContext } from 'config/ConfigProvider';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Asset, Assets } from 'store/flowContext';\nimport AppState from 'store/state';\nimport { DispatchWithState, HandleLanguageChange, handleLanguageChange } from 'store/thunks';\n\nimport styles from './LanguageSelector.module.scss';\n\nexport interface LanguageSelectorProps {\n  language: Asset;\n  languages: Assets;\n  handleLanguageChange: HandleLanguageChange;\n}\n\nexport const containerClasses = 'language-selector';\n\nexport class LanguageSelector extends React.Component<LanguageSelectorProps> {\n  constructor(props: LanguageSelectorProps, context: ConfigProviderContext) {\n    super(props, context);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleLanguageChanged(language: Asset): void {\n    this.props.handleLanguageChange(language);\n  }\n\n  public handleLanguageSort(a: Asset, b: Asset): number {\n    if (a.id === 'base') {\n      return -1;\n    }\n\n    if (b.id === 'base') {\n      return 1;\n    }\n\n    if (a.order !== undefined && b.order !== undefined) {\n      return a.order - b.order;\n    }\n\n    return a.name.localeCompare(b.name);\n  }\n\n  public render(): JSX.Element {\n    if (!this.props.language) {\n      return null;\n    }\n\n    const languages = Object.keys(this.props.languages.items)\n      .map((iso: string) => this.props.languages.items[iso])\n      .sort(this.handleLanguageSort);\n\n    if (languages.length === 1) {\n      return null;\n    }\n\n    return (\n      <div className={containerClasses}>\n        {languages.map((lang: Asset, idx: number) => {\n          return (\n            <div key={'lang_' + lang.id} className={styles.language}>\n              {idx > 0 ? <div className={styles.separator}>|</div> : null}\n              <div\n                className={\n                  styles.language_link +\n                  ' ' +\n                  (this.props.language.id === lang.id ? styles.active : '')\n                }\n                onClick={() => {\n                  this.handleLanguageChanged(lang);\n                }}\n              >\n                {lang.name}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\n/* istanbul ignore next */\nconst mapStateToProps = ({ flowContext: { assetStore }, editorState: { language } }: AppState) => ({\n  languages: assetStore.languages,\n  language\n});\n\n/* istanbul ignore next */\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      handleLanguageChange\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LanguageSelector);\n","import { react as bindCallbacks } from 'auto-bind';\nimport * as React from 'react';\n\nimport styles from './PopTab.module.scss';\n\nexport interface PopTabProps {\n  color: string;\n  icon: string;\n  label: string;\n  header: string;\n  top: string;\n  visible: boolean;\n  onShow: () => void;\n  onHide: () => void;\n}\n\nexport interface PopTabState {\n  width: number;\n}\n\nexport class PopTab extends React.Component<PopTabProps, PopTabState> {\n  private poppedEle: HTMLDivElement;\n\n  constructor(props: PopTabProps) {\n    super(props);\n    this.state = { width: 258 };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public componentDidUpdate(): void {\n    if (this.state.width !== this.poppedEle.offsetWidth) {\n      this.setState({ width: this.poppedEle.offsetWidth });\n    }\n  }\n\n  private handlePoppedRef(ref: HTMLDivElement): HTMLDivElement {\n    return (this.poppedEle = ref);\n  }\n\n  private handleTabClick(): void {\n    this.props.onShow();\n  }\n\n  private handleClose(): void {\n    this.props.onHide();\n  }\n  public render(): JSX.Element {\n    return (\n      <div\n        className={\n          'pop_wrapper ' + styles.pop_wrapper + ' ' + (this.props.visible ? styles.visible : '')\n        }\n        style={{\n          right: -this.state.width,\n          top: this.props.top\n        }}\n      >\n        <div className={styles.tab_wrapper}>\n          <div\n            className={styles.tab}\n            style={{ background: this.props.color }}\n            onClick={this.handleTabClick}\n          >\n            <div className={styles.icon}>\n              <span className={this.props.icon} />\n            </div>\n            <div className={styles.label}>{this.props.label}</div>\n          </div>\n        </div>\n        <div\n          ref={this.handlePoppedRef}\n          className={styles.popped}\n          style={{\n            borderColor: this.props.color,\n            right: this.props.visible ? 15 + this.state.width : 0,\n            top: -100\n          }}\n        >\n          <div className={styles.header} style={{ background: this.props.color }}>\n            <div className={styles.close + ' fe-x'} onClick={this.handleClose} />\n            <div className={styles.header_label}>{this.props.header}</div>\n          </div>\n          <div className={styles.body} style={{ background: this.props.color }}>\n            {this.props.children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport { PopTab } from 'components/poptab/PopTab';\nimport dateFormat from 'dateformat';\nimport { getAssets, getFlowDetails } from 'external';\nimport { FlowDefinition, SPEC_VERSION, FlowDetails, FlowMetadata } from 'flowTypes';\nimport React from 'react';\nimport { Asset, AssetStore } from 'store/flowContext';\nimport { renderIf } from 'utils';\n\nimport styles from './RevisionExplorer.module.scss';\nimport i18n from 'config/i18n';\nimport { PopTabType } from 'config/interfaces';\n\nconst cx: any = classNames.bind(styles);\n\nexport interface User {\n  email: string;\n  name: string;\n}\n\nexport interface SaveResult {\n  revision: Revision;\n  metadata: FlowMetadata;\n}\n\nexport interface Revision {\n  id: number;\n  version: string;\n  revision: number;\n  created_on: string;\n  user: User;\n  current: boolean;\n}\n\nexport interface RevisionExplorerProps {\n  assetStore: AssetStore;\n  loadFlowDefinition: (details: FlowDetails, assetStore: AssetStore) => void;\n  createNewRevision: () => void;\n  onToggled: (visible: boolean, tab: PopTabType) => void;\n  utc?: boolean;\n  popped: string;\n}\n\nexport interface RevisionExplorerState {\n  revisions: Asset[];\n  revision: Asset;\n  definition: FlowDefinition;\n  visible: boolean;\n}\n\nexport class RevisionExplorer extends React.Component<\n  RevisionExplorerProps,\n  RevisionExplorerState\n> {\n  constructor(props: RevisionExplorerProps) {\n    super(props);\n    this.state = {\n      revisions: [],\n      revision: null,\n      definition: null,\n      visible: false\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public handleUpdateRevisions(): Promise<void> {\n    if (this.props.assetStore !== null) {\n      const assets = this.props.assetStore.revisions;\n      return getAssets(\n        assets.endpoint + '?version=' + SPEC_VERSION,\n        assets.type,\n        assets.id || 'id'\n      ).then((remoteAssets: Asset[]) => {\n        if (remoteAssets.length > 0) {\n          remoteAssets[0].content.current = true;\n        }\n        this.setState({ revisions: remoteAssets });\n      });\n    }\n  }\n\n  public handleTabClicked(): void {\n    this.props.onToggled(!this.state.visible, PopTabType.REVISION_HISTORY);\n\n    this.setState(\n      (prevState: RevisionExplorerState) => {\n        return { visible: !prevState.visible };\n      },\n      () => {\n        if (this.state.visible) {\n          this.handleUpdateRevisions();\n        } else {\n          if (this.state.revision && this.state.revision.id !== this.state.revisions[0].id) {\n            getFlowDetails(this.props.assetStore.revisions, this.state.revisions[0].id).then(\n              (details: FlowDetails) => {\n                this.props.loadFlowDefinition(details, this.props.assetStore);\n                this.setState({ revision: null });\n              }\n            );\n          }\n        }\n      }\n    );\n  }\n\n  public onRevisionClicked = (\n    revision: Asset\n  ): ((event: React.MouseEvent<HTMLDivElement>) => void) => {\n    return (event: React.MouseEvent<HTMLDivElement>) => {\n      event.stopPropagation();\n      event.preventDefault();\n      getFlowDetails(this.props.assetStore.revisions, revision.id).then((details: FlowDetails) => {\n        this.props.loadFlowDefinition(details, this.props.assetStore);\n        this.setState({ revision });\n      });\n    };\n  };\n\n  public onRevertClicked = (\n    revision: Asset\n  ): ((event: React.MouseEvent<HTMLDivElement>) => void) => {\n    return (event: React.MouseEvent<HTMLDivElement>) => {\n      event.stopPropagation();\n      event.preventDefault();\n      this.props.createNewRevision();\n      this.setState({ visible: false, revision: null });\n    };\n  };\n\n  public render(): JSX.Element {\n    const classes = cx({\n      [styles.visible]: this.state.visible,\n      [styles.hidden]: this.props.popped && this.props.popped !== PopTabType.REVISION_HISTORY\n    });\n\n    return (\n      <div className={classes}>\n        <div className={styles.mask} />\n        <PopTab\n          header={i18n.t('revisions.header', 'Revisions')}\n          color=\"#8e5ea7\"\n          icon=\"fe-time\"\n          label={i18n.t('revisions.label', 'Revision History')}\n          top=\"360px\"\n          visible={this.state.visible}\n          onShow={this.handleTabClicked}\n          onHide={this.handleTabClicked}\n        >\n          <div className={styles.explorer_wrapper}>\n            <div className={styles.explorer}>\n              <div className={styles.revisions}>\n                {this.state.revisions.map((asset: Asset) => {\n                  const revision = asset.content as Revision;\n\n                  const isSelected = this.state.revision && asset.id === this.state.revision.id;\n\n                  const selectedClass = revision.current || isSelected ? styles.selected : '';\n\n                  return (\n                    <div\n                      className={styles.revision + ' ' + selectedClass}\n                      key={'revision_' + asset.id}\n                      onClick={this.onRevisionClicked(asset)}\n                    >\n                      {renderIf(revision.current)(\n                        <div className={styles.button + ' ' + styles.current}>current</div>\n                      )}\n                      {renderIf(isSelected && !revision.current)(\n                        <div onClick={this.onRevertClicked(asset)} className={styles.button}>\n                          revert\n                        </div>\n                      )}\n                      <div className={styles.created_on}>\n                        {dateFormat(\n                          new Date(revision.created_on),\n                          'mmmm d, yyyy, h:MM TT',\n                          this.props.utc\n                        )}\n                      </div>\n                      <div className={styles.email}>\n                        {revision.user.name || revision.user.email}\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </PopTab>\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport React from 'react';\nimport styles from './IssuesTab.module.scss';\nimport i18n from 'config/i18n';\nimport { FlowIssue, Action } from 'flowTypes';\nimport { PopTab } from 'components/poptab/PopTab';\nimport { renderIssue } from 'components/flow/actions/helpers';\nimport {\n  AssetMap,\n  RenderNode,\n  Asset,\n  RenderNodeMap,\n  RenderAction,\n  FlowIssueMap\n} from 'store/flowContext';\nimport { getTypeConfig } from 'config';\nimport { getType } from 'config/typeConfigs';\nimport { Type, PopTabType } from 'config/interfaces';\n\nconst cx: any = classNames.bind(styles);\n\nexport interface IssuesTabProps {\n  issues: FlowIssueMap;\n  languages: AssetMap;\n  nodes: RenderNodeMap;\n  onToggled: (visible: boolean, tab: PopTabType) => void;\n  onIssueClicked: (issueDetail: IssueDetail) => void;\n  onIssueOpened: (IssueDetail: IssueDetail) => void;\n  popped: string;\n}\n\nexport type IssueDetail = {\n  issues: FlowIssue[];\n  renderObjects: RenderObjects;\n  language: Asset;\n};\n\ntype IssueMap = {\n  [uuid: string]: IssueDetail;\n};\n\nexport interface IssuesTabState {\n  visible: boolean;\n  selectedIssue: FlowIssue;\n  issueDetails: IssueDetail[];\n}\n\nexport interface RenderObjects {\n  renderNode: RenderNode;\n  renderAction?: RenderAction;\n}\n\nconst getIssueKey = (issue: FlowIssue) => {\n  return (issue.action_uuid || issue.node_uuid) + (issue.language || '');\n};\n\nconst getRenderObjects = (issue: FlowIssue, nodes: RenderNodeMap): RenderObjects => {\n  const renderNode = nodes[issue.node_uuid];\n  let renderAction: RenderAction = null;\n\n  if (issue.action_uuid && renderNode) {\n    const actionIdx = issue.action_uuid\n      ? renderNode.node.actions.findIndex((action: Action) => action.uuid === issue.action_uuid)\n      : null;\n\n    if (actionIdx > -1) {\n      const action = renderNode.node.actions[actionIdx];\n      renderAction = {\n        action,\n        config: getTypeConfig(action.type),\n        index: actionIdx\n      };\n    }\n  }\n\n  return {\n    renderNode,\n    renderAction\n  };\n};\n\nexport class IssuesTab extends React.Component<IssuesTabProps, IssuesTabState> {\n  constructor(props: IssuesTabProps) {\n    super(props);\n\n    this.state = {\n      visible: false,\n      selectedIssue: null,\n      issueDetails: this.buildIssueDetails()\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^render/]\n    });\n  }\n\n  public componentDidUpdate(prevProps: IssuesTabProps): void {\n    if (\n      this.props.issues !== prevProps.issues ||\n      prevProps.nodes !== this.props.nodes ||\n      this.props.languages !== prevProps.languages\n    ) {\n      this.setState({ issueDetails: this.buildIssueDetails() });\n    }\n  }\n\n  private buildIssueDetails(): IssueDetail[] {\n    const issueMap: IssueMap = {};\n    if (Object.keys(this.props.nodes).length > 0) {\n      for (const issues of Object.values(this.props.issues)) {\n        for (const issue of issues) {\n          const key = getIssueKey(issue);\n          let issueDetail = issueMap[key];\n          if (!issueDetail) {\n            let language = null;\n            if (issue.language && this.props.languages) {\n              language = this.props.languages[issue.language];\n            }\n\n            const renderObjects = getRenderObjects(issue, this.props.nodes);\n            if (renderObjects.renderNode && (!issue.action_uuid || renderObjects.renderAction)) {\n              issueDetail = {\n                issues: [issue],\n                renderObjects: renderObjects,\n                language\n              };\n            }\n          } else {\n            issueDetail.issues.push(issue);\n          }\n\n          if (issueDetail) {\n            issueMap[key] = issueDetail;\n          }\n        }\n      }\n    }\n\n    return Object.values(issueMap).sort((a: IssueDetail, b: IssueDetail) => {\n      if (a.language && !b.language) {\n        return 1;\n      }\n\n      if (!a.language && b.language) {\n        return -1;\n      }\n\n      if (a.language && b.language && a.language.name !== b.language.name) {\n        return a.language.name.localeCompare(b.language.name);\n      }\n\n      const nodeDifference =\n        a.renderObjects.renderNode.ui.position.top - b.renderObjects.renderNode.ui.position.top;\n\n      if (nodeDifference !== 0) {\n        return nodeDifference;\n      }\n\n      // if we are the same node and have actions sort by those\n      if (a.renderObjects.renderNode.node.uuid === b.renderObjects.renderNode.node.uuid) {\n        if (a.renderObjects.renderAction && b.renderObjects.renderAction) {\n          return a.renderObjects.renderAction.index - b.renderObjects.renderAction.index;\n        }\n      }\n      return 0;\n    });\n  }\n\n  public handleTabClicked(): void {\n    this.props.onToggled(!this.state.visible, PopTabType.ISSUES_TAB);\n\n    this.setState((prevState: IssuesTabState) => {\n      return { visible: !prevState.visible };\n    });\n  }\n\n  private handleIssueClicked(issueDetail: IssueDetail) {\n    this.props.onIssueClicked(issueDetail);\n\n    window.setTimeout(() => {\n      this.props.onIssueOpened(issueDetail);\n    }, 750);\n  }\n\n  public render(): JSX.Element {\n    let issueCount = 0;\n\n    let lastLanguage: Asset = null;\n\n    const issues = this.state.issueDetails.map((details: IssueDetail) => {\n      issueCount += details.issues.length;\n\n      let languageHeader: JSX.Element = null;\n\n      if (details.language && details.language !== lastLanguage) {\n        languageHeader = <div className={styles.language}>{details.language.name}</div>;\n      }\n\n      lastLanguage = details.language;\n\n      let typeConfig: Type = null;\n\n      if (!details.renderObjects.renderNode) {\n        return null;\n      }\n\n      if (details.renderObjects.renderAction) {\n        typeConfig = details.renderObjects.renderAction.config;\n      } else {\n        typeConfig = getTypeConfig(getType(details.renderObjects.renderNode));\n      }\n\n      const locationHeader: JSX.Element = null;\n      const issues = details.issues.map((issue: FlowIssue, num: number) => (\n        <div key={getIssueKey(issue) + num} className={styles.message}>\n          <div className={styles.header}>{typeConfig.name}:</div> {renderIssue(issue)}\n        </div>\n      ));\n\n      return (\n        <div key={getIssueKey(details.issues[0]) + '_detail'}>\n          {languageHeader}\n          <div className={styles.details} onClick={() => this.handleIssueClicked(details)}>\n            {locationHeader}\n            <div className={styles.issues_code}>{issues}</div>\n          </div>\n        </div>\n      );\n    });\n\n    const classes = cx({\n      [styles.visible]: this.state.visible,\n      [styles.hidden]: this.props.popped && this.props.popped !== PopTabType.ISSUES_TAB\n    });\n\n    return (\n      <div className={classes}>\n        <div className={styles.mask} />\n        <PopTab\n          header={`${i18n.t('issues.label', 'Flow Issues')} (${issueCount})`}\n          label={i18n.t('issues.header', 'Flow Issues')}\n          color=\"tomato\"\n          icon=\"fe-warning\"\n          top=\"416px\"\n          visible={this.state.visible}\n          onShow={this.handleTabClicked}\n          onHide={this.handleTabClicked}\n        >\n          <div className={styles.issues_wrapper}>{issues}</div>\n        </PopTab>\n      </div>\n    );\n  }\n}\n","import { combineReducers } from 'redux';\nimport editorState from 'store/editor';\nimport flowContext from 'store/flowContext';\nimport nodeEditor from 'store/nodeEditor';\n\nexport default combineReducers({\n  flowContext,\n  editorState,\n  nodeEditor\n});\n","import { EditorState, initialState as editorState } from 'store/editor';\nimport { FlowContext, initialState as flowContext } from 'store/flowContext';\nimport { initialState as nodeEditor, NodeEditor } from 'store/nodeEditor';\n\nexport default interface AppState {\n  flowContext: FlowContext;\n  editorState: EditorState;\n  nodeEditor: NodeEditor;\n}\n\nexport const initialState: AppState = {\n  flowContext,\n  editorState,\n  nodeEditor\n};\n","import { applyMiddleware, createStore, Middleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from 'store/rootReducer';\nimport AppState, { initialState } from 'store/state';\n\nconst middlewares: Middleware[] = [thunk];\n\nexport default (state: AppState = initialState) => {\n  const store = createStore(\n    rootReducer,\n    state,\n    composeWithDevTools(applyMiddleware(...middlewares))\n  );\n\n  /* istanbul ignore next */\n  if (module.hot) {\n    module.hot.accept('./rootReducer', () => {\n      const { default: nextRootReducer } = require('./rootReducer');\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n};\n","import { react as bindCallbacks } from 'auto-bind';\nimport classNames from 'classnames/bind';\nimport React from 'react';\nimport styles from './TranslatorTab.module.scss';\nimport i18n from 'config/i18n';\nimport { PopTab } from 'components/poptab/PopTab';\nimport { AssetMap, Asset, RenderNodeMap } from 'store/flowContext';\nimport { PopTabType, Type } from 'config/interfaces';\nimport { Action, Category, Case } from 'flowTypes';\nimport { getTypeConfig } from 'config';\nimport {\n  findTranslations,\n  getMergedByType,\n  TranslationState,\n  getFriendlyAttribute,\n  getBundleKey\n} from './helpers';\nimport CheckboxElement from 'components/form/checkbox/CheckboxElement';\nimport { UpdateTranslationFilters } from 'store/thunks';\nimport { getSwitchRouter } from 'components/flow/routers/helpers';\nimport { getType } from 'config/typeConfigs';\nimport { fakePropType } from 'config/ConfigProvider';\n\nconst cx: any = classNames.bind(styles);\n\nexport enum TranslationType {\n  PROPERTY = 'property',\n  CATEGORY = 'category',\n  CASE = 'case'\n}\n\nexport interface TranslationBundle {\n  node_uuid: string;\n  action_uuid?: string;\n  translations: Translation[];\n  translated: number;\n  typeConfig: Type;\n}\n\nexport interface Translation {\n  type: TranslationType;\n  attribute: string;\n  from: string;\n  to: string;\n}\n\nexport interface TranslatorTabProps {\n  localization: { [uuid: string]: any };\n  language: Asset;\n  languages: AssetMap;\n\n  translationFilters: { categories: boolean; rules: boolean };\n\n  nodes: RenderNodeMap;\n  onToggled: (visible: boolean, tab: PopTabType) => void;\n  onTranslationClicked: (bundle: TranslationBundle) => void;\n  onTranslationOpened: (bundle: TranslationBundle) => void;\n  onTranslationFilterChanged: UpdateTranslationFilters;\n  popped: string;\n}\n\nexport interface TranslatorTabState {\n  visible: boolean;\n  selectedTranslation: Translation;\n  translationBundles: TranslationBundle[];\n  optionsVisible: boolean;\n  pctComplete: number;\n  translationFilters: { categories: boolean; rules: boolean };\n}\n\nexport class TranslatorTab extends React.Component<TranslatorTabProps, TranslatorTabState> {\n  public static contextTypes = {\n    config: fakePropType\n  };\n\n  constructor(props: TranslatorTabProps, context: any) {\n    super(props);\n\n    this.state = {\n      visible: false,\n      selectedTranslation: null,\n      translationBundles: [],\n      optionsVisible: false,\n      pctComplete: 0,\n      translationFilters: props.translationFilters || { categories: true, rules: true }\n    };\n\n    bindCallbacks(this, {\n      include: [/^handle/, /^render/, /^toggle/]\n    });\n  }\n\n  public componentWillUnmount(): void {\n    if (this.state.visible) {\n      this.handleTabClicked();\n    }\n  }\n\n  public componentDidUpdate(prevProps: TranslatorTabProps, prevState: TranslatorTabState): void {\n    // traceUpdate(this, prevProps, prevState);\n    if (\n      prevProps.translationFilters !== this.props.translationFilters ||\n      prevProps.localization !== this.props.localization ||\n      prevProps.language !== this.props.language ||\n      !prevState.visible ||\n      prevState.translationFilters !== this.state.translationFilters\n    ) {\n      this.handleUpdateTranslations();\n    }\n  }\n\n  private handleUpdateTranslations(): void {\n    const translationBundles: TranslationBundle[] = [];\n    Object.keys(this.props.nodes).forEach((node_uuid: string) => {\n      const renderNode = this.props.nodes[node_uuid];\n\n      // check for router level translations\n      if (\n        renderNode.node.router &&\n        (this.state.translationFilters.categories || this.state.translationFilters.rules)\n      ) {\n        const typeConfig = getTypeConfig(getType(renderNode));\n\n        let translations: Translation[] = [];\n        if (this.state.translationFilters.categories) {\n          const localizeableKeys = ['name'];\n          renderNode.node.router.categories.forEach((category: Category) => {\n            translations.push(\n              ...findTranslations(\n                TranslationType.CATEGORY,\n                localizeableKeys,\n                category,\n                this.props.localization\n              )\n            );\n          });\n        }\n\n        if (this.state.translationFilters.rules) {\n          const localizeableKeys = ['arguments'];\n          const switchRouter = getSwitchRouter(renderNode.node);\n          if (switchRouter) {\n            switchRouter.cases.forEach((kase: Case) => {\n              translations.push(\n                ...findTranslations(\n                  TranslationType.CASE,\n                  localizeableKeys,\n                  kase,\n                  this.props.localization\n                )\n              );\n            });\n          }\n        }\n\n        if (translations.length > 0) {\n          translationBundles.push({\n            typeConfig,\n            node_uuid,\n            translations,\n            translated: translations.filter((translation: Translation) => !!translation.to).length\n          });\n        }\n      } else {\n        // find attributes from each action\n        renderNode.node.actions.forEach((action: Action) => {\n          const typeConfig = getTypeConfig(action.type);\n          const translations = findTranslations(\n            TranslationType.PROPERTY,\n            typeConfig.localizeableKeys || [],\n            action,\n            this.props.localization\n          );\n\n          if (translations.length > 0) {\n            translationBundles.push({\n              typeConfig,\n              node_uuid,\n              action_uuid: action.uuid,\n              translations,\n              translated: translations.filter((translation: Translation) => !!translation.to).length\n            });\n          }\n        });\n      }\n    });\n\n    const counts = { total: 0, complete: 0 };\n    translationBundles.reduce((counts, bundle) => {\n      counts.total += bundle.translations.length;\n      counts.complete += bundle.translated;\n      return counts;\n    }, counts);\n\n    const pctComplete = counts.total > 0 ? Math.round((counts.complete / counts.total) * 100) : 0;\n\n    const bundles = translationBundles\n      .filter((bundle: TranslationBundle) => bundle.translated < bundle.translations.length)\n      .sort((a: TranslationBundle, b: TranslationBundle) => {\n        return b.translations.length - b.translated - (a.translations.length - a.translated);\n      });\n\n    if (\n      pctComplete !== this.state.pctComplete ||\n      bundles.length !== this.state.translationBundles.length\n    ) {\n      this.setState({\n        pctComplete,\n        translationBundles: bundles\n      });\n    }\n  }\n\n  public handleTabClicked(): void {\n    this.props.onToggled(!this.state.visible, PopTabType.TRANSLATOR_TAB);\n    this.setState((prevState: TranslatorTabState) => {\n      return { visible: !prevState.visible };\n    });\n  }\n\n  public toggleOptions(): void {\n    this.setState({ optionsVisible: !this.state.optionsVisible });\n  }\n\n  private toggleCategories(categories: boolean): void {\n    this.setState(\n      { translationFilters: { categories, rules: this.state.translationFilters.rules } },\n      () => {\n        this.props.onTranslationFilterChanged(this.state.translationFilters);\n      }\n    );\n  }\n  private toggleRules(rules: boolean): void {\n    this.setState(\n      { translationFilters: { rules, categories: this.state.translationFilters.categories } },\n      () => {\n        this.props.onTranslationFilterChanged(this.state.translationFilters);\n      }\n    );\n  }\n\n  private renderMissing(key: string, from: string, summary: string) {\n    if (from) {\n      return (\n        <div key={this.props.language.id + key} className={styles.item}>\n          <div className={styles.text + ' ' + styles.from_text}>{from}</div>\n          <div className={styles.text + ' ' + styles.attribute}>{summary}</div>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  private handleTranslationClicked(bundle: TranslationBundle) {\n    this.props.onTranslationClicked(bundle);\n\n    window.setTimeout(() => {\n      this.props.onTranslationOpened(bundle);\n    }, 750);\n  }\n\n  private handleChangeLanguageClick(e: any): void {\n    this.context.config.onChangeLanguage(this.props.language.id, this.props.language.name);\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  public render(): JSX.Element {\n    // only show change button if container set up to handle it\n    const showChangeButton = this.state.optionsVisible && this.context.config.onChangeLanguage;\n\n    const classes = cx({\n      [styles.visible]: this.state.visible,\n      [styles.hidden]: this.props.popped && this.props.popped !== PopTabType.TRANSLATOR_TAB\n    });\n\n    const optionsClasses = cx({\n      [styles.options]: true,\n      [styles.options_visible]: this.state.optionsVisible,\n      [styles.change_visible]: showChangeButton\n    });\n\n    const filledClasses = cx({\n      [styles.filled]: true,\n      [styles.hundredpct]: this.state.pctComplete === 100\n    });\n\n    const wrapperClasses = cx({\n      [styles.translations_wrapper]: true,\n      [styles.complete]: this.state.translationBundles.length === 0\n    });\n\n    return (\n      <div className={classes}>\n        <PopTab\n          header={`${this.props.language.name} ${i18n.t('translation.label', 'Translations')}`}\n          label={i18n.t('translation.header', 'Flow Translation')}\n          color=\"#777\"\n          icon=\"fe-language\"\n          top=\"243px\"\n          visible={this.state.visible}\n          onShow={this.handleTabClicked}\n          onHide={this.handleTabClicked}\n        >\n          <div key={'translation_wrapper'} className={wrapperClasses}>\n            {this.state.translationBundles.map((bundle: TranslationBundle) => {\n              return (\n                <div\n                  key={this.props.language.id + getBundleKey(bundle)}\n                  className={styles.translate_block}\n                  onClick={() => {\n                    this.handleTranslationClicked(bundle);\n                  }}\n                >\n                  <div className={styles.needs_translation}>\n                    <div className={styles.type_name}>{bundle.typeConfig.name}</div>\n                    {this.renderMissing(\n                      getBundleKey(bundle) + 'categories',\n                      getMergedByType(bundle, TranslationState.MISSING, TranslationType.CATEGORY),\n                      getFriendlyAttribute('categories')\n                    )}\n\n                    {this.renderMissing(\n                      getBundleKey(bundle) + 'rules',\n\n                      getMergedByType(bundle, TranslationState.MISSING, TranslationType.CASE),\n                      getFriendlyAttribute('cases')\n                    )}\n                    {bundle.translations\n                      .filter(\n                        translation =>\n                          !translation.to && translation.type === TranslationType.PROPERTY\n                      )\n                      .map(translation =>\n                        this.renderMissing(\n                          getBundleKey(bundle) + translation.from,\n                          translation.from,\n                          getFriendlyAttribute(translation.attribute)\n                        )\n                      )}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n\n          <div className={optionsClasses} onClick={this.toggleOptions}>\n            <div className={styles.header}>\n              <div className={styles.progress_bar}>\n                <div\n                  style={{ width: `${this.state.pctComplete}%` }}\n                  className={filledClasses}\n                ></div>\n              </div>\n              <div className={styles.toggle}>\n                <span className=\"fe-arrow-up\"></span>\n              </div>\n            </div>\n            <div className={styles.filters}>\n              <div className={styles.checkboxes}>\n                <div>\n                  <CheckboxElement\n                    name={i18n.t('forms.categories', 'categories')}\n                    checked={this.state.translationFilters.categories}\n                    description={'Categories'}\n                    checkboxClassName={styles.checkbox}\n                    onChange={this.toggleCategories}\n                  />\n                </div>\n                <div>\n                  <CheckboxElement\n                    name={i18n.t('forms.rules', 'rules')}\n                    checked={this.state.translationFilters.rules}\n                    description={'Rule Arguments'}\n                    checkboxClassName={styles.checkbox}\n                    onChange={this.toggleRules}\n                  />\n                </div>\n              </div>\n              <div className={styles.pct_complete}>{this.state.pctComplete}%</div>\n            </div>\n            <div className={styles.changeLanguage}>\n              {showChangeButton && (\n                <button onClick={this.handleChangeLanguageClick}>\n                  {i18n.t('forms.use_as_default_language', 'Use as default language')}\n                </button>\n              )}\n            </div>\n          </div>\n        </PopTab>\n      </div>\n    );\n  }\n}\n","import { react as bindCallbacks } from 'auto-bind';\nimport Button, { ButtonTypes } from 'components/button/Button';\nimport Dialog from 'components/dialog/Dialog';\nimport { Fixy } from 'components/fixy/Fixy';\nimport ConnectedFlow from 'components/flow/Flow';\nimport styles from 'components/index.module.scss';\nimport ConnectedLanguageSelector from 'components/languageselector/LanguageSelector';\nimport Loading from 'components/loading/Loading';\nimport Modal from 'components/modal/Modal';\nimport { RevisionExplorer } from 'components/revisions/RevisionExplorer';\nimport { IssuesTab, IssueDetail } from 'components/issues/IssuesTab';\nimport ConfigProvider from 'config';\nimport { fakePropType } from 'config/ConfigProvider';\nimport { FlowDefinition, FlowEditorConfig, AnyAction } from 'flowTypes';\nimport * as React from 'react';\nimport { connect, Provider as ReduxProvider } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport createStore from 'store/createStore';\nimport { ModalMessage } from 'store/editor';\nimport { Asset, Assets, AssetStore, RenderNodeMap, FlowIssueMap } from 'store/flowContext';\nimport { getCurrentDefinition } from 'store/helpers';\nimport AppState from 'store/state';\nimport {\n  CreateNewRevision,\n  createNewRevision,\n  DispatchWithState,\n  FetchFlow,\n  fetchFlow,\n  LoadFlowDefinition,\n  loadFlowDefinition,\n  MergeEditorState,\n  mergeEditorState,\n  onOpenNodeEditor,\n  OnOpenNodeEditor,\n  handleLanguageChange,\n  HandleLanguageChange,\n  UpdateTranslationFilters,\n  updateTranslationFilters\n} from 'store/thunks';\nimport { ACTIVITY_INTERVAL, downloadJSON, renderIf, onNextRender } from 'utils';\nimport { PopTabType } from 'config/interfaces';\nimport { TranslatorTab, TranslationBundle } from './translator/TranslatorTab';\nimport i18n from 'config/i18n';\n\nconst { default: PageVisibility } = require('react-page-visibility');\n\nexport interface FlowEditorContainerProps {\n  config: FlowEditorConfig;\n}\n\nexport interface FlowEditorStoreProps {\n  assetStore: AssetStore;\n  baseLanguage: Asset;\n  language: Asset;\n  languages: Assets;\n  simulating: boolean;\n  translating: boolean;\n  fetchingFlow: boolean;\n  definition: FlowDefinition;\n  issues: FlowIssueMap;\n  fetchFlow: FetchFlow;\n  loadFlowDefinition: LoadFlowDefinition;\n  createNewRevision: CreateNewRevision;\n  mergeEditorState: MergeEditorState;\n  onOpenNodeEditor: OnOpenNodeEditor;\n  handleLanguageChange: HandleLanguageChange;\n  nodes: RenderNodeMap;\n  modalMessage: ModalMessage;\n  saving: boolean;\n  scrollToNode: string;\n  scrollToAction: string;\n  popped: string;\n  updateTranslationFilters: UpdateTranslationFilters;\n}\n\nconst hotStore = createStore();\n\nexport const getLabel = (): JSX.Element => {\n  return <div>testing</div>;\n};\n\n// Root container, wires up context-providers\nexport const FlowEditorContainer: React.SFC<FlowEditorContainerProps> = ({ config }) => {\n  return (\n    <ConfigProvider config={{ ...config }}>\n      <ReduxProvider store={hotStore as any}>\n        <ConnectedFlowEditor />\n      </ReduxProvider>\n    </ConfigProvider>\n  );\n};\n\nexport const contextTypes = {\n  config: fakePropType\n};\n\nexport const editorContainerSpecId = 'editor-container';\nexport const editorSpecId = 'editor';\n\n/**\n * The main editor view for editing a flow\n */\nexport class FlowEditor extends React.Component<FlowEditorStoreProps> {\n  public static contextTypes = contextTypes;\n\n  constructor(props: FlowEditorStoreProps) {\n    super(props);\n    bindCallbacks(this, {\n      include: [/^handle/]\n    });\n  }\n\n  public componentDidMount(): void {\n    const { endpoints, flow, forceSaveOnLoad } = this.context.config;\n    this.props.fetchFlow(endpoints, flow, forceSaveOnLoad);\n  }\n\n  private handleDownloadClicked(): void {\n    downloadJSON(getCurrentDefinition(this.props.definition, this.props.nodes), 'definition');\n  }\n\n  private handleVisibilityChanged(visible: boolean): void {\n    this.props.mergeEditorState({\n      visible,\n      activityInterval: ACTIVITY_INTERVAL\n    });\n  }\n\n  public getAlertModal(): JSX.Element {\n    if (!this.props.modalMessage) {\n      return null;\n    }\n\n    return (\n      <Modal width=\"600px\" show={true}>\n        <Dialog\n          className={styles.alert_modal}\n          title={this.props.modalMessage.title}\n          headerClass=\"alert\"\n          buttons={{\n            primary: {\n              name: 'Ok',\n              onClick: () => {\n                this.props.mergeEditorState({ modalMessage: null });\n              }\n            }\n          }}\n        >\n          <div className={styles.alert_body}>{this.props.modalMessage.body}</div>\n        </Dialog>\n      </Modal>\n    );\n  }\n\n  public getSavingIndicator(): JSX.Element {\n    if (!this.props.saving) {\n      return null;\n    }\n\n    return (\n      <div id=\"saving_animation\" className={styles.saving}>\n        <Fixy>\n          <Loading units={5} color=\"#3498db\" size={7} />\n        </Fixy>\n      </div>\n    );\n  }\n\n  public getFooter(): JSX.Element {\n    return !this.props.fetchingFlow && this.context.config.showDownload ? (\n      <div className={styles.footer}>\n        <div className={styles.download_button}>\n          <Button\n            name={i18n.t('buttons.download', 'Download')}\n            onClick={this.handleDownloadClicked}\n            type={ButtonTypes.primary}\n          />\n        </div>\n      </div>\n    ) : null;\n  }\n\n  private handleLanguageSetting(issueDetail: IssueDetail): void {\n    if (issueDetail.language) {\n      this.props.handleLanguageChange(issueDetail.language);\n    } else {\n      this.props.handleLanguageChange(this.props.baseLanguage);\n    }\n  }\n\n  public handleOpenIssue(issueDetail: IssueDetail): void {\n    this.handleLanguageSetting(issueDetail);\n    this.props.onOpenNodeEditor({\n      originalNode: issueDetail.renderObjects.renderNode,\n      originalAction: issueDetail.renderObjects.renderAction\n        ? (issueDetail.renderObjects.renderAction.action as AnyAction)\n        : null\n    });\n  }\n\n  private handleScrollToNode(node_uuid: string, action_uuid: string): void {\n    if (this.props.scrollToNode === node_uuid && this.props.scrollToAction === action_uuid) {\n      this.props.mergeEditorState({\n        scrollToNode: null,\n        scrollToAction: null\n      });\n    }\n\n    onNextRender(() => {\n      this.props.mergeEditorState({\n        scrollToNode: node_uuid,\n        scrollToAction: action_uuid\n      });\n    });\n  }\n\n  public handleScrollToTranslation(translation: TranslationBundle): void {\n    this.handleScrollToNode(translation.node_uuid, translation.action_uuid);\n  }\n\n  private handleOpenTranslation(translation: TranslationBundle): void {\n    const renderNode = this.props.nodes[translation.node_uuid];\n    const action = translation.action_uuid\n      ? renderNode.node.actions.find(action => action.uuid === translation.action_uuid)\n      : null;\n\n    this.props.onOpenNodeEditor({\n      originalNode: renderNode,\n      originalAction: action\n    });\n  }\n\n  public handleScrollToIssue(issueDetail: IssueDetail): void {\n    this.handleLanguageSetting(issueDetail);\n    const issue = issueDetail.issues[0];\n    this.handleScrollToNode(issue.node_uuid, issue.action_uuid);\n  }\n\n  private handleTabPopped(visible: boolean, tab: PopTabType): void {\n    if (visible) {\n      this.props.mergeEditorState({ popped: tab });\n    } else {\n      this.props.mergeEditorState({ popped: null });\n    }\n  }\n\n  public componentDidUpdate(prevProps: FlowEditorStoreProps): void {\n    // traceUpdate(this, prevProps);\n  }\n\n  public render(): JSX.Element {\n    return (\n      <PageVisibility onChange={this.handleVisibilityChanged}>\n        <div\n          id={editorContainerSpecId}\n          className={this.props.translating ? styles.translating : undefined}\n          data-spec={editorContainerSpecId}\n        >\n          {this.getFooter()}\n          {this.getAlertModal()}\n          <div className={styles.editor} data-spec={editorSpecId}>\n            {renderIf(\n              Object.keys(this.props.nodes || {}).length > 0 &&\n                this.props.languages &&\n                Object.keys(this.props.languages.items).length > 0\n            )(<ConnectedLanguageSelector />)}\n\n            {this.getSavingIndicator()}\n\n            {renderIf(this.props.definition && this.props.language && !this.props.fetchingFlow)(\n              <ConnectedFlow />\n            )}\n\n            {renderIf(this.props.definition && this.props.translating && !this.props.fetchingFlow)(\n              <TranslatorTab\n                language={this.props.language}\n                languages={this.props.languages ? this.props.languages.items : {}}\n                localization={\n                  this.props.definition && this.props.language\n                    ? this.props.definition.localization[this.props.language.id]\n                    : {}\n                }\n                onTranslationClicked={this.handleScrollToTranslation}\n                onTranslationOpened={this.handleOpenTranslation}\n                onTranslationFilterChanged={this.props.updateTranslationFilters}\n                translationFilters={\n                  this.props.definition ? this.props.definition._ui.translation_filters : null\n                }\n                nodes={this.props.nodes}\n                onToggled={this.handleTabPopped}\n                popped={this.props.popped}\n              />\n            )}\n\n            <RevisionExplorer\n              loadFlowDefinition={this.props.loadFlowDefinition}\n              createNewRevision={this.props.createNewRevision}\n              assetStore={this.props.assetStore}\n              onToggled={this.handleTabPopped}\n              popped={this.props.popped}\n            />\n\n            {renderIf(Object.keys(this.props.issues).length > 0)(\n              <IssuesTab\n                issues={this.props.issues}\n                onIssueClicked={this.handleScrollToIssue}\n                onIssueOpened={this.handleOpenIssue}\n                languages={this.props.languages ? this.props.languages.items : {}}\n                nodes={this.props.nodes}\n                onToggled={this.handleTabPopped}\n                popped={this.props.popped}\n              />\n            )}\n            <div id=\"portal-root\" />\n            <div id=\"canvas-portal\" />\n          </div>\n        </div>\n      </PageVisibility>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  flowContext: { definition, issues, nodes, assetStore, baseLanguage },\n  editorState: {\n    translating,\n    language,\n    fetchingFlow,\n    simulating,\n    modalMessage,\n    saving,\n    scrollToAction,\n    scrollToNode,\n    popped\n  }\n}: AppState) => {\n  const languages = assetStore ? assetStore.languages : null;\n\n  return {\n    popped,\n    baseLanguage,\n    modalMessage,\n    saving,\n    simulating,\n    assetStore,\n    translating,\n    language,\n    fetchingFlow,\n    definition,\n    issues,\n    nodes,\n    languages,\n    scrollToAction,\n    scrollToNode\n  };\n};\n\nconst mapDispatchToProps = (dispatch: DispatchWithState) =>\n  bindActionCreators(\n    {\n      fetchFlow,\n      loadFlowDefinition,\n      createNewRevision,\n      mergeEditorState,\n      onOpenNodeEditor,\n      handleLanguageChange,\n      updateTranslationFilters\n    },\n    dispatch\n  );\n\nexport const ConnectedFlowEditor = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FlowEditor);\n\nexport default FlowEditorContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './global.module.scss';\nimport 'static/fonts/floweditor/style.css';\n\nimport FlowEditor from 'components';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\n// bring in our temba-components if they aren't already registered\nif (typeof customElements !== 'undefined' && !customElements.get('temba-textinput')) {\n  import('@nyaruka/temba-components').then(() => {\n    console.log('Loading temba components');\n  });\n}\n\nwindow.showFlowEditor = (ele, config) => {\n  ReactDOM.render(<FlowEditor config={config} />, ele);\n};\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"context_explorer\":\"ContextExplorer_context_explorer__wmqkX\",\"visible\":\"ContextExplorer_visible__2gRjv\",\"panel\":\"ContextExplorer_panel__gz824\",\"close_button\":\"ContextExplorer_close_button__26zA3\",\"row\":\"ContextExplorer_row__2rF84\",\"arrow_right\":\"ContextExplorer_arrow_right__22xI1\",\"has_children\":\"ContextExplorer_has_children__2eFg-\",\"open\":\"ContextExplorer_open__2duis\",\"key\":\"ContextExplorer_key__AE_c_\",\"clipboard\":\"ContextExplorer_clipboard__ZgQfN\",\"key_summary\":\"ContextExplorer_key_summary__2xvsu\",\"colon\":\"ContextExplorer_colon__3TZUN\",\"str_value\":\"ContextExplorer_str_value__2W3Fs\",\"footer\":\"ContextExplorer_footer__xM3R1\",\"hide_checkbox\":\"ContextExplorer_hide_checkbox__w80HV\",\"help\":\"ContextExplorer_help__23pVD\",\"empty_toggle\":\"ContextExplorer_empty_toggle__29mpj\",\"message\":\"ContextExplorer_message__2x4s4\",\"expression\":\"ContextExplorer_expression__3MKM4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"yellow\":\"Sticky_yellow__39XW4\",\"color_option\":\"Sticky_color_option__32vU5\",\"sticky\":\"Sticky_sticky__3QUKK\",\"blue\":\"Sticky_blue__3s2JL\",\"purple\":\"Sticky_purple__278EO\",\"gray\":\"Sticky_gray__39re9\",\"green\":\"Sticky_green__3BQ0M\",\"color_chooser_container\":\"Sticky_color_chooser_container__2lT4F\",\"color_chooser\":\"Sticky_color_chooser__3Jbqj\",\"sticky_container\":\"Sticky_sticky_container__CAgg9\",\"selected\":\"Sticky_selected__1Ra33\",\"removal\":\"Sticky_removal__2Ktvw\",\"title_wrapper\":\"Sticky_title_wrapper__2QWs9\",\"remove_button\":\"Sticky_remove_button__2jDO8\",\"title\":\"Sticky_title__1kkPN\",\"confirmation\":\"Sticky_confirmation__wEJ6P\",\"body_wrapper\":\"Sticky_body_wrapper__3vHL0\",\"body\":\"Sticky_body__18mNO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"node_container\":\"Node_node_container__2eaRs\",\"uuid\":\"Node_uuid__1gU_w\",\"ghost\":\"Node_ghost__1rJWj\",\"nondragged\":\"Node_nondragged__3odZa\",\"selected\":\"Node_selected__1ck3F\",\"node\":\"Node_node__2ympr\",\"immutable\":\"Node_immutable__2NDYM\",\"save_as\":\"Node_save_as__27Fv-\",\"save_result\":\"Node_save_result__cnC6y\",\"result_name\":\"Node_result_name__1F10Q\",\"cropped\":\"Node_cropped__3mV37\",\"exit_table\":\"Node_exit_table__3NybR\",\"exits\":\"Node_exits__3zABv\",\"add\":\"Node_add__3PamH\",\"drag_group\":\"Node_drag_group__1h4JV\",\"flow_start\":\"Node_flow_start__2ZLmX\",\"flow_start_message\":\"Node_flow_start_message__21Gdu\",\"active\":\"Node_active__31xXM\",\"pulse\":\"Node_pulse__14AYP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"random\":\"shared_random__URuHQ\",\"issues\":\"shared_issues__2JPEb\",\"header\":\"shared_header__whMnp\",\"icon\":\"shared_icon__1igRB\",\"title\":\"shared_title__1WSZR\",\"summary\":\"shared_summary__1XTGq\",\"issue_help\":\"shared_issue_help__1XuTL\",\"wait_for_audio\":\"shared_wait_for_audio__1LjH-\",\"wait_for_image\":\"shared_wait_for_image__3VU9W\",\"wait_for_video\":\"shared_wait_for_video__1nv-a\",\"wait_for_location\":\"shared_wait_for_location__2al5E\",\"wait_for_menu\":\"shared_wait_for_menu__hot7M\",\"wait_for_digits\":\"shared_wait_for_digits__35WPZ\",\"wait_for_response\":\"shared_wait_for_response__ZKUbx\",\"add_contact_groups\":\"shared_add_contact_groups__2dqfS\",\"remove_contact_groups\":\"shared_remove_contact_groups__1dJrQ\",\"send_email\":\"shared_send_email__dY51y\",\"send_broadcast\":\"shared_send_broadcast__3LXs5\",\"msg\":\"shared_msg__28OwU\",\"say_msg\":\"shared_say_msg__2U3R0\",\"send_msg\":\"shared_send_msg__2tEfv\",\"open_ticket\":\"shared_open_ticket__2NPzK\",\"transfer_airtime\":\"shared_transfer_airtime__1H5tV\",\"enter_flow\":\"shared_enter_flow__XHnXb\",\"start_session\":\"shared_start_session__1f3aq\",\"set_run_result\":\"shared_set_run_result__1QltP\",\"add_input_labels\":\"shared_add_input_labels__2pTX0\",\"add_contact_urn\":\"shared_add_contact_urn__3nXG-\",\"set_contact_name\":\"shared_set_contact_name__KV1Re\",\"set_contact_field\":\"shared_set_contact_field__3VSZH\",\"set_contact_language\":\"shared_set_contact_language__4ZBkW\",\"set_contact_channel\":\"shared_set_contact_channel__3NhjI\",\"play_audio\":\"shared_play_audio__2OF7K\",\"missing\":\"shared_missing__2oICX\",\"missing_asset\":\"shared_missing_asset__b9Nts\",\"call_classifier\":\"shared_call_classifier__3zcuw\",\"split_by_random\":\"shared_split_by_random__Zh1SY\",\"split_by_expression\":\"shared_split_by_expression__3k23C\",\"split_by_groups\":\"shared_split_by_groups__5EnH4\",\"split_by_contact_field\":\"shared_split_by_contact_field__1XjX5\",\"split_by_intent\":\"shared_split_by_intent__1H9sN\",\"split_by_run_result\":\"shared_split_by_run_result__X4-Wp\",\"split_by_scheme\":\"shared_split_by_scheme__3L9lW\",\"call_resthook\":\"shared_call_resthook__16wqp\",\"call_webhook\":\"shared_call_webhook__1h1Cb\",\"breaks\":\"shared_breaks__2F4AL\",\"url\":\"shared_url__1vtQK\",\"node_asset\":\"shared_node_asset__2MOdQ\",\"node_group\":\"shared_node_group__ju7iK\",\"node_label\":\"shared_node_label__1lQNA\",\"advanced_title\":\"shared_advanced_title__2auaT\",\"alert\":\"shared_alert__1JnkA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"action\":\"Action_action__NVQRK\",\"has_router\":\"Action_has_router__1Ad-S\",\"body\":\"Action_body__RtQCZ\",\"add_contact_urn\":\"Action_add_contact_urn__3Z706\",\"add_input_labels\":\"Action_add_input_labels__3IeO3\",\"send_msg\":\"Action_send_msg__1QYPk\",\"set_contact_field\":\"Action_set_contact_field__1HDvu\",\"set_contact_name\":\"Action_set_contact_name__1woBb\",\"call_webhook\":\"Action_call_webhook__2kR_s\",\"call_resthook\":\"Action_call_resthook__2zGlX\",\"set_contact_language\":\"Action_set_contact_language__G9Ko5\",\"set_contact_channel\":\"Action_set_contact_channel__1YEwX\",\"add_contact_groups\":\"Action_add_contact_groups__3H0fU\",\"remove_contact_groups\":\"Action_remove_contact_groups__3h7vs\",\"play_audio\":\"Action_play_audio__ShGHx\",\"say_msg\":\"Action_say_msg__3CqFc\",\"set_run_result\":\"Action_set_run_result__1CLz_\",\"send_email\":\"Action_send_email__2MDnO\",\"send_broadcast\":\"Action_send_broadcast__1SCyf\",\"transfer_airtime\":\"Action_transfer_airtime__2LvoA\",\"open_ticket\":\"Action_open_ticket__3afC2\",\"missing\":\"Action_missing__1Ghl9\",\"enter_flow\":\"Action_enter_flow__2ogxI\",\"call_classifier\":\"Action_call_classifier__tKBlJ\",\"start_session\":\"Action_start_session__1yM-7\",\"not_localizable\":\"Action_not_localizable__2rKMk\",\"overlay\":\"Action_overlay__ZEDK0\",\"immutable\":\"Action_immutable__qAZdN\",\"translate_from\":\"Action_translate_from__3BID_\",\"translate_to\":\"Action_translate_to__TPeJw\",\"translating\":\"Action_translating__2n0n7\",\"missing_localization\":\"Action_missing_localization__1zslf\",\"localized\":\"Action_localized__3Mwip\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"group\":\"CaseElement_group__1fyWB\",\"divider\":\"CaseElement_divider__mkeU9\",\"kase\":\"CaseElement_kase__2vP_O\",\"has_intent\":\"CaseElement_has_intent__z8znp\",\"choice\":\"CaseElement_choice__2RZct\",\"has_top_intent\":\"CaseElement_has_top_intent__3fsYv\",\"multi_operand\":\"CaseElement_multi_operand__eTLuc\",\"form_group\":\"CaseElement_form_group__1PJTx\",\"single_operand\":\"CaseElement_single_operand__o0kaN\",\"categorize_as\":\"CaseElement_categorize_as__XFySp\",\"category\":\"CaseElement_category__2yfW1\",\"remove_icon\":\"CaseElement_remove_icon__1PFzv\",\"dnd_icon\":\"CaseElement_dnd_icon__wjvHF\",\"relative_date\":\"CaseElement_relative_date__DGZXt\",\"empty\":\"CaseElement_empty__35kBB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"link\":\"WebhookRouterForm_link__1jXIk\",\"info\":\"WebhookRouterForm_info__qgGFO\",\"method\":\"WebhookRouterForm_method__1IR0U\",\"url\":\"WebhookRouterForm_url__T29iJ\",\"code\":\"WebhookRouterForm_code__3x1A-\",\"instructions\":\"WebhookRouterForm_instructions__3LG_X\",\"headers_title\":\"WebhookRouterForm_headers_title__1GMIG\",\"remove_ico\":\"WebhookRouterForm_remove_ico__l-jUh\",\"example\":\"WebhookRouterForm_example__1ev4D\",\"header\":\"WebhookRouterForm_header__2waYT\",\"header_name\":\"WebhookRouterForm_header_name__3eQVG\",\"header_value\":\"WebhookRouterForm_header_value__1Fxrk\",\"body_form\":\"WebhookRouterForm_body_form__3BHas\",\"req_body\":\"WebhookRouterForm_req_body__1rKz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"hidden\":\"RevisionExplorer_hidden__N5tXK\",\"mask\":\"RevisionExplorer_mask__14GgE\",\"visible\":\"RevisionExplorer_visible__365U6\",\"explorer_wrapper\":\"RevisionExplorer_explorer_wrapper__3FIUU\",\"explorer\":\"RevisionExplorer_explorer__1yYSY\",\"revisions\":\"RevisionExplorer_revisions__1nYCu\",\"revision\":\"RevisionExplorer_revision__3f_kl\",\"selected\":\"RevisionExplorer_selected__2zSg4\",\"button\":\"RevisionExplorer_button__2srjQ\",\"current\":\"RevisionExplorer_current__Zlqcr\",\"created_on\":\"RevisionExplorer_created_on__qKoNX\",\"email\":\"RevisionExplorer_email__Z9xlH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"ele\":\"FormElement_ele__1FpYO\",\"border\":\"FormElement_border__3bx0s\",\"error_list\":\"FormElement_error_list__1SrT3\",\"error\":\"FormElement_error__1Peb9\",\"arrow_up\":\"FormElement_arrow_up__2HvAv\",\"send_msg_error\":\"FormElement_send_msg_error__3LIUw\",\"label\":\"FormElement_label__2dN0p\",\"invalid\":\"FormElement_invalid__1fOa-\",\"help_text\":\"FormElement_help_text__a6EcV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"checkbox\":\"SendMsgForm_checkbox__-JOyy\",\"quick_reply_summary\":\"SendMsgForm_quick_reply_summary__DkA4i\",\"type_choice\":\"SendMsgForm_type_choice__1dciq\",\"url_attachment\":\"SendMsgForm_url_attachment__1Su5F\",\"upload\":\"SendMsgForm_upload__22kwL\",\"remove_upload\":\"SendMsgForm_remove_upload__2qqap\",\"url\":\"SendMsgForm_url__2eR-o\",\"remove\":\"SendMsgForm_remove__20sFL\",\"existing_quick_replies\":\"SendMsgForm_existing_quick_replies__W866I\",\"existing_quick_reply\":\"SendMsgForm_existing_quick_reply__2C65m\",\"add_quick_replies\":\"SendMsgForm_add_quick_replies__3vLIC\",\"template_text\":\"SendMsgForm_template_text__1zkKJ\",\"variable\":\"SendMsgForm_variable__3mVDI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"delimited\":\"ResultRouterForm_delimited__D-_e5\",\"non_delimited\":\"ResultRouterForm_non_delimited__yDNVq\",\"lead_in\":\"ResultRouterForm_lead_in__2myeK\",\"lead_in_sub\":\"ResultRouterForm_lead_in_sub__3oqJC\",\"result_select\":\"ResultRouterForm_result_select__1cu2c\",\"result_select_delimited\":\"ResultRouterForm_result_select_delimited__f-y6Z\",\"should_delimit\":\"ResultRouterForm_should_delimit__1Z8-4\",\"field_number\":\"ResultRouterForm_field_number__2WFxV\",\"delimiter\":\"ResultRouterForm_delimiter__2i5Hr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"titlebar\":\"TitleBar_titlebar__1_zDw\",\"titletext\":\"TitleBar_titletext__3s2we\",\"normal\":\"TitleBar_normal__z0QaD\",\"remove_confirm\":\"TitleBar_remove_confirm__3ywj-\",\"remove_button\":\"TitleBar_remove_button__2lO9D\",\"up_button\":\"TitleBar_up_button__2Imiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"pop_wrapper\":\"PopTab_pop_wrapper__2kOzQ\",\"visible\":\"PopTab_visible__2udNm\",\"popped\":\"PopTab_popped__2Imlz\",\"tab_wrapper\":\"PopTab_tab_wrapper__3n1QM\",\"tab\":\"PopTab_tab__2Rm5M\",\"label\":\"PopTab_label__nf1JX\",\"icon\":\"PopTab_icon__irClb\",\"header\":\"PopTab_header__1NqmE\",\"header_label\":\"PopTab_header_label__2YD7z\",\"close\":\"PopTab_close__3O5BS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"hidden\":\"IssuesTab_hidden__1l3_C\",\"message\":\"IssuesTab_message__AofWc\",\"header\":\"IssuesTab_header__273ne\",\"issues_wrapper\":\"IssuesTab_issues_wrapper__3mP8X\",\"language\":\"IssuesTab_language__3MoIp\",\"mask\":\"IssuesTab_mask__1b_sl\",\"visible\":\"IssuesTab_visible__2FRUR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"count\":\"CharCount_count__ABAEX\",\"tooltip\":\"CharCount_tooltip__1p2RV\",\"fine_print\":\"CharCount_fine_print__RYzHy\",\"divider\":\"CharCount_divider__3pF0R\",\"tooltip_text\":\"CharCount_tooltip_text__3ruDu\",\"unicode\":\"CharCount_unicode__1nLUL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"MediaPlayer_player__gYGWS\",\"playing\":\"MediaPlayer_playing__2Jrw_\",\"button\":\"MediaPlayer_button__rRXz1\",\"circles\":\"MediaPlayer_circles__1pr_0\",\"circle_background\":\"MediaPlayer_circle_background__OMPcS\",\"circle_foreground\":\"MediaPlayer_circle_foreground__1L6K9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"translating_categories\":\"RouterLocalizationForm_translating_categories__34-3g\",\"translating_category\":\"RouterLocalizationForm_translating_category__1GtBO\",\"translating_from\":\"RouterLocalizationForm_translating_from__1jvjb\",\"translating_to\":\"RouterLocalizationForm_translating_to__1m7uk\",\"translating_operator_title\":\"RouterLocalizationForm_translating_operator_title__3vA3V\",\"translating_operator_instructions\":\"RouterLocalizationForm_translating_operator_instructions___Yv3N\",\"translating_operator_container\":\"RouterLocalizationForm_translating_operator_container__39jsM\",\"translating_operator\":\"RouterLocalizationForm_translating_operator__AgpTS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"drag_helper\":\"DragHelper_drag_helper__a_fFa\",\"visible\":\"DragHelper_visible__1Z4lg\",\"arrow\":\"DragHelper_arrow__YH1ED\",\"tail\":\"DragHelper_tail__12x7O\",\"help_text\":\"DragHelper_help_text__2luNE\",\"head\":\"DragHelper_head__3ViUG\",\"bold\":\"DragHelper_bold__2v--u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"editor\":\"components_editor__36a9s\",\"translating\":\"components_translating__1uBgy\",\"footer\":\"components_footer__1OFgP\",\"download_button\":\"components_download_button__392jz\",\"alert_body\":\"components_alert_body__2Bxt0\",\"alert_modal\":\"components_alert_modal__3xFu-\",\"saving\":\"components_saving__1mebj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"quick_replies\":\"SendMsg_quick_replies__2bre8\",\"attachment\":\"SendMsg_attachment__1JoQl\",\"summary\":\"SendMsg_summary__2c05X\",\"whatsapp\":\"SendMsg_whatsapp__2O95I\",\"facebook\":\"SendMsg_facebook__30JZ8\",\"line\":\"SendMsg_line__LMI4I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"message\":\"AssetSelector_message__1viBV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"CheckboxElement_label__3vFGD\",\"title\":\"CheckboxElement_title__3QShp\",\"description\":\"CheckboxElement_description__3BguK\",\"description_solo\":\"CheckboxElement_description_solo__2o0rh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_element\":\"CurrencyElement_form_element__F0wio\",\"transfer\":\"CurrencyElement_transfer__1IAVm\",\"currency\":\"CurrencyElement_currency__278L2\",\"amount\":\"CurrencyElement_amount__fJKsJ\",\"remove\":\"CurrencyElement_remove__3D5_y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"params\":\"SubflowRouterForm_params__2LM8K\",\"param\":\"SubflowRouterForm_param__Vq8O7\",\"param_name\":\"SubflowRouterForm_param_name__1GlRT\",\"param_input\":\"SubflowRouterForm_param_input__2fL5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"btn\":\"Button_btn__1hdG6\",\"disabled\":\"Button_disabled__xk6Qi\",\"primary\":\"Button_primary__3PDu-\",\"active\":\"Button_active__3BxT0\",\"secondary\":\"Button_secondary__1LfJY\",\"tertiary\":\"Button_tertiary__3UJsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"pill\":\"Pill_pill__3FyMl\",\"clickable\":\"Pill_clickable__24gn3\",\"icon\":\"Pill_icon__QZrb0\",\"large\":\"Pill_large__3mcHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"recipients\":\"SendBroadcast_recipients__1ZSQV\",\"node\":\"SendBroadcast_node__26RLX\",\"to\":\"SendBroadcast_to__25_7K\",\"name\":\"SendBroadcast_name__RNJWu\",\"icon\":\"SendBroadcast_icon__2YfpF\",\"more\":\"SendBroadcast_more__11MJm\",\"message\":\"SendBroadcast_message__6ZIco\",\"line\":\"SendBroadcast_line__3Dm3R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"case_list_container\":\"CaseList_case_list_container__3PSnP\",\"scrolling\":\"CaseList_scrolling__2HZTN\",\"case_list\":\"CaseList_case_list__8CbuZ\",\"kase\":\"CaseList_kase__1FwXZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"MenuRouterForm_lead_in__253j6\",\"digit\":\"MenuRouterForm_digit__ruJhi\",\"category\":\"MenuRouterForm_category__2Khjv\",\"menu\":\"MenuRouterForm_menu__OrNSa\",\"menu_option\":\"MenuRouterForm_menu_option__2e-jl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"lead_in\":\"RandomRouterForm_lead_in__2iUt2\",\"bucket_select\":\"RandomRouterForm_bucket_select__5jt8Q\",\"bucket_list\":\"RandomRouterForm_bucket_list__14I85\",\"bucket_name\":\"RandomRouterForm_bucket_name__t3I5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeout_control_container\":\"TimeoutControl_timeout_control_container__ChGjA\",\"left_section\":\"TimeoutControl_left_section__23W9H\",\"label\":\"TimeoutControl_label__3L-JA\",\"checkbox\":\"TimeoutControl_checkbox__NYV4k\",\"drop_down\":\"TimeoutControl_drop_down__2Yy9r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"canvas_container\":\"Canvas_canvas_container__oR3SR\",\"canvas_background\":\"Canvas_canvas_background__3UutW\",\"canvas\":\"Canvas_canvas__XH7zY\",\"drag_selection\":\"Canvas_drag_selection__3wxA2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_size\":\"20\",\"node_spacing\":\"13\",\"node_padding\":\"3\",\"background-size\":\"13\",\"language\":\"LanguageSelector_language__3Q3TZ\",\"language_link\":\"LanguageSelector_language_link__32yIO\",\"active\":\"LanguageSelector_active__3RqNy\",\"separator\":\"LanguageSelector_separator__2oanc\"};"],"sourceRoot":""}